[{"path":"https://yunuuuu.github.io/ggalign/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 ggalign authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://yunuuuu.github.io/ggalign/articles/FAQ.html","id":"why-i-cannot-add-a-dendrogram-with-reorder_group-true-behind-a-dendrogram-with-reorder_group-false","dir":"Articles","previous_headings":"","what":"Why I cannot add a dendrogram with reorder_group = TRUE behind a dendrogram with reorder_group = FALSE?","title":"FAQ","text":"Note: always prevent users reordering layout axis twice. reorder_group = FALSE used, reordering heatmap occurs within group. long ordering within group remains consistent, two dendrograms can placed axis heatmap. Let’s assume panels represents group observation index represents ordered index observations. code provided, panels initialized ungrouped index unordered: dose initialized panels. add dendrogram reorder_group = FALSE; ’ll something like (Since reorder_group = FALSE, panels won’t changed): However, dendrogram reorder_group = TRUE added, reorder panels. , panel levels sampled create new groups: prevent reordering layout axis twice, ensure new_index matches index (index NULL). done maintain consistency prevent conflicts ordering heatmap.","code":"panels <- NULL index <- NULL set.seed(2L) group <- sample(letters[1:3], ncol(small_mat), replace = TRUE) h <- ggheatmap(small_mat) +     hmanno(\"t\") +     align_group(group) panels <- factor(group) h <- h + align_dendro(reorder_group = FALSE) # always remember dendrogram will initialize the index, here, we extract the # index from the underlying dendrogram index <- stats::order.dendrogram(ggalign_stat(h, \"top\", 2L)) panels <- factor(panels, sample(levels(panels))) new_index <- unlist(split(index, panels[index]),     recursive = FALSE, use.names = FALSE ) all(index == new_index) #> [1] FALSE h + align_dendro(reorder_group = TRUE) #> Error in `align_dendro()`: #> ! `align_dendro()` disrupt the previously established order of the #>   layout x-axis"},{"path":"https://yunuuuu.github.io/ggalign/articles/FAQ.html","id":"can-i-change-the-default-data-for-all-geoms","dir":"Articles","previous_headings":"","what":"Can I change the default data for all geoms?","title":"FAQ","text":"function ggalign requires specific data formats operations. need transform filter data individual geoms, can use data argument within geom. However, multiple geoms want consistent transformation applied across , can utilize plot_data argument ggalign() ggpanel() function. allows transform default data additive geoms.","code":""},{"path":"https://yunuuuu.github.io/ggalign/articles/FAQ.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"FAQ","text":"","code":"sessionInfo() #> R version 4.4.1 (2024-06-14) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.5 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggalign_0.0.4 ggplot2_3.5.1 #>  #> loaded via a namespace (and not attached): #>  [1] vctrs_0.6.5       cli_3.6.3         knitr_1.48        rlang_1.1.4       #>  [5] xfun_0.47         generics_0.1.3    textshaping_0.4.0 jsonlite_1.8.9    #>  [9] glue_1.7.0        colorspace_2.1-1  htmltools_0.5.8.1 ragg_1.3.3        #> [13] sass_0.4.9        fansi_1.0.6       scales_1.3.0      rmarkdown_2.28    #> [17] grid_4.4.1        tibble_3.2.1      evaluate_1.0.0    munsell_0.5.1     #> [21] jquerylib_0.1.4   fastmap_1.2.0     yaml_2.3.10       lifecycle_1.0.4   #> [25] compiler_4.4.1    dplyr_1.1.4       fs_1.6.4          pkgconfig_2.0.3   #> [29] systemfonts_1.1.0 digest_0.6.37     R6_2.5.1          tidyselect_1.2.1  #> [33] utf8_1.2.4        pillar_1.9.0      magrittr_2.0.3    bslib_0.8.0       #> [37] withr_3.0.1       tools_4.4.1       gtable_0.3.5      pkgdown_2.1.1     #> [41] cachem_1.1.0      desc_1.4.3"},{"path":"https://yunuuuu.github.io/ggalign/articles/heatmap-layout.html","id":"input-data","dir":"Articles","previous_headings":"","what":"Input data","title":"Heatmap Layout","text":"data input can numeric character vector, data frame, data can converted matrix.","code":"set.seed(123) small_mat <- matrix(rnorm(81), nrow = 9) rownames(small_mat) <- paste0(\"row\", seq_len(nrow(small_mat))) colnames(small_mat) <- paste0(\"column\", seq_len(ncol(small_mat))) ggheatmap(small_mat)"},{"path":"https://yunuuuu.github.io/ggalign/articles/heatmap-layout.html","id":"heatmap-body","dir":"Articles","previous_headings":"","what":"Heatmap body","title":"Heatmap Layout","text":"ggplot2 usage, matrix input converted long formated data frame drawing. default mapping use aes(.data$.x, .data$.y), can controlled using mapping argument. data underlying ggplot object contains following columns: .xpanel .ypanel: column row panel .x .y: x y coordinates .row_names .column_names: factor row column names original matrix (applicable names exist). .row_index .column_index: row column index original matrix. value: actual matrix value. can treat heatmap_layout() object normal ggplot2 object default mapping data. can add ggplot2 elements usual.  default, ’ll add heatmap layer. set filling = FALSE, blank heamtap drawn.","code":"ggheatmap(small_mat) + geom_point() + scale_fill_viridis_c() ggheatmap(small_mat, filling = FALSE)"},{"path":"https://yunuuuu.github.io/ggalign/articles/heatmap-layout.html","id":"heatmap-annotations","dir":"Articles","previous_headings":"","what":"Heatmap annotations","title":"Heatmap Layout","text":"Heatmap annotations provide additional information rows columns heatmap can placed top, left, bottom, right. annotation stack_layout() object internally, capable holding multiple plots. default, ggheatmap() initialize active context, additions placed within heatmap body. can use hmanno() set active context, directing subsequent additions position. active context allows custom layout adjustments addition various plot types. following example, align_kmeans() used group columns 3 panels. doesn’t matter added top bottom since won’t add plot area:  can add align_*() function annotation. details align_*() functions, refer vignette(\"align-layout\") vignette(\"align-plot\").  example: hmanno(\"r\") change active context right heatmap. align_dendro(k = 3L) adds dendrogram right-side annotation context sets active plot annotation stack. geom_point(aes(color = factor(branch))) added active plot within annotation stack.","code":"ggheatmap(small_mat) +     hmanno(\"t\") +     align_kmeans(3L) ggheatmap(small_mat) +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     hmanno(\"r\") +     align_dendro(k = 3L) +     geom_point(aes(color = factor(branch)))"},{"path":"https://yunuuuu.github.io/ggalign/articles/heatmap-layout.html","id":"control-size","dir":"Articles","previous_headings":"","what":"Control size","title":"Heatmap Layout","text":"can use hmanno() control relative sizes heatmap body whole annotation stack. position NULL: can use width height arguments control relative (can also provide unit object) width height heatmap body. position NULL: can use size argument control relative width (left right annotation) height (top bottom annotation) whole annotation stack.   can use unit() define size.  align_*() functions size argument control relative width (left right annotation) height (top bottom annotation) single plot whole annotation stack.","code":"ggheatmap(small_mat) +     scale_fill_viridis_c() +     hmanno(height = 1) +     hmanno(\"t\", size = 2) +     align_dendro() +     ggalign(data = rowSums) +     geom_bar(aes(y = value, fill = .x), stat = \"identity\") ggheatmap(small_mat) +     scale_fill_viridis_c() +     hmanno(\"t\", size = 1) +     align_dendro() +     ggalign(data = rowSums) +     geom_bar(aes(y = value, fill = .x), stat = \"identity\") ggheatmap(small_mat) +     scale_fill_viridis_c() +     hmanno(\"t\", size = unit(30, \"mm\")) +     align_dendro() +     ggalign(data = rowSums) +     geom_bar(aes(y = value, fill = .x), stat = \"identity\") ggheatmap(small_mat) +     scale_fill_viridis_c() +     hmanno(\"l\", size = 0.2) +     ggalign(data = rowSums, aes(x = value), size = unit(10, \"mm\")) +     geom_bar(         aes(y = .y, fill = factor(.y)),         stat = \"identity\",         orientation = \"y\"     ) +     scale_fill_brewer(palette = \"Set1\", guide = \"none\") +     scale_x_reverse()"},{"path":"https://yunuuuu.github.io/ggalign/articles/heatmap-layout.html","id":"alignment-of-axis-titles","dir":"Articles","previous_headings":"","what":"Alignment of axis titles","title":"Heatmap Layout","text":"default, ggheatmap() won’t align axis titles.  align axis titles, can set free_labs = NULL hmanno() function. Alternatively, boolean value single string containing one axis positions (“t”, “l”, “b”, “r”) indicate axis titles free alignment. position NULL: free_labs argument controls alignment heatmap body’s axis titles. set waiver(), inherit parent layout. top bottom annotations, inherits left (“l”) right (“r”) axes. left right annotations, inherits top (“t”) bottom (“b”) axes.  align_*() functions include free_labs argument, , default, inherits annotatioon stack. allows control alignment plot individually.","code":"ggheatmap(small_mat) +     scale_fill_viridis_c() +     ylab(\"Heatmap title\") +     hmanno(\"t\", size = unit(30, \"mm\")) +     align_dendro() +     ylab(\"Annotation title\") ggheatmap(small_mat) +     hmanno(free_labs = NULL) +     scale_fill_viridis_c() +     ylab(\"Heatmap title\") +     hmanno(\"t\", size = unit(30, \"mm\")) +     align_dendro() +     ylab(\"Annotation title\") ggheatmap(small_mat) +     hmanno(free_labs = NULL) +     scale_fill_viridis_c() +     ylab(\"Heatmap title\") +     hmanno(\"t\", size = unit(30, \"mm\"), free_labs = \"l\") +     align_dendro() +     ylab(\"Annotation title\")"},{"path":"https://yunuuuu.github.io/ggalign/articles/heatmap-layout.html","id":"removing-spaces-when-aligning-elements","dir":"Articles","previous_headings":"","what":"Removing spaces when aligning elements","title":"Heatmap Layout","text":"default, ’ll align elements plot, can sometimes lead unwanted spacing. Consider following example:  case, left annotation stack positioned far heatmap body due wide axis labels top annotation stack. occurs top annotation stack aligned heatmap body. fix , can remove left borders around panel top annotation stack setting free_spaces = \"l\".  free_labs argument, can control free_spaces argument individual plot align_*() function.","code":"ggheatmap(small_mat) +     scale_fill_viridis_c() +     hmanno(\"t\", size = unit(30, \"mm\")) +     align_dendro() +     scale_y_continuous(         expand = expansion(),         labels = ~ paste(\"very very long labels\", .x)     ) +     hmanno(\"l\") +     align_dendro() +     scale_x_reverse(expand = expansion()) ggheatmap(small_mat) +     scale_fill_viridis_c() +     hmanno(\"t\", size = unit(30, \"mm\"), free_spaces = \"l\") +     align_dendro() +     scale_y_continuous(         expand = expansion(),         labels = ~ paste(\"very very long labels\", .x)     ) +     hmanno(\"l\") +     align_dendro() +     scale_x_reverse(expand = expansion())"},{"path":"https://yunuuuu.github.io/ggalign/articles/heatmap-layout.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Heatmap Layout","text":"","code":"sessionInfo() #> R version 4.4.1 (2024-06-14) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.5 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggalign_0.0.4 ggplot2_3.5.1 #>  #> loaded via a namespace (and not attached): #>  [1] gtable_0.3.5       jsonlite_1.8.9     highr_0.11         dplyr_1.1.4        #>  [5] compiler_4.4.1     tidyselect_1.2.1   tidyr_1.3.1        jquerylib_0.1.4    #>  [9] systemfonts_1.1.0  scales_1.3.0       textshaping_0.4.0  ggh4x_0.2.8        #> [13] yaml_2.3.10        fastmap_1.2.0      R6_2.5.1           labeling_0.4.3     #> [17] generics_0.1.3     knitr_1.48         tibble_3.2.1       desc_1.4.3         #> [21] munsell_0.5.1      RColorBrewer_1.1-3 bslib_0.8.0        pillar_1.9.0       #> [25] rlang_1.1.4        utf8_1.2.4         cachem_1.1.0       xfun_0.47          #> [29] fs_1.6.4           sass_0.4.9         viridisLite_0.4.2  cli_3.6.3          #> [33] pkgdown_2.1.1      withr_3.0.1        magrittr_2.0.3     digest_0.6.37      #> [37] grid_4.4.1         lifecycle_1.0.4    vctrs_0.6.5        evaluate_1.0.0     #> [41] glue_1.7.0         farver_2.1.2       ragg_1.3.3         fansi_1.0.6        #> [45] colorspace_2.1-1   rmarkdown_2.28     purrr_1.0.2        tools_4.4.1        #> [49] pkgconfig_2.0.3    htmltools_0.5.8.1"},{"path":"https://yunuuuu.github.io/ggalign/articles/layout-customize.html","id":"align_group","dir":"Articles","previous_headings":"","what":"align_group","title":"Layout Customization","text":"align_group() function allows group rows/columns separate panels. doesn’t add plot area.  default, facet strip text removed. can override behavior theme(strip.text = element_text()). Since align_group() create new plot, panel title can added heatmap plot.","code":"ggheatmap(small_mat) +     hmanno(\"t\") +     align_group(sample(letters[1:4], ncol(small_mat), replace = TRUE)) ggheatmap(small_mat) +     theme(strip.text = element_text()) +     hmanno(\"l\") +     align_group(sample(letters[1:4], nrow(small_mat), replace = TRUE))"},{"path":"https://yunuuuu.github.io/ggalign/articles/layout-customize.html","id":"align_reorder","dir":"Articles","previous_headings":"","what":"align_reorder","title":"Layout Customization","text":"align_reorder() function reorders rows/columns based summary function. Like align_group(), doesn’t add plot area. , reorder rows based means.  addition, can provide ordering integer index directly order argument.  can also provide ordering character index.  default, align_reorder() reorders rows columns ascending order summary function’s output (bottom top rows, left right columns). reverse order, can set reverse = TRUE:  align_* functions accept data argument. can matrix, data frame, even simple vector, converted one-column matrix. data argument NULL, function use layout data, demonstrated previous example. data argument can also accept function (purrr-like lambda syntax supported), applied layout data. important note align_* functions consider rows observations. means NROW(data) must return number specific layout axis. heatmap_layout(): column annotation, layout data transposed using (data function, applied transposed matrix). necessary column annotation uses heatmap columns observations, need rows. stack_layout(): layout data used since place plots along single axis. Even top bottom annotations, can use rowMeans() calculate mean value across columns.","code":"ggheatmap(small_mat) +     hmanno(\"l\") +     align_reorder(rowMeans) my_order <- sample(nrow(small_mat)) print(rownames(small_mat)[my_order]) #> [1] \"row3\" \"row1\" \"row7\" \"row6\" \"row2\" \"row8\" \"row9\" \"row5\" \"row4\" ggheatmap(small_mat) +     hmanno(\"l\") +     align_reorder(my_order) ggheatmap(small_mat) +     hmanno(\"l\") +     align_reorder(rownames(small_mat)[my_order]) ggheatmap(small_mat) +     hmanno(\"l\") +     align_reorder(rowMeans, reverse = TRUE) ggheatmap(small_mat) +     hmanno(\"t\") +     align_reorder(rowMeans)"},{"path":"https://yunuuuu.github.io/ggalign/articles/layout-customize.html","id":"align_kmeans","dir":"Articles","previous_headings":"","what":"align_kmeans","title":"Layout Customization","text":"align_kmeans() function groups heatmap rows columns based k-means clustering. Like previous functions, add plot area.  ’s important note align_group() align_kmeans() sub-grouping. means used groups already exist.","code":"ggheatmap(small_mat) +     hmanno(\"t\") +     align_kmeans(3L) ggheatmap(small_mat) +     hmanno(\"t\") +     align_group(sample(letters[1:4], ncol(small_mat), replace = TRUE)) +     align_kmeans(3L) #> Error in `align_kmeans()`: #> ! `align_kmeans()` cannot do sub-split #> ℹ Group of layout x-axis already exists ggheatmap(small_mat) +     hmanno(\"t\") +     align_kmeans(3L) +     align_group(sample(letters[1:4], ncol(small_mat), replace = TRUE)) #> Error in `align_group()`: #> ! `align_group()` cannot do sub-split #> ℹ Group of layout x-axis already exists"},{"path":"https://yunuuuu.github.io/ggalign/articles/layout-customize.html","id":"align_dendro","dir":"Articles","previous_headings":"","what":"align_dendro","title":"Layout Customization","text":"align_dendro() function adds dendrogram layout can also reorder split layout based hierarchical clustering. particularly useful working heatmap plots.  Hierarchical clustering performed two steps: calculate distance matrix apply clustering. can use distance method argument control dendrogram builind process. two ways specify distance metric clustering: specify distance pre-defined option. valid values supported methods dist() function coorelation coefficient \"pearson\", \"spearman\" \"kendall\". correlation distance defined 1 - cor(x, y, method = distance). self-defined function calculates distance matrix. function contain one argument. Please note clustering columns, matrix transposed automatically.   Method perform hierarchical clustering can specified method. Possible methods supported hclust() function. can also provide self-defined function, accepts distance object return hclust object.  dendrogram can also used cut columns/rows groups. can specify k h, work similarly cutree():  contrast align_group(), align_kmeans(), align_reorder(), align_dendro() capable drawing plot components. default set_context value TRUE, meaning set active context annotation stack layout. way, can add ggplot elements plot area.  align_dendro() function creates default node data ggplot. See ggplot2 specification ?align_dendro details. Additionally, edge data added ggplote::geom_segment() layer directly, used draw dendrogram tree. One useful variable node edge data branch column, corresponding cutree result:  align_dendro() can also perform clustering groups, meaning can used even existing groups present layout:  can reorder groups setting reorder_group = TRUE.  can see difference drawing two dendrogram.","code":"ggheatmap(small_mat) +     hmanno(\"t\") +     align_dendro() ggheatmap(small_mat) +     hmanno(\"t\") +     align_dendro(distance = \"pearson\") +     patch_titles(top = \"pre-defined distance method (1 - pearson)\") ggheatmap(small_mat) +     hmanno(\"t\") +     align_dendro(distance = function(m) dist(m)) +     patch_titles(top = \"a function that calculates distance matrix\") ggheatmap(small_mat) +     hmanno(\"t\") +     align_dendro(method = \"ward.D2\") ggheatmap(small_mat) +     hmanno(\"t\") +     align_dendro(k = 3L) ggheatmap(small_mat) +     hmanno(\"t\") +     align_dendro() +     geom_point(aes(y = y)) ggheatmap(small_mat) +     hmanno(\"t\") +     align_dendro(aes(color = branch), k = 3) +     geom_point(aes(color = branch, y = y)) column_groups <- sample(letters[1:3], ncol(small_mat), replace = TRUE) ggheatmap(small_mat) +     hmanno(\"t\") +     align_group(column_groups) +     align_dendro(aes(color = branch)) ggheatmap(small_mat) +     hmanno(\"t\") +     align_group(column_groups) +     align_dendro(aes(color = branch), reorder_group = TRUE) ggheatmap(small_mat) +     hmanno(\"t\") +     align_group(column_groups) +     align_dendro(aes(color = branch), reorder_group = TRUE) +     hmanno(\"b\") +     align_dendro(aes(color = branch), reorder_group = FALSE)"},{"path":"https://yunuuuu.github.io/ggalign/articles/layout-customize.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Layout Customization","text":"","code":"sessionInfo() #> R version 4.4.1 (2024-06-14) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.5 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggalign_0.0.4 ggplot2_3.5.1 #>  #> loaded via a namespace (and not attached): #>  [1] gtable_0.3.5      jsonlite_1.8.9    highr_0.11        dplyr_1.1.4       #>  [5] compiler_4.4.1    tidyselect_1.2.1  tidyr_1.3.1       jquerylib_0.1.4   #>  [9] systemfonts_1.1.0 scales_1.3.0      textshaping_0.4.0 yaml_2.3.10       #> [13] fastmap_1.2.0     ggh4x_0.2.8       R6_2.5.1          labeling_0.4.3    #> [17] generics_0.1.3    knitr_1.48        tibble_3.2.1      desc_1.4.3        #> [21] munsell_0.5.1     bslib_0.8.0       pillar_1.9.0      rlang_1.1.4       #> [25] utf8_1.2.4        cachem_1.1.0      xfun_0.47         fs_1.6.4          #> [29] sass_0.4.9        cli_3.6.3         pkgdown_2.1.1     withr_3.0.1       #> [33] magrittr_2.0.3    digest_0.6.37     grid_4.4.1        lifecycle_1.0.4   #> [37] vctrs_0.6.5       evaluate_1.0.0    glue_1.7.0        farver_2.1.2      #> [41] ragg_1.3.3        fansi_1.0.6       colorspace_2.1-1  rmarkdown_2.28    #> [45] purrr_1.0.2       tools_4.4.1       pkgconfig_2.0.3   htmltools_0.5.8.1"},{"path":"https://yunuuuu.github.io/ggalign/articles/layout-plot.html","id":"align_gg","dir":"Articles","previous_headings":"","what":"align_gg","title":"Layout Plot","text":"align_gg() similar ggplot initializes ggplot data mapping. align_* functions. align_gg() allowing provide data various formats, including matrices, data frames, simple vectors. data can also inherited layout. align_gg() always applies default mapping axis data index layout. mapping aes(y = .data$.y) horizontal stacking (including left right heatmap annotation) aes(x = .data$.x) vertical stacking (including top bottom heatmap annotation). information, refer “ggplot2 Specification” section align_gg() documentation. can also use ggalign() function, alias align_gg().  See ggplot2 specification align_gg()/ggalign() data details.","code":"ggheatmap(small_mat) +     scale_fill_viridis_c(guide = \"none\") +     hmanno(\"t\") +     ggalign(data = rowSums) +     geom_point(aes(y = value))"},{"path":"https://yunuuuu.github.io/ggalign/articles/layout-plot.html","id":"plot-data","dir":"Articles","previous_headings":"align_gg","what":"Plot data","title":"Layout Plot","text":"align_gg()/ggalign() requires specific data format operations. need transform filter data individual geoms, can use data argument within geom. However, multiple geoms want consistent transformation applied across , can utilize plot_data argument align_gg()/ggalign() function. allows transform default data subsequent geoms.","code":"ggheatmap(small_mat) +     scale_fill_viridis_c(guide = \"none\") +     hmanno(\"t\") +     align_kmeans(3L) +     ggalign(plot_data = function(data) subset(data, .panel == 1L)) +     geom_bar(aes(y = value, fill = .row_names), stat = \"identity\")"},{"path":"https://yunuuuu.github.io/ggalign/articles/layout-plot.html","id":"cross-panel-sumamry","dir":"Articles","previous_headings":"align_gg","what":"Cross panel sumamry","title":"Layout Plot","text":"used heatmap layout, data inherited heatmap data, special column .extra_panel added, panel information column (left right annotation) row (top bottom annotation). useful want create summary plot using another axis panel. cases, ’s often necessary disable automatic setting limits (limits = FALSE align_gg()).  approach replicates functionality ComplexHeatmap::anno_summary(), versatile enough used heatmap, just single-column single-row heatmaps.","code":"set.seed(1L) v <- stats::rnorm(50L) split <- sample(letters[1:2], 50L, replace = TRUE) ggheatmap(v) +     scale_fill_viridis_c() +     theme(strip.text = element_text(), strip.background = element_rect()) +     hmanno(\"r\") +     align_group(split) +     hmanno(\"t\", size = 0.5) +     ggalign(limits = FALSE) +     geom_boxplot(aes(.extra_panel, value, fill = .extra_panel),         # here, we use `print()` to show the underlying data         data = function(data) {             print(head(data))             data         }     ) +     # the default will always use continuous scale, here, we override it, since     # the panel is a factor variable, we should use discrete scale.     scale_x_discrete() +     scale_fill_brewer(palette = \"Dark2\", name = \"branch\") #>   .column_index .row_index      value .extra_panel .panel .x #> 1             1          1 -0.6264538            b      1  1 #> 2             2          1  0.1836433            b      1  1 #> 3             3          1 -0.8356286            b      1  1 #> 4             4          1  1.5952808            a      1  1 #> 5             5          1  0.3295078            a      1  1 #> 6             6          1 -0.8204684            a      1  1 ggheatmap(small_mat) +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     hmanno(\"t\") +     align_dendro(aes(color = branch), k = 3L) +     scale_color_brewer(palette = \"Dark2\") +     hmanno(\"r\", size = 0.5) +     ggalign(limits = FALSE) +     geom_boxplot(aes(y = .extra_panel, x = value, fill = factor(.extra_panel))) +     # the default will always use continuous scale, here, we override it, since     # the panel is a factor variable, we should use discrete scale.     scale_y_discrete() +     scale_fill_brewer(palette = \"Dark2\", name = \"branch\")"},{"path":"https://yunuuuu.github.io/ggalign/articles/layout-plot.html","id":"plot-titles","dir":"Articles","previous_headings":"align_gg","what":"Plot titles","title":"Layout Plot","text":"ggplot2 allow add titles top add caption bottom. ggalign package extends capability, allowing place titles around border plot using patch_titles() function.","code":"ggheatmap(small_mat) +     patch_titles(left = \"left patch title\", bottom = \"bottom patch title\") +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     hmanno(\"t\") +     align_dendro(aes(color = branch), k = 3L) +     scale_color_brewer(palette = \"Dark2\") +     patch_titles(top = \"top patch title\") +     hmanno(\"r\", size = 0.5) +     ggalign(limits = FALSE) +     geom_boxplot(aes(y = .extra_panel, x = value, fill = factor(.extra_panel))) +     scale_y_discrete() +     scale_fill_brewer(palette = \"Dark2\", name = \"branch\") +     patch_titles(right = \"right patch title\")"},{"path":"https://yunuuuu.github.io/ggalign/articles/layout-plot.html","id":"align_panel","dir":"Articles","previous_headings":"","what":"align_panel","title":"Layout Plot","text":"align_panel() function similar align_gg(), operates specifically layout panel data, removing axis labels ticks. ggpanel() function alias align_panel(). data underlying ggplot object contains following columns: .panel: panel current layout axis. .index: index original layout data. .x .y: x y coordinates can use align_panel() integrate additional elements, block annotation customized panel title, layout.","code":"ggheatmap(small_mat) +     hmanno(\"t\", size = unit(1, \"cm\")) +     align_kmeans(centers = 3L) +     ggpanel() +     geom_tile(aes(y = 1L, fill = .panel, color = .panel),         width = 1L, height = 1L     ) +     geom_text(aes(y = 1L, label = .panel),         data = function(data) {             aggregate(.x ~ .panel, data, FUN = median)         }     )"},{"path":"https://yunuuuu.github.io/ggalign/articles/layout-plot.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Layout Plot","text":"","code":"sessionInfo() #> R version 4.4.1 (2024-06-14) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.5 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggalign_0.0.4 ggplot2_3.5.1 #>  #> loaded via a namespace (and not attached): #>  [1] gtable_0.3.5       jsonlite_1.8.9     highr_0.11         dplyr_1.1.4        #>  [5] compiler_4.4.1     tidyselect_1.2.1   tidyr_1.3.1        jquerylib_0.1.4    #>  [9] systemfonts_1.1.0  scales_1.3.0       textshaping_0.4.0  ggh4x_0.2.8        #> [13] yaml_2.3.10        fastmap_1.2.0      R6_2.5.1           labeling_0.4.3     #> [17] generics_0.1.3     knitr_1.48         tibble_3.2.1       desc_1.4.3         #> [21] munsell_0.5.1      RColorBrewer_1.1-3 bslib_0.8.0        pillar_1.9.0       #> [25] rlang_1.1.4        utf8_1.2.4         cachem_1.1.0       xfun_0.47          #> [29] fs_1.6.4           sass_0.4.9         viridisLite_0.4.2  cli_3.6.3          #> [33] pkgdown_2.1.1      withr_3.0.1        magrittr_2.0.3     digest_0.6.37      #> [37] grid_4.4.1         lifecycle_1.0.4    vctrs_0.6.5        evaluate_1.0.0     #> [41] glue_1.7.0         farver_2.1.2       ragg_1.3.3         fansi_1.0.6        #> [45] colorspace_2.1-1   purrr_1.0.2        rmarkdown_2.28     tools_4.4.1        #> [49] pkgconfig_2.0.3    htmltools_0.5.8.1"},{"path":"https://yunuuuu.github.io/ggalign/articles/more-examples.html","id":"add-more-information-for-gene-expression-matrix","dir":"Articles","previous_headings":"","what":"Add more information for gene expression matrix","title":"ComplexHeatmap: more examples","text":"","code":"expr <- read_example(\"gene_expression.rds\") mat <- as.matrix(expr[, grep(\"cell\", colnames(expr))]) base_mean <- rowMeans(mat) mat_scaled <- t(apply(mat, 1, scale)) type <- gsub(\"s\\\\d+_\", \"\", colnames(mat))  ggstack(data = mat_scaled) +     # remove margins     stack_active(theme = theme(plot.margin = margin())) +     # group stack rows into 5 groups     align_kmeans(centers = 5L) +     # add a block plot for each group in the stack     ggpanel(size = unit(1, \"cm\")) +     geom_tile(aes(x = 1, fill = factor(.panel))) +     scale_fill_brewer(palette = \"Dark2\", name = \"Kmeans group\") +     scale_x_continuous(breaks = NULL, name = NULL) +     # add a heatmap plot in the stack     ggheatmap() +     # Note, the x-axis of the left plot will have expansion,     # so, there'll be some spaces between this heatmap of the left tile     hmanno(free_spaces = \"l\") +     scale_y_continuous(breaks = NULL) +     scale_fill_viridis_c() +     # add dendrogram for this heatmap     hmanno(\"t\") +     align_dendro() +     # add a block for the heatmap column     ggalign(data = type, size = unit(1, \"cm\")) +     geom_tile(aes(y = 1, fill = factor(value))) +     scale_y_continuous(breaks = NULL, name = NULL) +     scale_fill_brewer(palette = \"Set1\", name = \"type\") +     # add another heatmap in the stack and set the heatmap body width     ggheatmap(base_mean, width = unit(2, \"cm\")) +     scale_y_continuous(breaks = NULL) +     scale_x_continuous(name = \"base mean\", breaks = FALSE) +     scale_fill_gradientn(colours = c(\"#2600D1FF\", \"white\", \"#EE3F3FFF\")) +     # set the active context of the heatmap to the top     # and set the size of the top stack     hmanno(\"t\", size = unit(4, \"cm\")) +     # add box plot in the heatmap top     ggalign(theme = theme(plot.margin = margin(r = 3))) +     geom_boxplot(aes(y = value, fill = factor(.extra_panel))) +     scale_x_continuous(expand = expansion(), breaks = NULL) +     scale_fill_brewer(palette = \"Dark2\", guide = \"none\") +     theme(axis.title.y = element_blank()) +     # we move into the stack layout     stack_active() +     # add a point plot     ggalign(         data = expr$length, size = unit(2, \"cm\"),         theme = theme(plot.margin = margin(r = 3))     ) +     geom_point(aes(x = value)) +     labs(x = \"length\") +     theme(         panel.border = element_rect(fill = NA),         axis.text.x = element_text(angle = -60, hjust = 0)     ) +     # add another heatmap     ggheatmap(expr$type) +     # set the heatmap body width     hmanno(width = unit(2, \"cm\"), theme = theme(plot.margin = margin(r = 3))) +     scale_fill_brewer(palette = \"Set3\", name = \"gene type\") +     scale_x_continuous(breaks = NULL, name = \"gene type\") +     # add barplot in the top annotation, and remove the spaces in the y-axis     hmanno(\"t\", free_spaces = \"lr\", theme = theme(plot.margin = margin(b = 3))) +     ggalign(limits = FALSE) +     geom_bar(         aes(.extra_panel, fill = factor(value)),         position = position_fill()     ) +     scale_x_discrete() +     scale_y_continuous(expand = expansion()) +     scale_fill_brewer(palette = \"Set3\", name = \"gene type\", guide = \"none\")"},{"path":"https://yunuuuu.github.io/ggalign/articles/more-examples.html","id":"the-measles-vaccine-heatmap","dir":"Articles","previous_headings":"","what":"The measles vaccine heatmap","title":"ComplexHeatmap: more examples","text":"","code":"mat <- read_example(\"measles.rds\") ggheatmap(mat, filling = FALSE) +     geom_tile(aes(fill = value), color = \"white\") +     scale_fill_gradientn(         colours = c(\"white\", \"cornflowerblue\", \"yellow\", \"red\"),         values = scales::rescale(c(0, 800, 1000, 127000), c(0, 1))     ) +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     hmanno(\"r\") +     align_dendro(plot_dendrogram = FALSE) +     hmanno(\"t\", size = unit(2, \"cm\")) +     ggalign(data = rowSums) +     geom_bar(aes(y = value), fill = \"#FFE200\", stat = \"identity\") +     scale_y_continuous(expand = expansion()) +     ggtitle(\"Measles cases in US states 1930-2001\\nVaccine introduced 1961\") +     theme(plot.title = element_text(hjust = 0.5)) +     hmanno(\"r\", size = unit(2, \"cm\")) +     ggalign(data = rowSums) +     geom_bar(aes(x = value),         fill = \"#FFE200\", stat = \"identity\",         orientation = \"y\"     ) +     scale_x_continuous(expand = expansion()) +     theme(axis.text.x = element_text(angle = -60, hjust = 0))"},{"path":"https://yunuuuu.github.io/ggalign/articles/more-examples.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"ComplexHeatmap: more examples","text":"","code":"sessionInfo() #> R version 4.4.1 (2024-06-14) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.5 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggalign_0.0.4 ggplot2_3.5.1 #>  #> loaded via a namespace (and not attached): #>  [1] gtable_0.3.5       jsonlite_1.8.9     highr_0.11         dplyr_1.1.4        #>  [5] compiler_4.4.1     tidyselect_1.2.1   tidyr_1.3.1        jquerylib_0.1.4    #>  [9] systemfonts_1.1.0  scales_1.3.0       textshaping_0.4.0  ggh4x_0.2.8        #> [13] yaml_2.3.10        fastmap_1.2.0      R6_2.5.1           labeling_0.4.3     #> [17] generics_0.1.3     knitr_1.48         tibble_3.2.1       desc_1.4.3         #> [21] munsell_0.5.1      RColorBrewer_1.1-3 bslib_0.8.0        pillar_1.9.0       #> [25] rlang_1.1.4        utf8_1.2.4         cachem_1.1.0       xfun_0.47          #> [29] fs_1.6.4           sass_0.4.9         viridisLite_0.4.2  cli_3.6.3          #> [33] pkgdown_2.1.1      withr_3.0.1        magrittr_2.0.3     digest_0.6.37      #> [37] grid_4.4.1         lifecycle_1.0.4    vctrs_0.6.5        evaluate_1.0.0     #> [41] glue_1.7.0         farver_2.1.2       ragg_1.3.3         fansi_1.0.6        #> [45] colorspace_2.1-1   purrr_1.0.2        rmarkdown_2.28     tools_4.4.1        #> [49] pkgconfig_2.0.3    htmltools_0.5.8.1"},{"path":"https://yunuuuu.github.io/ggalign/articles/scales-and-facets.html","id":"scales","dir":"Articles","previous_headings":"","what":"Scales","title":"Scales and Facets","text":"Scales handled usual ggplot2, position scales, limits setted, internal always reset default. required align layout annotation.  breaks labels position scales handled similar manner discrete scale, thought can provide continuous scale.","code":"ggheatmap(small_mat) + scale_x_continuous(limits = c(0, 0))"},{"path":"https://yunuuuu.github.io/ggalign/articles/scales-and-facets.html","id":"breaks","dir":"Articles","previous_headings":"Scales","what":"breaks","title":"Scales and Facets","text":"breaks one :","code":"- `NULL` for no breaks  - `waiver()` for the default breaks (the full data index or `NULL` if no data names and `labels` is `waiver()`)  - A character vector of breaks (rownames / colunames of the matrix).  - A numeric vector of data index.  - A function that takes the data limits or the data index as input and returns breaks as output. Also accepts rlang lambda function notation. ggheatmap(small_mat) + scale_x_continuous(breaks = NULL) ggheatmap(small_mat) + scale_x_continuous() no_names <- small_mat colnames(no_names) <- NULL ggheatmap(no_names) + scale_x_continuous() ggheatmap(small_mat) + scale_x_continuous(breaks = c(\"column3\", \"column5\")) ggheatmap(small_mat) + scale_x_continuous(breaks = 5:6)"},{"path":"https://yunuuuu.github.io/ggalign/articles/scales-and-facets.html","id":"labels","dir":"Articles","previous_headings":"Scales","what":"labels","title":"Scales and Facets","text":"labels one :","code":"- `NULL` for no labels  - `waiver()` for the default labels (data names)  - A character vector giving labels (must be same length as breaks)  - An expression vector (must be the same length as breaks). See `?plotmath` for details.   - A function that takes the data names (or breaks if data has no names) as input and returns labels as output. This can be also a rlang lambda function. ggheatmap(small_mat) + scale_x_continuous(labels = NULL) ggheatmap(small_mat) + scale_x_continuous() ggheatmap(small_mat) +     scale_x_continuous(labels = letters[seq_len(ncol(small_mat))]) ggheatmap(small_mat) +     scale_x_continuous(breaks = c(3, 5), labels = c(\"a\", \"b\"))"},{"path":"https://yunuuuu.github.io/ggalign/articles/scales-and-facets.html","id":"data-ordering","dir":"Articles","previous_headings":"Scales","what":"data ordering","title":"Scales and Facets","text":"breaks labels provided original scale raw matrix, internal reorder accordingly reorder heatmap rows/columns. align_reorder reorder heatmap rows/columns based weights returned order function, can directly provide ordering integer character index. calculate final index means reorder heatmap columns. provide labels original order , layout reorder .","code":"index <- order(colMeans(small_mat)) xlabels <- letters[seq_len(ncol(small_mat))] print(xlabels[index]) #> [1] \"c\" \"h\" \"i\" \"g\" \"f\" \"e\" \"a\" \"b\" \"d\"  ggheatmap(small_mat) +     scale_x_continuous(labels = xlabels) +     hmanno(\"t\") +     align_reorder(index)"},{"path":"https://yunuuuu.github.io/ggalign/articles/scales-and-facets.html","id":"discrete-or-continuous","dir":"Articles","previous_headings":"Scales","what":"discrete or continuous","title":"Scales and Facets","text":"breaks labels argument work discrete scale continuous scale. note ’s hard match discrete scale limits, sometimes, manually specify expand argument. following example, must add expand argument match heatmap hierarchical clustering tree.   Indeed, can use default scale dendrogram directly. layout always sets appropriate limits continuous scale.  One useful feature discrete scale handling ambiguous orientation geoms. geoms, like ggplot2::geom_bar() ggplot2::geom_boxplot(), use discrete axis main orientation, default, use continuous scale. horizontal layouts (including left right heatmap annotations), must manually provide orientation argument geoms set discrete scale. following example, geom_bar won’t work since ambiguous orientation.  Try provide orientation argument set scale discrete.","code":"ggheatmap(small_mat) +     scale_x_discrete(breaks = c(3, 5), labels = c(\"a\", \"b\")) +     hmanno(\"t\") +     align_dendro() +     scale_x_discrete() ggheatmap(small_mat) +     scale_x_discrete(breaks = c(3, 5), labels = c(\"a\", \"b\")) +     hmanno(\"t\") +     align_dendro() +     scale_x_discrete(expand = expansion(add = 0.5)) ggheatmap(small_mat) +     scale_x_discrete(breaks = c(3, 5), labels = c(\"a\", \"b\")) +     hmanno(\"t\") +     align_dendro() ggheatmap(small_mat) +     hmanno(\"l\") +     ggalign() +     geom_bar(aes(x = value), stat = \"identity\") +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) #> Warning: Removed 81 rows containing missing values or values outside the scale range #> (`geom_bar()`). ggheatmap(small_mat) +     hmanno(\"l\") +     ggalign() +     geom_bar(aes(x = value), stat = \"identity\", orientation = \"y\") +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) ggheatmap(small_mat) +     hmanno(\"l\") +     ggalign() +     geom_bar(aes(x = value), stat = \"identity\") +     scale_y_discrete() +     theme(axis.text.x = element_text(angle = -60, hjust = 0))"},{"path":"https://yunuuuu.github.io/ggalign/articles/scales-and-facets.html","id":"facets","dir":"Articles","previous_headings":"","what":"Facets","title":"Scales and Facets","text":"working facets, manual configuration panel using facet_* function possible since internal use facet_grid set row/column groups defined align_*() functions. However, can provide facet_grid() facet_null() (panel) control arguments except rows cols. common usage case change panel strip text. default theme package always remove panel strip text, can override behaviour theme(strip.text = element_text()). allows us add panel title plot area.","code":"ggheatmap(small_mat) +     facet_grid(labeller = labeller(.column_panel = function(x) letters[as.integer(x)])) +     theme(strip.text = element_text()) +     hmanno(\"top\") +     align_kmeans(centers = 3L)"},{"path":"https://yunuuuu.github.io/ggalign/articles/scales-and-facets.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Scales and Facets","text":"","code":"sessionInfo() #> R version 4.4.1 (2024-06-14) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.5 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggalign_0.0.4 ggplot2_3.5.1 #>  #> loaded via a namespace (and not attached): #>  [1] gtable_0.3.5      jsonlite_1.8.9    highr_0.11        dplyr_1.1.4       #>  [5] compiler_4.4.1    tidyselect_1.2.1  tidyr_1.3.1       jquerylib_0.1.4   #>  [9] systemfonts_1.1.0 scales_1.3.0      textshaping_0.4.0 ggh4x_0.2.8       #> [13] yaml_2.3.10       fastmap_1.2.0     R6_2.5.1          labeling_0.4.3    #> [17] generics_0.1.3    knitr_1.48        tibble_3.2.1      desc_1.4.3        #> [21] munsell_0.5.1     bslib_0.8.0       pillar_1.9.0      rlang_1.1.4       #> [25] utf8_1.2.4        cachem_1.1.0      xfun_0.47         fs_1.6.4          #> [29] sass_0.4.9        cli_3.6.3         pkgdown_2.1.1     withr_3.0.1       #> [33] magrittr_2.0.3    digest_0.6.37     grid_4.4.1        lifecycle_1.0.4   #> [37] vctrs_0.6.5       evaluate_1.0.0    glue_1.7.0        farver_2.1.2      #> [41] ragg_1.3.3        fansi_1.0.6       colorspace_2.1-1  rmarkdown_2.28    #> [45] purrr_1.0.2       tools_4.4.1       pkgconfig_2.0.3   htmltools_0.5.8.1"},{"path":"https://yunuuuu.github.io/ggalign/articles/single-heatmap.html","id":"colors","dir":"Articles","previous_headings":"","what":"Colors","title":"ComplexHeatmap: single-heatmap","text":"ComplexHeatmap reorder dendrogram default, align_dendro won’t change tree layout. following codes, hypothesized arguments row_dend_reorder column_dend_reorder ComplexHeatmap::Heatmap FALSE. important note ggalign considers left-bottom starting point, ComplexHeatmap considers left-top starting point. scale_fill_* function ggplot2 makes easy modify colors.   oob argument scale_fill_* function can used deal outliers.  can use align_plots() arrange .   character matrix, can use ggplot2 discrete filling scales.    won’t compare LAB RGB space. want convert color different color space, try use farver pacakge. ggplot2, can use panel.border argument theme() function control Heatmap body border.  can use color aesthetic specify cell border color linewidth aesthetic specify border width.  can use filling argument turn heatmap cell filling.","code":"# ComplexHeatmap::Heatmap(mat, #     row_dend_reorder = FALSE, #     column_dend_reorder = FALSE # ) dim(mat) #> [1] 18 24 ggheatmap(mat) +     scale_fill_gradient2(low = \"#2600D1FF\", high = \"#EE3F3FFF\") +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     hmanno(\"r\", size = unit(15, \"mm\")) +     align_dendro() +     hmanno(\"t\", size = unit(15, \"mm\")) +     align_dendro() +     hmanno(NULL) &     theme(plot.margin = margin()) ggheatmap(mat) +     scale_fill_gradient2(low = \"green\", high = \"red\") +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     hmanno(\"r\", size = unit(15, \"mm\")) +     align_dendro() +     hmanno(\"t\", size = unit(15, \"mm\")) +     align_dendro() +     hmanno(NULL) &     theme(plot.margin = margin()) mat2 <- mat mat2[1, 1] <- 100000 ggheatmap(mat2) +     scale_fill_gradient2(         low = \"green\", high = \"red\",         limits = c(-2, 2),         oob = scales::squish     ) +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     hmanno(\"r\", size = unit(15, \"mm\")) +     align_dendro() +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     hmanno(\"t\", size = unit(15, \"mm\")) +     align_dendro() +     hmanno(NULL) &     theme(plot.margin = margin()) h1 <- ggheatmap(mat) +     scale_fill_gradient2(name = \"mat\", low = \"green\", high = \"red\") +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     hmanno(\"r\", size = unit(15, \"mm\")) +     align_dendro() +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     hmanno(\"t\", size = unit(15, \"mm\")) +     align_dendro() +     hmanno(NULL) &     theme(plot.margin = margin())  h2 <- ggheatmap(mat / 4) +     scale_fill_gradient2(         name = \"mat/4\", limits = c(-2, 2L),         oob = scales::squish,         low = \"green\", high = \"red\"     ) +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     hmanno(\"r\", size = unit(15, \"mm\")) +     align_dendro() +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     hmanno(\"t\", size = unit(15, \"mm\")) +     align_dendro() +     hmanno(NULL) &     theme(plot.margin = margin())  h3 <- ggheatmap(abs(mat)) +     scale_fill_gradient2(name = \"abs(mat)\", low = \"green\", high = \"red\") +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     hmanno(\"r\", size = unit(15, \"mm\")) +     align_dendro() +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     hmanno(\"t\", size = unit(15, \"mm\")) +     align_dendro() +     hmanno(NULL) &     theme(plot.margin = margin()) align_plots(h1, h2, h3, ncol = 2L) ggheatmap(mat) +     scale_fill_gradientn(colors = rev(rainbow(10))) +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     hmanno(\"r\", size = unit(15, \"mm\")) +     align_dendro() +     hmanno(\"t\", size = unit(15, \"mm\")) +     align_dendro() +     hmanno(NULL) &     theme(plot.margin = margin()) discrete_mat <- matrix(sample(1:4, 100, replace = TRUE), 10, 10) colors <- structure(1:4, names = c(\"1\", \"2\", \"3\", \"4\")) # black, red, green, blue ggheatmap(discrete_mat, aes(fill = factor(value))) +     scale_fill_manual(values = colors) +     hmanno(\"r\", size = unit(15, \"mm\")) +     align_dendro() +     hmanno(\"t\", size = unit(15, \"mm\")) +     align_dendro() +     hmanno(NULL) &     theme(plot.margin = margin()) discrete_mat <- matrix(sample(letters[1:4], 100, replace = TRUE), 10, 10) colors <- structure(1:4, names = letters[1:4]) ggheatmap(discrete_mat) +     scale_fill_manual(values = colors) mat_with_na <- mat na_index <- sample(c(TRUE, FALSE),     nrow(mat) * ncol(mat),     replace = TRUE, prob = c(1, 9) ) mat_with_na[na_index] <- NA ggheatmap(mat_with_na) +     scale_fill_gradient2(         low = \"#2600D1FF\",         high = \"#EE3F3FFF\",         na.value = \"black\"     ) +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     hmanno(\"r\", size = unit(15, \"mm\")) +     align_dendro() +     hmanno(\"t\", size = unit(15, \"mm\")) +     align_dendro() +     hmanno(NULL) &     theme(plot.margin = margin()) ggheatmap(mat) +     scale_fill_gradient2(low = \"#2600D1FF\", high = \"#EE3F3FFF\") +     theme(         axis.text.x = element_text(angle = -60, hjust = 0),         panel.border = element_rect(linetype = \"dashed\", fill = NA)     ) +     hmanno(\"r\", size = unit(15, \"mm\")) +     align_dendro() +     hmanno(\"t\", size = unit(15, \"mm\")) +     align_dendro() &     theme(plot.margin = margin()) ggheatmap(mat, color = \"white\") +     scale_fill_gradient2(low = \"#2600D1FF\", high = \"#EE3F3FFF\") +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     hmanno(\"r\", size = unit(15, \"mm\")) +     align_dendro() +     hmanno(\"t\", size = unit(15, \"mm\")) +     align_dendro() &     theme(plot.margin = margin()) ggheatmap(mat, filling = FALSE) +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     hmanno(\"r\", size = unit(15, \"mm\")) +     align_dendro() +     hmanno(\"t\", size = unit(15, \"mm\")) +     align_dendro() &     theme(plot.margin = margin())"},{"path":"https://yunuuuu.github.io/ggalign/articles/single-heatmap.html","id":"titles","dir":"Articles","previous_headings":"","what":"Titles","title":"ComplexHeatmap: single-heatmap","text":"can use patch_titles() add titles around border plot. can use theme() control text appearance.","code":"ggheatmap(mat) +     scale_fill_gradient2(low = \"#2600D1FF\", high = \"#EE3F3FFF\") +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     hmanno(\"r\", size = unit(20, \"mm\")) +     align_dendro() +     patch_titles(right = \"I am a row title\") +     theme(plot.patch_title.right = element_text(face = \"bold\", size = 16)) +     hmanno(\"t\", size = unit(15, \"mm\")) +     align_dendro() +     patch_titles(top = \"I am a column title\") +     theme(plot.patch_title.top = element_text(face = \"bold\", size = 16)) &     theme(plot.margin = margin())"},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/articles/single-heatmap.html","id":"distance-methods","dir":"Articles","previous_headings":"Clustering","what":"Distance methods","title":"ComplexHeatmap: single-heatmap","text":"","code":"# ComplexHeatmap::Heatmap(mat, #   name = \"mat\", clustering_distance_rows = \"pearson\", #   column_title = \"pre-defined distance method (1 - pearson)\", #   row_dend_reorder = FALSE, #   column_dend_reorder = FALSE # ) ggheatmap(mat) +     scale_fill_gradient2(low = \"#2600D1FF\", high = \"#EE3F3FFF\") +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     hmanno(\"r\", size = unit(20, \"mm\")) +     align_dendro(distance = \"pearson\") +     hmanno(\"t\", size = unit(15, \"mm\")) +     align_dendro() +     patch_titles(top = \"pre-defined distance method (1 - pearson)\") +     theme(plot.patch_title.top = element_text(face = \"bold\", size = 16)) &     theme(plot.margin = margin()) # ComplexHeatmap::Heatmap(mat, #     name = \"mat\", clustering_distance_rows = function(m) dist(m), #     column_title = \"a function that calculates distance matrix\", #     row_dend_reorder = FALSE, #     column_dend_reorder = FALSE # ) ggheatmap(mat) +     scale_fill_gradient2(low = \"#2600D1FF\", high = \"#EE3F3FFF\") +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     hmanno(\"r\", size = unit(20, \"mm\")) +     align_dendro(distance = dist) +     hmanno(\"t\", size = unit(15, \"mm\")) +     align_dendro() +     patch_titles(top = \"a function that calculates distance matrix\") +     theme(plot.patch_title.top = element_text(face = \"bold\", size = 16)) &     theme(plot.margin = margin())"},{"path":"https://yunuuuu.github.io/ggalign/articles/single-heatmap.html","id":"clustering-methods","dir":"Articles","previous_headings":"Clustering","what":"Clustering methods","title":"ComplexHeatmap: single-heatmap","text":"Method perform hierarchical clustering can specified method argument, Possible methods supported hclust() function.  Use distance = NULL don’t want calculate distance.","code":"# ComplexHeatmap::Heatmap(mat, #     name = \"mat\", #     clustering_method_rows = \"single\", #     row_dend_reorder = FALSE, #     column_dend_reorder = FALSE # ) ggheatmap(mat) +     scale_fill_gradient2(low = \"#2600D1FF\", high = \"#EE3F3FFF\") +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     hmanno(\"r\", size = unit(20, \"mm\")) +     align_dendro(method = \"single\") +     hmanno(\"t\", size = unit(15, \"mm\")) +     align_dendro() &     theme(plot.margin = margin()) ggheatmap(mat) +     scale_fill_gradient2(low = \"#2600D1FF\", high = \"#EE3F3FFF\") +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     hmanno(\"r\", size = unit(20, \"mm\")) +     align_dendro(distance = NULL, method = cluster::diana) +     hmanno(\"t\", size = unit(15, \"mm\")) +     align_dendro(distance = NULL, method = cluster::agnes) &     theme(plot.margin = margin())"},{"path":"https://yunuuuu.github.io/ggalign/articles/single-heatmap.html","id":"render-dendrograms","dir":"Articles","previous_headings":"Clustering","what":"Render dendrograms","title":"ComplexHeatmap: single-heatmap","text":"’s easy ggalign color branches setting color mapping, since ggalign add cutree() results underlying data.","code":"ggheatmap(mat) +     scale_fill_gradient2(low = \"#2600D1FF\", high = \"#EE3F3FFF\") +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     hmanno(\"r\", size = unit(20, \"mm\")) +     align_dendro(aes(color = branch), k = 2L) +     hmanno(\"t\", size = unit(15, \"mm\")) +     align_dendro() &     theme(plot.margin = margin())"},{"path":"https://yunuuuu.github.io/ggalign/articles/single-heatmap.html","id":"set-row-and-column-orders","dir":"Articles","previous_headings":"","what":"Set row and column orders","title":"ComplexHeatmap: single-heatmap","text":"can use align_reorder() set order.","code":"# ComplexHeatmap::Heatmap(mat, #     name = \"mat\", #     row_order = order(as.numeric(gsub(\"row\", \"\", rownames(mat)))), #     column_order = order(as.numeric(gsub(\"column\", \"\", colnames(mat)))), #     column_title = \"reorder matrix\", #     row_dend_reorder = FALSE, #     column_dend_reorder = FALSE # ) ggheatmap(mat) +     scale_fill_gradient2(low = \"#2600D1FF\", high = \"#EE3F3FFF\") +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     hmanno(\"r\", size = unit(20, \"mm\")) +     align_reorder(as.numeric(gsub(\"row\", \"\", rownames(mat)))) +     hmanno(\"t\", size = unit(15, \"mm\")) +     align_reorder(as.numeric(gsub(\"column\", \"\", colnames(mat)))) &     theme(plot.margin = margin())"},{"path":"https://yunuuuu.github.io/ggalign/articles/single-heatmap.html","id":"seriation","dir":"Articles","previous_headings":"","what":"Seriation","title":"ComplexHeatmap: single-heatmap","text":"align_reorder() can directly take seriate() function input extract ordering information. code execute seriate() twice—dimension. However, since single run seriate() can provide ordering dimensions, can manually extract ordering indices avoid redundancy. use seriate() function, please refer seriation package.","code":"mat2 <- max(mat) - mat ggheatmap(mat2) +     scale_fill_gradient2(         low = \"#2600D1FF\", high = \"#EE3F3FFF\",         midpoint = 2L     ) +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     hmanno(\"r\", size = unit(20, \"mm\")) +     align_reorder(seriation::seriate, method = \"BEA_TSP\") +     hmanno(\"t\", size = unit(15, \"mm\")) +     align_reorder(seriation::seriate, method = \"BEA_TSP\") &     theme(plot.margin = margin()) o <- seriation::seriate(mat2, method = \"BEA_TSP\") ggheatmap(mat2) +     scale_fill_gradient2(         low = \"#2600D1FF\", high = \"#EE3F3FFF\",         midpoint = 2L     ) +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     hmanno(\"r\", size = unit(20, \"mm\")) +     align_reorder(seriation::get_order(o, 1L)) +     hmanno(\"t\", size = unit(15, \"mm\")) +     align_reorder(seriation::get_order(o, 2L)) &     theme(plot.margin = margin())"},{"path":"https://yunuuuu.github.io/ggalign/articles/single-heatmap.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"ComplexHeatmap: single-heatmap","text":"","code":"sessionInfo() #> R version 4.4.1 (2024-06-14) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.5 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggalign_0.0.4 ggplot2_3.5.1 #>  #> loaded via a namespace (and not attached): #>  [1] gtable_0.3.5      jsonlite_1.8.9    highr_0.11        dplyr_1.1.4       #>  [5] compiler_4.4.1    tidyselect_1.2.1  tidyr_1.3.1       cluster_2.1.6     #>  [9] jquerylib_0.1.4   systemfonts_1.1.0 scales_1.3.0      textshaping_0.4.0 #> [13] ggh4x_0.2.8       yaml_2.3.10       fastmap_1.2.0     R6_2.5.1          #> [17] labeling_0.4.3    generics_0.1.3    knitr_1.48        tibble_3.2.1      #> [21] desc_1.4.3        munsell_0.5.1     bslib_0.8.0       pillar_1.9.0      #> [25] rlang_1.1.4       utf8_1.2.4        cachem_1.1.0      xfun_0.47         #> [29] fs_1.6.4          sass_0.4.9        cli_3.6.3         pkgdown_2.1.1     #> [33] withr_3.0.1       magrittr_2.0.3    digest_0.6.37     grid_4.4.1        #> [37] lifecycle_1.0.4   vctrs_0.6.5       evaluate_1.0.0    glue_1.7.0        #> [41] farver_2.1.2      ragg_1.3.3        fansi_1.0.6       colorspace_2.1-1  #> [45] purrr_1.0.2       rmarkdown_2.28    tools_4.4.1       pkgconfig_2.0.3   #> [49] htmltools_0.5.8.1"},{"path":"https://yunuuuu.github.io/ggalign/articles/stack-layout.html","id":"input-data","dir":"Articles","previous_headings":"","what":"Input data","title":"Stack Layout","text":"data input can numeric character vector, matrix, data frame. Simple vector converted one column matrix. default, ggstack() create layout, plot drawn add plot element: can add align_*() function customize layout integrate plots stack.   default, ggstack() arranges plots horizontally. change direction vertical, use direction argument:  Unlike heatmap_layout()/ggheatmap(), data frames automatically converted matrix within ggstack(). using data frames, cautious many align_*() functions accept matrix. necessary data explicitly provided align_*() function, data frame ggstack() passed function internally converted matrix, may result missing values. exception align_gg()/ggalign() function, can handle matrix data frames. input matrix (simple vector), automatically transformed long-format data frame. input data frame, necessary panel axis information added data frame.  Note align_gg()/ggalign() always applies default mapping parallel axes data index within layout. mapping aes(y = .data$.y) horizontal stack aes(x = .data$.x) vertical stack. provide mapping x-axis. information adding plots, refer vignette: vignette(\"align-plot\").","code":"set.seed(123) small_mat <- matrix(rnorm(81), nrow = 9) rownames(small_mat) <- paste0(\"row\", seq_len(nrow(small_mat))) colnames(small_mat) <- paste0(\"column\", seq_len(ncol(small_mat))) ggstack(small_mat) ggstack(small_mat) + align_dendro() ggstack(small_mat) +     align_kmeans(centers = 3L) +     ggalign(rowSums) +     geom_bar(aes(value, fill = .panel), orientation = \"y\", stat = \"identity\") +     facet_grid(switch = \"y\") +     theme(strip.text = element_text()) +     align_dendro(aes(color = branch)) ggstack(small_mat, \"v\") + align_dendro() ggstack(mtcars) +     ggalign(mapping = aes(mpg)) +     geom_point()"},{"path":"https://yunuuuu.github.io/ggalign/articles/stack-layout.html","id":"heatmap-plot","dir":"Articles","previous_headings":"","what":"Heatmap plot","title":"Stack Layout","text":"Besides align_*() functions, can also add heatmap_layout()/ggheatmap() stack layout.","code":""},{"path":"https://yunuuuu.github.io/ggalign/articles/stack-layout.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Stack Layout","text":"","code":"sessionInfo() #> R version 4.4.1 (2024-06-14) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.5 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggalign_0.0.4 ggplot2_3.5.1 #>  #> loaded via a namespace (and not attached): #>  [1] gtable_0.3.5      jsonlite_1.8.9    dplyr_1.1.4       compiler_4.4.1    #>  [5] highr_0.11        tidyselect_1.2.1  tidyr_1.3.1       jquerylib_0.1.4   #>  [9] systemfonts_1.1.0 scales_1.3.0      textshaping_0.4.0 ggh4x_0.2.8       #> [13] yaml_2.3.10       fastmap_1.2.0     R6_2.5.1          labeling_0.4.3    #> [17] generics_0.1.3    knitr_1.48        tibble_3.2.1      desc_1.4.3        #> [21] munsell_0.5.1     bslib_0.8.0       pillar_1.9.0      rlang_1.1.4       #> [25] utf8_1.2.4        cachem_1.1.0      xfun_0.47         fs_1.6.4          #> [29] sass_0.4.9        cli_3.6.3         pkgdown_2.1.1     withr_3.0.1       #> [33] magrittr_2.0.3    digest_0.6.37     grid_4.4.1        lifecycle_1.0.4   #> [37] vctrs_0.6.5       evaluate_1.0.0    glue_1.7.0        farver_2.1.2      #> [41] ragg_1.3.3        fansi_1.0.6       colorspace_2.1-1  purrr_1.0.2       #> [45] rmarkdown_2.28    tools_4.4.1       pkgconfig_2.0.3   htmltools_0.5.8.1"},{"path":"https://yunuuuu.github.io/ggalign/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Yun Peng. Author, maintainer, copyright holder.","code":""},{"path":"https://yunuuuu.github.io/ggalign/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Peng Y (2024). ggalign: 'ggplot2' Extension Consistent Axis Alignment. R package version 0.0.4, https://yunuuuu.github.io/ggalign/, https://github.com/Yunuuuu/ggalign.","code":"@Manual{,   title = {ggalign: A 'ggplot2' Extension for Consistent Axis Alignment},   author = {Yun Peng},   year = {2024},   note = {R package version 0.0.4, https://yunuuuu.github.io/ggalign/},   url = {https://github.com/Yunuuuu/ggalign}, }"},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A ggplot2 Extension for Consistent Axis Alignment","text":"can install ggalign CRAN using install.packages(\"ggalign\"). Alternatively can install development version ggalign GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"Yunuuuu/ggalign\")"},{"path":"https://yunuuuu.github.io/ggalign/index.html","id":"overviews","dir":"","previous_headings":"","what":"Overviews","title":"A ggplot2 Extension for Consistent Axis Alignment","text":"ggalign pacakge provides two layout arrange ggplot objects: heatmap_layout()/ggheatmap(): Arrange ggplot Heatmap layout. See vignette(\"heatmap-layout\") details. stack_layout()/ggstack(): Arrange ggplot vertically horizontally. See vignette(\"stack-layout\") details. customize layouts, offer following functions: align_group(): Group layout axis panel group variable. align_kmeans(): Group layout axis panel kmeans align_reorder(): Reorders layout observations based weights summary statistics. align_dendro(): Reorder Group layout based hierarchical clustering detailed instructions customizing layouts, see vignette: vignette(\"layout-customize\"). Additionally, plots can added layout following functions: align_gg()/ggalign(): Create ggplot object customized data. align_panel()/ggpanel(): Create ggplot object layout panel data. information adding plots, refer vignette: vignette(\"layout-plot\").","code":""},{"path":"https://yunuuuu.github.io/ggalign/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"A ggplot2 Extension for Consistent Axis Alignment","text":"Heatmap Layout Layout Customization Layout Plot Stack Layout Scales Facets","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/reference/Layout-class.html","id":null,"dir":"Reference","previous_headings":"","what":"A Layout object — Layout-class","title":"A Layout object — Layout-class","text":"Layout object defines place plots.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/align.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new Align object — align","title":"Create a new Align object — align","text":"Align object act layout object, reorder split observations, can also add plot components layout object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/align.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new Align object — align","text":"","code":"align(   align_class,   params,   data,   size = NULL,   free_labs = waiver(),   free_spaces = waiver(),   plot_data = waiver(),   theme = waiver(),   limits = TRUE,   facet = TRUE,   set_context = TRUE,   order = NULL,   name = NULL,   check.param = TRUE,   call = caller_call() )"},{"path":"https://yunuuuu.github.io/ggalign/reference/align.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new Align object — align","text":"data matrix, data frame, even simple vector converted one-column matrix. data argument set NULL, align_* use layout data. Additionally, data argument can also accept function (purrr-like lambda also okay), applied layout data, important note align_* functions consider rows observations. means NROW(data) must return number specific layout axis. heatmap_layout(): column annotation, layout data transposed using (data function, applied transposed matrix). necessary column annotation uses heatmap columns observations, need rows. stack_layout(): layout data used since place plots along single axis. size Plot size, can unit object. free_labs boolean value string containing one \"t\", \"l\", \"b\", \"r\" indicates axis title free alignment. NULL, axis title aligned. Default: \"tlbr\". free_spaces boolean value string containing one \"t\", \"l\", \"b\", \"r\" indicates border spaces removed. NULL (default), space removed. plot_data function used transform plot data rendering. default, 'll inherit parent layout. parent layout, default NULL, means want modify anything. Used modify data layout created, data handled ggplot2 rendering. Use hook needs change default data geoms. theme theme() object, added plots layout. Use NULL want theme components added. Use waiver(), want inherit parent layout. limits boolean value indicates whether set layout limtis plot. facet boolean value indicates whether set layout facet plot. FALSE, limits always FALSE . set_context single boolean value indicates whether set active context current plot. TRUE, subsequent ggplot elements added plot. order single integer plot area order. name string plot name. Used switch active context hmanno() stack_active(). check.param single boolean value indicates whether check supplied parameters warn. call call used construct Align reporting messages.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/align.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new Align object — align","text":"new Align object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/align.html","id":"align","dir":"Reference","previous_headings":"","what":"Align","title":"Create a new Align object — align","text":"Align* objects just ggproto() object, descended top-level Align, implements various methods fields. create new type Align* object, typically want override one following: setup_params: Prepare parameter check parameters used annotation. setup_data: Prepare data used annotation. compute: method used compute statistics. layout: method used group heamap rows/columns panel reorder heamtap rows/columns. draw: method used draw plot. Must return ggplot object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/align.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new Align object — align","text":"","code":"align_gg() #> <ggproto object: Class AlignGG, Align, gg> #>     call: call #>     compute: function #>     data: NULL #>     direction: NULL #>     draw: function #>     extra_params:  #>     facet: TRUE #>     facetted_pos_scales: NULL #>     free_labs: waiver #>     free_spaces: waiver #>     ggplot: function #>     input_data: waiver #>     input_params: list #>     isLock: FALSE #>     labels: NULL #>     layout: function #>     limits: TRUE #>     lock: function #>     name: NA #>     nobs: function #>     order: NA #>     parameters: function #>     params: NULL #>     plot: NULL #>     plot_data: waiver #>     set_context: TRUE #>     setup_data: function #>     setup_params: function #>     size: NAnull #>     statistics: NULL #>     theme: waiver #>     unlock: function #>     super:  <ggproto object: Class AlignGG, Align, gg> align_dendro() #> <ggproto object: Class AlignDendro, Align, gg> #>     call: call #>     compute: function #>     data: NULL #>     direction: NULL #>     draw: function #>     extra_params:  #>     facet: TRUE #>     facetted_pos_scales: NULL #>     free_labs: waiver #>     free_spaces: waiver #>     ggplot: function #>     input_data: waiver #>     input_params: list #>     isLock: FALSE #>     labels: NULL #>     layout: function #>     limits: TRUE #>     lock: function #>     name: NA #>     nobs: function #>     order: NA #>     parameters: function #>     params: NULL #>     plot: NULL #>     plot_data: waiver #>     set_context: TRUE #>     setup_data: function #>     setup_params: function #>     size: NAnull #>     statistics: NULL #>     theme: waiver #>     unlock: function #>     super:  <ggproto object: Class AlignDendro, Align, gg>"},{"path":"https://yunuuuu.github.io/ggalign/reference/align_dendro.html","id":null,"dir":"Reference","previous_headings":"","what":"Reorder or Group layout based on hierarchical clustering — align_dendro","title":"Reorder or Group layout based on hierarchical clustering — align_dendro","text":"Reorder Group layout based hierarchical clustering","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/align_dendro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reorder or Group layout based on hierarchical clustering — align_dendro","text":"","code":"align_dendro(   mapping = aes(),   ...,   distance = \"euclidean\",   method = \"complete\",   use_missing = \"pairwise.complete.obs\",   reorder_group = FALSE,   k = NULL,   h = NULL,   plot_dendrogram = TRUE,   plot_cut_height = NULL,   root = NULL,   center = FALSE,   type = \"rectangle\",   size = NULL,   data = NULL,   free_labs = waiver(),   free_spaces = waiver(),   plot_data = waiver(),   theme = waiver(),   set_context = TRUE,   order = NULL,   name = NULL )"},{"path":"https://yunuuuu.github.io/ggalign/reference/align_dendro.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reorder or Group layout based on hierarchical clustering — align_dendro","text":"mapping Additional default list aesthetic mappings use plot. ... <dyn-dots> Additional arguments passed geom_segment(). distance string distance measure used. must one \"euclidean\", \"maximum\", \"manhattan\", \"canberra\", \"binary\" \"minkowski\".  Correlation coefficient can also used, including \"pearson\", \"spearman\" \"kendall\". way, 1 - cor used distance. addition, can also provide dist object directly function return dist object. Use NULL, want calculate distance. method string agglomeration method used. (unambiguous abbreviation ) one \"ward.D\", \"ward.D2\", \"single\", \"complete\", \"average\" (= UPGMA), \"mcquitty\" (= WPGMA), \"median\" (= WPGMC) \"centroid\" (= UPGMC). can also provide function accepts distance returns hclust object. Alternative, can supply object can coerced hclust. use_missing optional character string giving method computing covariances presence missing values. must (abbreviation ) one strings \"everything\", \".obs\", \"complete.obs\", \"na..complete\", \"pairwise.complete.obs\". used distance correlation coefficient string. reorder_group single boolean value, indicates whether Hierarchical Clustering groups, used previous groups established. k integer scalar indicates desired number groups. h numeric scalar indicates heights tree cut. plot_dendrogram boolean value indicates whether plot dendrogram tree. plot_cut_height boolean value indicates whether plot cut height. root length one string numeric indicates root branch. center boolean value. TRUE, nodes plotted centered respect leaves branch. Otherwise (default), plot middle direct child nodes. type string indicates plot type, \"rectangle\" \"triangle\". size Plot size, can unit object. data matrix, data frame, even simple vector converted one-column matrix. data argument set NULL, align_* use layout data. Additionally, data argument can also accept function (purrr-like lambda also okay), applied layout data, important note align_* functions consider rows observations. means NROW(data) must return number specific layout axis. heatmap_layout(): column annotation, layout data transposed using (data function, applied transposed matrix). necessary column annotation uses heatmap columns observations, need rows. stack_layout(): layout data used since place plots along single axis. free_labs boolean value string containing one \"t\", \"l\", \"b\", \"r\" indicates axis title free alignment. NULL, axis title aligned. Default: \"tlbr\". free_spaces boolean value string containing one \"t\", \"l\", \"b\", \"r\" indicates border spaces removed. NULL (default), space removed. plot_data function used transform plot data rendering. default, 'll inherit parent layout. parent layout, default NULL, means want modify anything. Used modify data layout created, data handled ggplot2 rendering. Use hook needs change default data geoms. theme theme() object, added plots layout. Use NULL want theme components added. Use waiver(), want inherit parent layout. set_context single boolean value indicates whether set active context current plot. TRUE, subsequent ggplot elements added plot. order single integer plot area order. name string plot name. Used switch active context hmanno() stack_active().","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/align_dendro.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reorder or Group layout based on hierarchical clustering — align_dendro","text":"new Align object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/align_dendro.html","id":"ggplot-specification","dir":"Reference","previous_headings":"","what":"ggplot2 specification","title":"Reorder or Group layout based on hierarchical clustering — align_dendro","text":"align_dendro initializes ggplot data mapping. internal always use default mapping aes(x = .data$x, y = .data$y). default ggplot data node coordinates, addition, geom_segment layer data tree segments edge coordinates added. node tree segments edge coordinates contains following columns: index: original index tree current node label: node label text x y: x-axis y-axis coordinates current node start node current edge. xend yend: x-axis y-axis coordinates terminal node current edge. branch: branch current node edge . can use column color different groups. panel: panel current node , split plot panel using facet_grid, column show panel current node edge . Note: nodes may fall outside panel (two panel), possible NA values column. .panel: Similar panel column, always give correct branch usage ggplot facet. panel1 panel2: panel1 panel2 variables functionality panel, specifically edge data correspond nodes edge. leaf: logical value indicates whether current node leaf.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/reference/align_dendro.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reorder or Group layout based on hierarchical clustering — align_dendro","text":"","code":"ggheatmap(matrix(rnorm(81), nrow = 9)) +     hmanno(\"top\") +     align_dendro()  ggheatmap(matrix(rnorm(81), nrow = 9)) +     hmanno(\"top\") +     align_dendro(k = 3L)"},{"path":"https://yunuuuu.github.io/ggalign/reference/align_gg.html","id":null,"dir":"Reference","previous_headings":"","what":"Create ggplot object with a customized data — align_gg","title":"Create ggplot object with a customized data — align_gg","text":"ggalign just alias align_gg.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/align_gg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create ggplot object with a customized data — align_gg","text":"","code":"align_gg(   data = NULL,   mapping = aes(),   size = NULL,   free_labs = waiver(),   free_spaces = waiver(),   plot_data = waiver(),   theme = waiver(),   limits = TRUE,   facet = TRUE,   set_context = TRUE,   order = NULL,   name = NULL )  ggalign(   data = NULL,   mapping = aes(),   size = NULL,   free_labs = waiver(),   free_spaces = waiver(),   plot_data = waiver(),   theme = waiver(),   limits = TRUE,   facet = TRUE,   set_context = TRUE,   order = NULL,   name = NULL )"},{"path":"https://yunuuuu.github.io/ggalign/reference/align_gg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create ggplot object with a customized data — align_gg","text":"data matrix, data frame, even simple vector converted one-column matrix. data argument set NULL, align_* use layout data. Additionally, data argument can also accept function (purrr-like lambda also okay), applied layout data, important note align_* functions consider rows observations. means NROW(data) must return number specific layout axis. heatmap_layout(): column annotation, layout data transposed using (data function, applied transposed matrix). necessary column annotation uses heatmap columns observations, need rows. stack_layout(): layout data used since place plots along single axis. mapping Additional default list aesthetic mappings use plot. size Plot size, can unit object. free_labs boolean value string containing one \"t\", \"l\", \"b\", \"r\" indicates axis title free alignment. NULL, axis title aligned. Default: \"tlbr\". free_spaces boolean value string containing one \"t\", \"l\", \"b\", \"r\" indicates border spaces removed. NULL (default), space removed. plot_data function used transform plot data rendering. default, 'll inherit parent layout. parent layout, default NULL, means want modify anything. Used modify data layout created, data handled ggplot2 rendering. Use hook needs change default data geoms. theme theme() object, added plots layout. Use NULL want theme components added. Use waiver(), want inherit parent layout. limits boolean value indicates whether set layout limtis plot. facet boolean value indicates whether set layout facet plot. FALSE, limits always FALSE . set_context single boolean value indicates whether set active context current plot. TRUE, subsequent ggplot elements added plot. order single integer plot area order. name string plot name. Used switch active context hmanno() stack_active().","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/align_gg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create ggplot object with a customized data — align_gg","text":"AlignGG object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/align_gg.html","id":"ggplot-specification","dir":"Reference","previous_headings":"","what":"ggplot2 specification","title":"Create ggplot object with a customized data — align_gg","text":"align_gg initializes ggplot data mapping. internal always use default mapping aes(y = .data$.y) aes(x = .data$.x). ggplot usage, matrix (including simple vector) data converted long-format data frame. data underlying ggplot object contain following columns: .panel: panel current layout axis. .x .y: x y coordinates .row_names .row_index: factor row names integer row index original matrix data frame. .column_names .column_index: column names column index original matrix (applicable data matrix). value: actual matrix value  (applicable data matrix). case input data already data frame, three additional columns (.row_names, .row_index, .panel) added data frame. data inherit heatmap_layout(), additional column added. .extra_panel: panel information column (left right annotation) row (top bottom annotation).","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/align_gg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create ggplot object with a customized data — align_gg","text":"","code":"ggheatmap(matrix(rnorm(81), nrow = 9)) +     hmanno(\"top\") +     ggalign() +     geom_point(aes(y = value))"},{"path":"https://yunuuuu.github.io/ggalign/reference/align_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Group and align layout based on categorical or factor levels. — align_group","title":"Group and align layout based on categorical or factor levels. — align_group","text":"Group align layout based categorical factor levels.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/align_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group and align layout based on categorical or factor levels. — align_group","text":"","code":"align_group(group, set_context = FALSE, name = NULL)"},{"path":"https://yunuuuu.github.io/ggalign/reference/align_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group and align layout based on categorical or factor levels. — align_group","text":"group character define groups, split axis different panel. set_context single boolean value indicates whether set active context current plot. TRUE, subsequent ggplot elements added plot. name string plot name. Used switch active context hmanno() stack_active().","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/align_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group and align layout based on categorical or factor levels. — align_group","text":"new Align object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/align_group.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group and align layout based on categorical or factor levels. — align_group","text":"","code":"small_mat <- matrix(rnorm(81), nrow = 9) ggheatmap(small_mat) +     hmanno(\"top\") +     align_group(sample(letters[1:4], ncol(small_mat), replace = TRUE))"},{"path":"https://yunuuuu.github.io/ggalign/reference/align_kmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Split layout by k-means clustering groups. — align_kmeans","title":"Split layout by k-means clustering groups. — align_kmeans","text":"Split layout k-means clustering groups.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/align_kmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split layout by k-means clustering groups. — align_kmeans","text":"","code":"align_kmeans(   centers,   iter.max = 10,   nstart = 1,   algorithm = c(\"Hartigan-Wong\", \"Lloyd\", \"Forgy\", \"MacQueen\"),   trace = FALSE,   data = NULL,   set_context = FALSE,   name = NULL )"},{"path":"https://yunuuuu.github.io/ggalign/reference/align_kmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split layout by k-means clustering groups. — align_kmeans","text":"centers either number clusters, say \\(k\\), set     initial (distinct) cluster centres.  number, random set     (distinct) rows x chosen initial centres. iter.max maximum number iterations allowed. nstart centers number, many random sets     chosen? algorithm character: may abbreviated.  Note     \"Lloyd\" \"Forgy\" alternative names one     algorithm. trace logical integer number, currently used     default method (\"Hartigan-Wong\"): positive (true),     tracing information progress algorithm     produced.  Higher values may produce tracing information. data matrix, data frame, even simple vector converted one-column matrix. data argument set NULL, align_* use layout data. Additionally, data argument can also accept function (purrr-like lambda also okay), applied layout data, important note align_* functions consider rows observations. means NROW(data) must return number specific layout axis. heatmap_layout(): column annotation, layout data transposed using (data function, applied transposed matrix). necessary column annotation uses heatmap columns observations, need rows. stack_layout(): layout data used since place plots along single axis. set_context single boolean value indicates whether set active context current plot. TRUE, subsequent ggplot elements added plot. name string plot name. Used switch active context hmanno() stack_active().","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/align_kmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split layout by k-means clustering groups. — align_kmeans","text":"new Align object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/align_kmeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split layout by k-means clustering groups. — align_kmeans","text":"","code":"ggheatmap(matrix(rnorm(81), nrow = 9)) +     hmanno(\"t\") +     align_kmeans(3L)"},{"path":"https://yunuuuu.github.io/ggalign/reference/align_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create ggplot object with layout panel data — align_panel","title":"Create ggplot object with layout panel data — align_panel","text":"similar ggalign() function, always use layout panel data. ggpanel just alias align_panel.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/align_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create ggplot object with layout panel data — align_panel","text":"","code":"align_panel(   mapping = aes(),   size = NULL,   free_labs = waiver(),   free_spaces = waiver(),   plot_data = waiver(),   theme = waiver(),   limits = TRUE,   facet = TRUE,   set_context = TRUE,   order = NULL,   name = NULL )  ggpanel(   mapping = aes(),   size = NULL,   free_labs = waiver(),   free_spaces = waiver(),   plot_data = waiver(),   theme = waiver(),   limits = TRUE,   facet = TRUE,   set_context = TRUE,   order = NULL,   name = NULL )"},{"path":"https://yunuuuu.github.io/ggalign/reference/align_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create ggplot object with layout panel data — align_panel","text":"mapping Additional default list aesthetic mappings use plot. size Plot size, can unit object. free_labs boolean value string containing one \"t\", \"l\", \"b\", \"r\" indicates axis title free alignment. NULL, axis title aligned. Default: \"tlbr\". free_spaces boolean value string containing one \"t\", \"l\", \"b\", \"r\" indicates border spaces removed. NULL (default), space removed. plot_data function used transform plot data rendering. default, 'll inherit parent layout. parent layout, default NULL, means want modify anything. Used modify data layout created, data handled ggplot2 rendering. Use hook needs change default data geoms. theme theme() object, added plots layout. Use NULL want theme components added. Use waiver(), want inherit parent layout. limits boolean value indicates whether set layout limtis plot. facet boolean value indicates whether set layout facet plot. FALSE, limits always FALSE . set_context single boolean value indicates whether set active context current plot. TRUE, subsequent ggplot elements added plot. order single integer plot area order. name string plot name. Used switch active context hmanno() stack_active().","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/align_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create ggplot object with layout panel data — align_panel","text":"AlignPanel object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/align_panel.html","id":"ggplot-specification","dir":"Reference","previous_headings":"","what":"ggplot2 specification","title":"Create ggplot object with layout panel data — align_panel","text":"align_panel initializes ggplot data mapping. internal always use default mapping aes(y = .data$.y) aes(x = .data$.x). data underlying ggplot object contains following columns: .panel: panel current layout axis. .index: index original layout data. .x .y: x y coordinates","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/align_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create ggplot object with layout panel data — align_panel","text":"","code":"ggheatmap(matrix(rnorm(81), nrow = 9)) +     hmanno(\"top\") +     ggalign() +     geom_point(aes(y = value))"},{"path":"https://yunuuuu.github.io/ggalign/reference/align_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrange multiple plots into a grid — align_plots","title":"Arrange multiple plots into a grid — align_plots","text":"Arrange multiple plots grid","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/align_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrange multiple plots into a grid — align_plots","text":"","code":"align_plots(   ...,   ncol = NULL,   nrow = NULL,   byrow = TRUE,   widths = NA,   heights = NA,   design = NULL,   guides = NULL,   title = NULL,   subtitle = NULL,   caption = NULL,   theme = NULL )"},{"path":"https://yunuuuu.github.io/ggalign/reference/align_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrange multiple plots into a grid — align_plots","text":"... <dyn-dots> list plots, ususally ggplot object. Use NULL indicate empty spacer. ncol, nrow dimensions grid create - NULL use logic facet_wrap() set dimensions byrow FALSE plots filled column-major order. widths, heights relative widths heights column row grid. get repeated match dimensions grid. special value NA behave 1null unit unless fixed aspect plot inserted case allow dimension expand contract match aspect ratio content. design Specification location areas layout. Can either specified text string concatenating calls area() together. guides guide collected? string containing one \"t\", \"l\", \"b\", \"r\". title text title. subtitle text subtitle plot displayed title. caption text caption displayed bottom-right plot default. theme theme() object rendering guides, title, subtitle, caption, margins background.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/align_plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Arrange multiple plots into a grid — align_plots","text":"alignpatches object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/align_plots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arrange multiple plots into a grid — align_plots","text":"","code":"# directly copied from patchwork p1 <- ggplot(mtcars) +     geom_point(aes(mpg, disp)) p2 <- ggplot(mtcars) +     geom_boxplot(aes(gear, disp, group = gear)) p3 <- ggplot(mtcars) +     geom_bar(aes(gear)) +     facet_wrap(~cyl) p4 <- ggplot(mtcars) +     geom_bar(aes(carb)) p5 <- ggplot(mtcars) +     geom_violin(aes(cyl, mpg, group = cyl))  # Either add the plots as single arguments align_plots(p1, p2, p3, p4, p5)   # Or use bang-bang-bang to add a list align_plots(!!!list(p1, p2, p3), p4, p5)   # Match plots to areas by name design <- \"#BB            AA#\" align_plots(B = p1, A = p2, design = design)   # Compare to not using named plot arguments align_plots(p1, p2, design = design)"},{"path":"https://yunuuuu.github.io/ggalign/reference/align_reorder.html","id":null,"dir":"Reference","previous_headings":"","what":"Reorders layout observations based on weights or summary statistics. — align_reorder","title":"Reorders layout observations based on weights or summary statistics. — align_reorder","text":"Reorders layout observations based weights summary statistics.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/align_reorder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reorders layout observations based on weights or summary statistics. — align_reorder","text":"","code":"align_reorder(   order = rowMeans,   ...,   strict = TRUE,   reverse = FALSE,   data = NULL,   set_context = FALSE,   name = NULL )"},{"path":"https://yunuuuu.github.io/ggalign/reference/align_reorder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reorders layout observations based on weights or summary statistics. — align_reorder","text":"order summary function. take data return statistic, call order2() extract order information. Alternatively, can also provide ordering integer character index. ... <dyn-dots> Additional arguments passed function provided order argument. strict boolean value indicates whether order strict. previous groups established, strict FALSE, reorder observations group. reverse boolean value. sort order reverse? data matrix, data frame, even simple vector converted one-column matrix. data argument set NULL, align_* use layout data. Additionally, data argument can also accept function (purrr-like lambda also okay), applied layout data, important note align_* functions consider rows observations. means NROW(data) must return number specific layout axis. heatmap_layout(): column annotation, layout data transposed using (data function, applied transposed matrix). necessary column annotation uses heatmap columns observations, need rows. stack_layout(): layout data used since place plots along single axis. set_context single boolean value indicates whether set active context current plot. TRUE, subsequent ggplot elements added plot. name string plot name. Used switch active context hmanno() stack_active().","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/align_reorder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reorders layout observations based on weights or summary statistics. — align_reorder","text":"new Align object.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/reference/align_reorder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reorders layout observations based on weights or summary statistics. — align_reorder","text":"","code":"ggheatmap(matrix(rnorm(81), nrow = 9)) +     hmanno(\"l\") +     align_reorder()"},{"path":"https://yunuuuu.github.io/ggalign/reference/alignpatch.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare plots to be aligned with align_plots — alignpatch","title":"Prepare plots to be aligned with align_plots — alignpatch","text":"Prepare plots aligned align_plots","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/alignpatch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare plots to be aligned with align_plots — alignpatch","text":"","code":"alignpatch(x)"},{"path":"https://yunuuuu.github.io/ggalign/reference/alignpatch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare plots to be aligned with align_plots — alignpatch","text":"x plot object prepared alignment. ggalign implement alignpatch method following objects: ggplot alignpatches wrapped_plot patch wrapped_patch","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/alignpatch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare plots to be aligned with align_plots — alignpatch","text":"object Patch object.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/reference/alignpatch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare plots to be aligned with align_plots — alignpatch","text":"","code":"alignpatch(ggplot()) #> <ggproto object: Class PatchGgplot, Patch, gg> #>     align_border: function #>     align_panel_sizes: function #>     collect_guides: function #>     free_border: function #>     free_lab: function #>     get_sizes: function #>     gt: NULL #>     patch_gtable: function #>     plot: gg, ggplot #>     respect: function #>     split_gt: function #>     super:  <ggproto object: Class PatchGgplot, Patch, gg>"},{"path":"https://yunuuuu.github.io/ggalign/reference/area.html","id":null,"dir":"Reference","previous_headings":"","what":"Define the plotting areas in align_plots — area","title":"Define the plotting areas in align_plots — area","text":"small helper used specify single area rectangular grid contain plot. Objects constructed area() can concatenated together c() order specify multiple areas.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define the plotting areas in align_plots — area","text":"","code":"area(t, l, b = t, r = l)"},{"path":"https://yunuuuu.github.io/ggalign/reference/area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define the plotting areas in align_plots — area","text":"t, b top bottom bounds area grid l, r left right bounds area int grid","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define the plotting areas in align_plots — area","text":"align_area object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/area.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define the plotting areas in align_plots — area","text":"grid areas specified reference enumerate rows top bottom, coloumns left right. means t l always less equal b r respectively. Instead specifying area placement combination area() calls, possible instead pass single string   equivalent ","code":"areas <- c(area(1, 1, 2, 1),            area(2, 3, 3, 3)) areas < -\"A##           A#B           ##B\""},{"path":"https://yunuuuu.github.io/ggalign/reference/area.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define the plotting areas in align_plots — area","text":"","code":"p1 <- ggplot(mtcars) +     geom_point(aes(mpg, disp)) p2 <- ggplot(mtcars) +     geom_boxplot(aes(gear, disp, group = gear)) p3 <- ggplot(mtcars) +     geom_bar(aes(gear)) +     facet_wrap(~cyl)  layout <- c(     area(1, 1),     area(1, 3, 3),     area(3, 1, 3, 2) )  # Show the layout to make sure it looks as it should plot(layout)   # Apply it to a patchwork align_plots(p1, p2, p3, design = layout)"},{"path":"https://yunuuuu.github.io/ggalign/reference/cash-Layout-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset a Layout object — $,Layout-method","title":"Subset a Layout object — $,Layout-method","text":"Used ggplot_build ggsave","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/cash-Layout-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset a Layout object — $,Layout-method","text":"","code":"# S4 method for class 'Layout' x$name"},{"path":"https://yunuuuu.github.io/ggalign/reference/cash-Layout-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset a Layout object — $,Layout-method","text":"x Layout object name string slot name Layout object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/cash-Layout-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset a Layout object — $,Layout-method","text":"slot value.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/dendrogram_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Dengrogram x and y coordinates — dendrogram_data","title":"Dengrogram x and y coordinates — dendrogram_data","text":"Dengrogram x y coordinates","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/dendrogram_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dengrogram x and y coordinates — dendrogram_data","text":"","code":"dendrogram_data(   tree,   priority = \"right\",   center = FALSE,   type = \"rectangle\",   leaf_pos = NULL,   leaf_braches = NULL,   branch_gap = NULL,   root = NULL )"},{"path":"https://yunuuuu.github.io/ggalign/reference/dendrogram_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dengrogram x and y coordinates — dendrogram_data","text":"tree hclust dendrogram object. priority string \"left\" \"right\". draw right left, left override right, take \"left\" priority. draw left right, right override left, take \"right\" priority. used align_dendro() provide support facet operation ggplot2. center boolean value. TRUE, nodes plotted centered respect leaves branch. Otherwise (default), plot middle direct child nodes. type string indicates plot type, \"rectangle\" \"triangle\". leaf_pos x-coordinates leaf node. Must length number observations tree. leaf_braches Branches leaf node. Must length number observations tree. Usually come cutree. branch_gap single numeric value indicates gap different branches. root length one string numeric indicates root branch.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/dendrogram_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dengrogram x and y coordinates — dendrogram_data","text":"list 2 data.frame. One node coordinates, another edge coordinates. node tree segments edge coordinates contains following columns: index: original index tree current node label: node label text x y: x-axis y-axis coordinates current node start node current edge. xend yend: x-axis y-axis coordinates terminal node current edge. branch: branch current node edge . can use column color different groups. panel: panel current node , split plot panel using facet_grid, column show panel current node edge . Note: nodes may fall outside panel (two panels), possible NA values column. ggpanel: Similar panel column, always give correct branch usage ggplot facet. panel1 panel2: panel1 panel2 variables functionality panel, specifically edge data correspond nodes edge. leaf: logical value indicates whether current node leaf.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/dendrogram_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dengrogram x and y coordinates — dendrogram_data","text":"","code":"dendrogram_data(hclust(dist(USArrests), \"ave\")) #> $node #>    index          label         x         y branch  leaf panel ggpanel #> 1      9        Florida  1.000000  0.000000   root  TRUE  <NA>    <NA> #> 2     33 North Carolina  2.000000  0.000000   root  TRUE  <NA>    <NA> #> 3     NA           <NA>  1.500000 38.527912   root FALSE  <NA>    <NA> #> 4      5     California  3.000000  0.000000   root  TRUE  <NA>    <NA> #> 5     20       Maryland  4.000000  0.000000   root  TRUE  <NA>    <NA> #> 6      3        Arizona  5.000000  0.000000   root  TRUE  <NA>    <NA> #> 7     31     New Mexico  6.000000  0.000000   root  TRUE  <NA>    <NA> #> 8     NA           <NA>  5.500000 13.896043   root FALSE  <NA>    <NA> #> 9     NA           <NA>  4.750000 15.453120   root FALSE  <NA>    <NA> #> 10    NA           <NA>  3.875000 28.012211   root FALSE  <NA>    <NA> #> 11     8       Delaware  7.000000  0.000000   root  TRUE  <NA>    <NA> #> 12     1        Alabama  8.000000  0.000000   root  TRUE  <NA>    <NA> #> 13    18      Louisiana  9.000000  0.000000   root  TRUE  <NA>    <NA> #> 14    NA           <NA>  8.500000 15.454449   root FALSE  <NA>    <NA> #> 15    NA           <NA>  7.750000 16.891499   root FALSE  <NA>    <NA> #> 16    13       Illinois 10.000000  0.000000   root  TRUE  <NA>    <NA> #> 17    32       New York 11.000000  0.000000   root  TRUE  <NA>    <NA> #> 18    NA           <NA> 10.500000  6.236986   root FALSE  <NA>    <NA> #> 19    22       Michigan 12.000000  0.000000   root  TRUE  <NA>    <NA> #> 20    28         Nevada 13.000000  0.000000   root  TRUE  <NA>    <NA> #> 21    NA           <NA> 12.500000 13.297368   root FALSE  <NA>    <NA> #> 22    NA           <NA> 11.500000 18.417331   root FALSE  <NA>    <NA> #> 23    NA           <NA>  9.625000 26.363428   root FALSE  <NA>    <NA> #> 24     2         Alaska 14.000000  0.000000   root  TRUE  <NA>    <NA> #> 25    24    Mississippi 15.000000  0.000000   root  TRUE  <NA>    <NA> #> 26    40 South Carolina 16.000000  0.000000   root  TRUE  <NA>    <NA> #> 27    NA           <NA> 15.500000 21.167192   root FALSE  <NA>    <NA> #> 28    NA           <NA> 14.750000 28.095803   root FALSE  <NA>    <NA> #> 29    NA           <NA> 12.187500 39.394633   root FALSE  <NA>    <NA> #> 30    NA           <NA>  8.031250 44.283922   root FALSE  <NA>    <NA> #> 31    NA           <NA>  4.765625 77.605024   root FALSE  <NA>    <NA> #> 32    47     Washington 17.000000  0.000000   root  TRUE  <NA>    <NA> #> 33    37         Oregon 18.000000  0.000000   root  TRUE  <NA>    <NA> #> 34    50        Wyoming 19.000000  0.000000   root  TRUE  <NA>    <NA> #> 35    36       Oklahoma 20.000000  0.000000   root  TRUE  <NA>    <NA> #> 36    46       Virginia 21.000000  0.000000   root  TRUE  <NA>    <NA> #> 37    NA           <NA> 20.500000  7.355270   root FALSE  <NA>    <NA> #> 38    NA           <NA> 19.750000 10.736739   root FALSE  <NA>    <NA> #> 39    NA           <NA> 18.875000 12.878100   root FALSE  <NA>    <NA> #> 40    NA           <NA> 17.937500 16.425489   root FALSE  <NA>    <NA> #> 41    39   Rhode Island 22.000000  0.000000   root  TRUE  <NA>    <NA> #> 42    21  Massachusetts 23.000000  0.000000   root  TRUE  <NA>    <NA> #> 43    30     New Jersey 24.000000  0.000000   root  TRUE  <NA>    <NA> #> 44    NA           <NA> 23.500000 11.456439   root FALSE  <NA>    <NA> #> 45    NA           <NA> 22.750000 22.595978   root FALSE  <NA>    <NA> #> 46    NA           <NA> 20.343750 26.713777   root FALSE  <NA>    <NA> #> 47    25       Missouri 25.000000  0.000000   root  TRUE  <NA>    <NA> #> 48     4       Arkansas 26.000000  0.000000   root  TRUE  <NA>    <NA> #> 49    42      Tennessee 27.000000  0.000000   root  TRUE  <NA>    <NA> #> 50    NA           <NA> 26.500000 12.614278   root FALSE  <NA>    <NA> #> 51    NA           <NA> 25.750000 20.198479   root FALSE  <NA>    <NA> #> 52    10        Georgia 28.000000  0.000000   root  TRUE  <NA>    <NA> #> 53     6       Colorado 29.000000  0.000000   root  TRUE  <NA>    <NA> #> 54    43          Texas 30.000000  0.000000   root  TRUE  <NA>    <NA> #> 55    NA           <NA> 29.500000 14.501034   root FALSE  <NA>    <NA> #> 56    NA           <NA> 28.750000 23.972143   root FALSE  <NA>    <NA> #> 57    NA           <NA> 27.250000 29.054195   root FALSE  <NA>    <NA> #> 58    NA           <NA> 23.796875 44.837933   root FALSE  <NA>    <NA> #> 59    12          Idaho 31.000000  0.000000   root  TRUE  <NA>    <NA> #> 60    27       Nebraska 32.000000  0.000000   root  TRUE  <NA>    <NA> #> 61    17       Kentucky 33.000000  0.000000   root  TRUE  <NA>    <NA> #> 62    26        Montana 34.000000  0.000000   root  TRUE  <NA>    <NA> #> 63    NA           <NA> 33.500000  3.834058   root FALSE  <NA>    <NA> #> 64    NA           <NA> 32.750000 12.438692   root FALSE  <NA>    <NA> #> 65    NA           <NA> 31.875000 15.026107   root FALSE  <NA>    <NA> #> 66    35           Ohio 35.000000  0.000000   root  TRUE  <NA>    <NA> #> 67    44           Utah 36.000000  0.000000   root  TRUE  <NA>    <NA> #> 68    NA           <NA> 35.500000  6.637771   root FALSE  <NA>    <NA> #> 69    14        Indiana 37.000000  0.000000   root  TRUE  <NA>    <NA> #> 70    16         Kansas 38.000000  0.000000   root  TRUE  <NA>    <NA> #> 71    NA           <NA> 37.500000  3.929377   root FALSE  <NA>    <NA> #> 72     7    Connecticut 39.000000  0.000000   root  TRUE  <NA>    <NA> #> 73    38   Pennsylvania 40.000000  0.000000   root  TRUE  <NA>    <NA> #> 74    NA           <NA> 39.500000  8.027453   root FALSE  <NA>    <NA> #> 75    NA           <NA> 38.500000 13.352260   root FALSE  <NA>    <NA> #> 76    NA           <NA> 37.000000 15.122897   root FALSE  <NA>    <NA> #> 77    NA           <NA> 34.437500 20.598507   root FALSE  <NA>    <NA> #> 78    11         Hawaii 41.000000  0.000000   root  TRUE  <NA>    <NA> #> 79    48  West Virginia 42.000000  0.000000   root  TRUE  <NA>    <NA> #> 80    19          Maine 43.000000  0.000000   root  TRUE  <NA>    <NA> #> 81    41   South Dakota 44.000000  0.000000   root  TRUE  <NA>    <NA> #> 82    NA           <NA> 43.500000  8.537564   root FALSE  <NA>    <NA> #> 83    NA           <NA> 42.750000 10.771175   root FALSE  <NA>    <NA> #> 84    34   North Dakota 45.000000  0.000000   root  TRUE  <NA>    <NA> #> 85    45        Vermont 46.000000  0.000000   root  TRUE  <NA>    <NA> #> 86    NA           <NA> 45.500000 13.044922   root FALSE  <NA>    <NA> #> 87    23      Minnesota 47.000000  0.000000   root  TRUE  <NA>    <NA> #> 88    49      Wisconsin 48.000000  0.000000   root  TRUE  <NA>    <NA> #> 89    15           Iowa 49.000000  0.000000   root  TRUE  <NA>    <NA> #> 90    29  New Hampshire 50.000000  0.000000   root  TRUE  <NA>    <NA> #> 91    NA           <NA> 49.500000  2.291288   root FALSE  <NA>    <NA> #> 92    NA           <NA> 48.750000 10.184218   root FALSE  <NA>    <NA> #> 93    NA           <NA> 47.875000 18.993398   root FALSE  <NA>    <NA> #> 94    NA           <NA> 46.687500 27.779904   root FALSE  <NA>    <NA> #> 95    NA           <NA> 44.718750 33.117815   root FALSE  <NA>    <NA> #> 96    NA           <NA> 42.859375 41.094765   root FALSE  <NA>    <NA> #> 97    NA           <NA> 38.648438 54.746831   root FALSE  <NA>    <NA> #> 98    NA           <NA> 31.222656 89.232093   root FALSE  <NA>    <NA> #>  #> $edge #>             x      xend          y       yend branch panel1 panel2 ggpanel #> 1    1.000000  1.000000   0.000000  38.527912   root   <NA>   <NA>    <NA> #> 2    2.000000  2.000000   0.000000  38.527912   root   <NA>   <NA>    <NA> #> 3    1.500000  1.000000  38.527912  38.527912   root   <NA>   <NA>    <NA> #> 4    1.500000  2.000000  38.527912  38.527912   root   <NA>   <NA>    <NA> #> 5    5.000000  5.000000   0.000000  13.896043   root   <NA>   <NA>    <NA> #> 6    6.000000  6.000000   0.000000  13.896043   root   <NA>   <NA>    <NA> #> 7    5.500000  5.000000  13.896043  13.896043   root   <NA>   <NA>    <NA> #> 8    5.500000  6.000000  13.896043  13.896043   root   <NA>   <NA>    <NA> #> 9    4.000000  4.000000   0.000000  15.453120   root   <NA>   <NA>    <NA> #> 10   5.500000  5.500000  13.896043  15.453120   root   <NA>   <NA>    <NA> #> 11   4.750000  4.000000  15.453120  15.453120   root   <NA>   <NA>    <NA> #> 12   4.750000  5.500000  15.453120  15.453120   root   <NA>   <NA>    <NA> #> 13   3.000000  3.000000   0.000000  28.012211   root   <NA>   <NA>    <NA> #> 14   4.750000  4.750000  15.453120  28.012211   root   <NA>   <NA>    <NA> #> 15   3.875000  3.000000  28.012211  28.012211   root   <NA>   <NA>    <NA> #> 16   3.875000  4.750000  28.012211  28.012211   root   <NA>   <NA>    <NA> #> 17   8.000000  8.000000   0.000000  15.454449   root   <NA>   <NA>    <NA> #> 18   9.000000  9.000000   0.000000  15.454449   root   <NA>   <NA>    <NA> #> 19   8.500000  8.000000  15.454449  15.454449   root   <NA>   <NA>    <NA> #> 20   8.500000  9.000000  15.454449  15.454449   root   <NA>   <NA>    <NA> #> 21   7.000000  7.000000   0.000000  16.891499   root   <NA>   <NA>    <NA> #> 22   8.500000  8.500000  15.454449  16.891499   root   <NA>   <NA>    <NA> #> 23   7.750000  7.000000  16.891499  16.891499   root   <NA>   <NA>    <NA> #> 24   7.750000  8.500000  16.891499  16.891499   root   <NA>   <NA>    <NA> #> 25  10.000000 10.000000   0.000000   6.236986   root   <NA>   <NA>    <NA> #> 26  11.000000 11.000000   0.000000   6.236986   root   <NA>   <NA>    <NA> #> 27  10.500000 10.000000   6.236986   6.236986   root   <NA>   <NA>    <NA> #> 28  10.500000 11.000000   6.236986   6.236986   root   <NA>   <NA>    <NA> #> 29  12.000000 12.000000   0.000000  13.297368   root   <NA>   <NA>    <NA> #> 30  13.000000 13.000000   0.000000  13.297368   root   <NA>   <NA>    <NA> #> 31  12.500000 12.000000  13.297368  13.297368   root   <NA>   <NA>    <NA> #> 32  12.500000 13.000000  13.297368  13.297368   root   <NA>   <NA>    <NA> #> 33  10.500000 10.500000   6.236986  18.417331   root   <NA>   <NA>    <NA> #> 34  12.500000 12.500000  13.297368  18.417331   root   <NA>   <NA>    <NA> #> 35  11.500000 10.500000  18.417331  18.417331   root   <NA>   <NA>    <NA> #> 36  11.500000 12.500000  18.417331  18.417331   root   <NA>   <NA>    <NA> #> 37   7.750000  7.750000  16.891499  26.363428   root   <NA>   <NA>    <NA> #> 38  11.500000 11.500000  18.417331  26.363428   root   <NA>   <NA>    <NA> #> 39   9.625000  7.750000  26.363428  26.363428   root   <NA>   <NA>    <NA> #> 40   9.625000 11.500000  26.363428  26.363428   root   <NA>   <NA>    <NA> #> 41  15.000000 15.000000   0.000000  21.167192   root   <NA>   <NA>    <NA> #> 42  16.000000 16.000000   0.000000  21.167192   root   <NA>   <NA>    <NA> #> 43  15.500000 15.000000  21.167192  21.167192   root   <NA>   <NA>    <NA> #> 44  15.500000 16.000000  21.167192  21.167192   root   <NA>   <NA>    <NA> #> 45  14.000000 14.000000   0.000000  28.095803   root   <NA>   <NA>    <NA> #> 46  15.500000 15.500000  21.167192  28.095803   root   <NA>   <NA>    <NA> #> 47  14.750000 14.000000  28.095803  28.095803   root   <NA>   <NA>    <NA> #> 48  14.750000 15.500000  28.095803  28.095803   root   <NA>   <NA>    <NA> #> 49   9.625000  9.625000  26.363428  39.394633   root   <NA>   <NA>    <NA> #> 50  14.750000 14.750000  28.095803  39.394633   root   <NA>   <NA>    <NA> #> 51  12.187500  9.625000  39.394633  39.394633   root   <NA>   <NA>    <NA> #> 52  12.187500 14.750000  39.394633  39.394633   root   <NA>   <NA>    <NA> #> 53   3.875000  3.875000  28.012211  44.283922   root   <NA>   <NA>    <NA> #> 54  12.187500 12.187500  39.394633  44.283922   root   <NA>   <NA>    <NA> #> 55   8.031250  3.875000  44.283922  44.283922   root   <NA>   <NA>    <NA> #> 56   8.031250 12.187500  44.283922  44.283922   root   <NA>   <NA>    <NA> #> 57   1.500000  1.500000  38.527912  77.605024   root   <NA>   <NA>    <NA> #> 58   8.031250  8.031250  44.283922  77.605024   root   <NA>   <NA>    <NA> #> 59   4.765625  1.500000  77.605024  77.605024   root   <NA>   <NA>    <NA> #> 60   4.765625  8.031250  77.605024  77.605024   root   <NA>   <NA>    <NA> #> 61  20.000000 20.000000   0.000000   7.355270   root   <NA>   <NA>    <NA> #> 62  21.000000 21.000000   0.000000   7.355270   root   <NA>   <NA>    <NA> #> 63  20.500000 20.000000   7.355270   7.355270   root   <NA>   <NA>    <NA> #> 64  20.500000 21.000000   7.355270   7.355270   root   <NA>   <NA>    <NA> #> 65  19.000000 19.000000   0.000000  10.736739   root   <NA>   <NA>    <NA> #> 66  20.500000 20.500000   7.355270  10.736739   root   <NA>   <NA>    <NA> #> 67  19.750000 19.000000  10.736739  10.736739   root   <NA>   <NA>    <NA> #> 68  19.750000 20.500000  10.736739  10.736739   root   <NA>   <NA>    <NA> #> 69  18.000000 18.000000   0.000000  12.878100   root   <NA>   <NA>    <NA> #> 70  19.750000 19.750000  10.736739  12.878100   root   <NA>   <NA>    <NA> #> 71  18.875000 18.000000  12.878100  12.878100   root   <NA>   <NA>    <NA> #> 72  18.875000 19.750000  12.878100  12.878100   root   <NA>   <NA>    <NA> #> 73  17.000000 17.000000   0.000000  16.425489   root   <NA>   <NA>    <NA> #> 74  18.875000 18.875000  12.878100  16.425489   root   <NA>   <NA>    <NA> #> 75  17.937500 17.000000  16.425489  16.425489   root   <NA>   <NA>    <NA> #> 76  17.937500 18.875000  16.425489  16.425489   root   <NA>   <NA>    <NA> #> 77  23.000000 23.000000   0.000000  11.456439   root   <NA>   <NA>    <NA> #> 78  24.000000 24.000000   0.000000  11.456439   root   <NA>   <NA>    <NA> #> 79  23.500000 23.000000  11.456439  11.456439   root   <NA>   <NA>    <NA> #> 80  23.500000 24.000000  11.456439  11.456439   root   <NA>   <NA>    <NA> #> 81  22.000000 22.000000   0.000000  22.595978   root   <NA>   <NA>    <NA> #> 82  23.500000 23.500000  11.456439  22.595978   root   <NA>   <NA>    <NA> #> 83  22.750000 22.000000  22.595978  22.595978   root   <NA>   <NA>    <NA> #> 84  22.750000 23.500000  22.595978  22.595978   root   <NA>   <NA>    <NA> #> 85  17.937500 17.937500  16.425489  26.713777   root   <NA>   <NA>    <NA> #> 86  22.750000 22.750000  22.595978  26.713777   root   <NA>   <NA>    <NA> #> 87  20.343750 17.937500  26.713777  26.713777   root   <NA>   <NA>    <NA> #> 88  20.343750 22.750000  26.713777  26.713777   root   <NA>   <NA>    <NA> #> 89  26.000000 26.000000   0.000000  12.614278   root   <NA>   <NA>    <NA> #> 90  27.000000 27.000000   0.000000  12.614278   root   <NA>   <NA>    <NA> #> 91  26.500000 26.000000  12.614278  12.614278   root   <NA>   <NA>    <NA> #> 92  26.500000 27.000000  12.614278  12.614278   root   <NA>   <NA>    <NA> #> 93  25.000000 25.000000   0.000000  20.198479   root   <NA>   <NA>    <NA> #> 94  26.500000 26.500000  12.614278  20.198479   root   <NA>   <NA>    <NA> #> 95  25.750000 25.000000  20.198479  20.198479   root   <NA>   <NA>    <NA> #> 96  25.750000 26.500000  20.198479  20.198479   root   <NA>   <NA>    <NA> #> 97  29.000000 29.000000   0.000000  14.501034   root   <NA>   <NA>    <NA> #> 98  30.000000 30.000000   0.000000  14.501034   root   <NA>   <NA>    <NA> #> 99  29.500000 29.000000  14.501034  14.501034   root   <NA>   <NA>    <NA> #> 100 29.500000 30.000000  14.501034  14.501034   root   <NA>   <NA>    <NA> #> 101 28.000000 28.000000   0.000000  23.972143   root   <NA>   <NA>    <NA> #> 102 29.500000 29.500000  14.501034  23.972143   root   <NA>   <NA>    <NA> #> 103 28.750000 28.000000  23.972143  23.972143   root   <NA>   <NA>    <NA> #> 104 28.750000 29.500000  23.972143  23.972143   root   <NA>   <NA>    <NA> #> 105 25.750000 25.750000  20.198479  29.054195   root   <NA>   <NA>    <NA> #> 106 28.750000 28.750000  23.972143  29.054195   root   <NA>   <NA>    <NA> #> 107 27.250000 25.750000  29.054195  29.054195   root   <NA>   <NA>    <NA> #> 108 27.250000 28.750000  29.054195  29.054195   root   <NA>   <NA>    <NA> #> 109 20.343750 20.343750  26.713777  44.837933   root   <NA>   <NA>    <NA> #> 110 27.250000 27.250000  29.054195  44.837933   root   <NA>   <NA>    <NA> #> 111 23.796875 20.343750  44.837933  44.837933   root   <NA>   <NA>    <NA> #> 112 23.796875 27.250000  44.837933  44.837933   root   <NA>   <NA>    <NA> #> 113 33.000000 33.000000   0.000000   3.834058   root   <NA>   <NA>    <NA> #> 114 34.000000 34.000000   0.000000   3.834058   root   <NA>   <NA>    <NA> #> 115 33.500000 33.000000   3.834058   3.834058   root   <NA>   <NA>    <NA> #> 116 33.500000 34.000000   3.834058   3.834058   root   <NA>   <NA>    <NA> #> 117 32.000000 32.000000   0.000000  12.438692   root   <NA>   <NA>    <NA> #> 118 33.500000 33.500000   3.834058  12.438692   root   <NA>   <NA>    <NA> #> 119 32.750000 32.000000  12.438692  12.438692   root   <NA>   <NA>    <NA> #> 120 32.750000 33.500000  12.438692  12.438692   root   <NA>   <NA>    <NA> #> 121 31.000000 31.000000   0.000000  15.026107   root   <NA>   <NA>    <NA> #> 122 32.750000 32.750000  12.438692  15.026107   root   <NA>   <NA>    <NA> #> 123 31.875000 31.000000  15.026107  15.026107   root   <NA>   <NA>    <NA> #> 124 31.875000 32.750000  15.026107  15.026107   root   <NA>   <NA>    <NA> #> 125 35.000000 35.000000   0.000000   6.637771   root   <NA>   <NA>    <NA> #> 126 36.000000 36.000000   0.000000   6.637771   root   <NA>   <NA>    <NA> #> 127 35.500000 35.000000   6.637771   6.637771   root   <NA>   <NA>    <NA> #> 128 35.500000 36.000000   6.637771   6.637771   root   <NA>   <NA>    <NA> #> 129 37.000000 37.000000   0.000000   3.929377   root   <NA>   <NA>    <NA> #> 130 38.000000 38.000000   0.000000   3.929377   root   <NA>   <NA>    <NA> #> 131 37.500000 37.000000   3.929377   3.929377   root   <NA>   <NA>    <NA> #> 132 37.500000 38.000000   3.929377   3.929377   root   <NA>   <NA>    <NA> #> 133 39.000000 39.000000   0.000000   8.027453   root   <NA>   <NA>    <NA> #> 134 40.000000 40.000000   0.000000   8.027453   root   <NA>   <NA>    <NA> #> 135 39.500000 39.000000   8.027453   8.027453   root   <NA>   <NA>    <NA> #> 136 39.500000 40.000000   8.027453   8.027453   root   <NA>   <NA>    <NA> #> 137 37.500000 37.500000   3.929377  13.352260   root   <NA>   <NA>    <NA> #> 138 39.500000 39.500000   8.027453  13.352260   root   <NA>   <NA>    <NA> #> 139 38.500000 37.500000  13.352260  13.352260   root   <NA>   <NA>    <NA> #> 140 38.500000 39.500000  13.352260  13.352260   root   <NA>   <NA>    <NA> #> 141 35.500000 35.500000   6.637771  15.122897   root   <NA>   <NA>    <NA> #> 142 38.500000 38.500000  13.352260  15.122897   root   <NA>   <NA>    <NA> #> 143 37.000000 35.500000  15.122897  15.122897   root   <NA>   <NA>    <NA> #> 144 37.000000 38.500000  15.122897  15.122897   root   <NA>   <NA>    <NA> #> 145 31.875000 31.875000  15.026107  20.598507   root   <NA>   <NA>    <NA> #> 146 37.000000 37.000000  15.122897  20.598507   root   <NA>   <NA>    <NA> #> 147 34.437500 31.875000  20.598507  20.598507   root   <NA>   <NA>    <NA> #> 148 34.437500 37.000000  20.598507  20.598507   root   <NA>   <NA>    <NA> #> 149 43.000000 43.000000   0.000000   8.537564   root   <NA>   <NA>    <NA> #> 150 44.000000 44.000000   0.000000   8.537564   root   <NA>   <NA>    <NA> #> 151 43.500000 43.000000   8.537564   8.537564   root   <NA>   <NA>    <NA> #> 152 43.500000 44.000000   8.537564   8.537564   root   <NA>   <NA>    <NA> #> 153 42.000000 42.000000   0.000000  10.771175   root   <NA>   <NA>    <NA> #> 154 43.500000 43.500000   8.537564  10.771175   root   <NA>   <NA>    <NA> #> 155 42.750000 42.000000  10.771175  10.771175   root   <NA>   <NA>    <NA> #> 156 42.750000 43.500000  10.771175  10.771175   root   <NA>   <NA>    <NA> #> 157 45.000000 45.000000   0.000000  13.044922   root   <NA>   <NA>    <NA> #> 158 46.000000 46.000000   0.000000  13.044922   root   <NA>   <NA>    <NA> #> 159 45.500000 45.000000  13.044922  13.044922   root   <NA>   <NA>    <NA> #> 160 45.500000 46.000000  13.044922  13.044922   root   <NA>   <NA>    <NA> #> 161 49.000000 49.000000   0.000000   2.291288   root   <NA>   <NA>    <NA> #> 162 50.000000 50.000000   0.000000   2.291288   root   <NA>   <NA>    <NA> #> 163 49.500000 49.000000   2.291288   2.291288   root   <NA>   <NA>    <NA> #> 164 49.500000 50.000000   2.291288   2.291288   root   <NA>   <NA>    <NA> #> 165 48.000000 48.000000   0.000000  10.184218   root   <NA>   <NA>    <NA> #> 166 49.500000 49.500000   2.291288  10.184218   root   <NA>   <NA>    <NA> #> 167 48.750000 48.000000  10.184218  10.184218   root   <NA>   <NA>    <NA> #> 168 48.750000 49.500000  10.184218  10.184218   root   <NA>   <NA>    <NA> #> 169 47.000000 47.000000   0.000000  18.993398   root   <NA>   <NA>    <NA> #> 170 48.750000 48.750000  10.184218  18.993398   root   <NA>   <NA>    <NA> #> 171 47.875000 47.000000  18.993398  18.993398   root   <NA>   <NA>    <NA> #> 172 47.875000 48.750000  18.993398  18.993398   root   <NA>   <NA>    <NA> #> 173 45.500000 45.500000  13.044922  27.779904   root   <NA>   <NA>    <NA> #> 174 47.875000 47.875000  18.993398  27.779904   root   <NA>   <NA>    <NA> #> 175 46.687500 45.500000  27.779904  27.779904   root   <NA>   <NA>    <NA> #> 176 46.687500 47.875000  27.779904  27.779904   root   <NA>   <NA>    <NA> #> 177 42.750000 42.750000  10.771175  33.117815   root   <NA>   <NA>    <NA> #> 178 46.687500 46.687500  27.779904  33.117815   root   <NA>   <NA>    <NA> #> 179 44.718750 42.750000  33.117815  33.117815   root   <NA>   <NA>    <NA> #> 180 44.718750 46.687500  33.117815  33.117815   root   <NA>   <NA>    <NA> #> 181 41.000000 41.000000   0.000000  41.094765   root   <NA>   <NA>    <NA> #> 182 44.718750 44.718750  33.117815  41.094765   root   <NA>   <NA>    <NA> #> 183 42.859375 41.000000  41.094765  41.094765   root   <NA>   <NA>    <NA> #> 184 42.859375 44.718750  41.094765  41.094765   root   <NA>   <NA>    <NA> #> 185 34.437500 34.437500  20.598507  54.746831   root   <NA>   <NA>    <NA> #> 186 42.859375 42.859375  41.094765  54.746831   root   <NA>   <NA>    <NA> #> 187 38.648438 34.437500  54.746831  54.746831   root   <NA>   <NA>    <NA> #> 188 38.648438 42.859375  54.746831  54.746831   root   <NA>   <NA>    <NA> #> 189 23.796875 23.796875  44.837933  89.232093   root   <NA>   <NA>    <NA> #> 190 38.648438 38.648438  54.746831  89.232093   root   <NA>   <NA>    <NA> #> 191 31.222656 23.796875  89.232093  89.232093   root   <NA>   <NA>    <NA> #> 192 31.222656 38.648438  89.232093  89.232093   root   <NA>   <NA>    <NA> #> 193  4.765625  4.765625  77.605024 152.313999   root   <NA>   <NA>    <NA> #> 194 31.222656 31.222656  89.232093 152.313999   root   <NA>   <NA>    <NA> #> 195 17.994141  4.765625 152.313999 152.313999   root   <NA>   <NA>    <NA> #> 196 17.994141 31.222656 152.313999 152.313999   root   <NA>   <NA>    <NA> #>"},{"path":"https://yunuuuu.github.io/ggalign/reference/free.html","id":null,"dir":"Reference","previous_headings":"","what":"Free from alignment — free_align","title":"Free from alignment — free_align","text":"align_plots try align plot panels, every elements plot, following functions romove restrictions: free_align: want compose plots without alignment panel axes (panel aligned). can wrap plot free_align. free_border: want compose plots without alignment panel borders (still align panels ), can wrap plot free_border. free_lab: want compose plots without alignment axis title, can wrap plot free_lab. free_space: Removing ggplot element sizes aligning. free_vp: Customize viewport aligning.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/free.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Free from alignment — free_align","text":"","code":"free_align(plot, axes = \"tlbr\")  free_border(plot, borders = \"tlbr\")  free_lab(plot, labs = \"tlbr\")  free_space(plot, spaces = \"tlbr\")  free_vp(plot, x = 0.5, y = 0.5, width = NA, height = NA, ...)"},{"path":"https://yunuuuu.github.io/ggalign/reference/free.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Free from alignment — free_align","text":"plot ggplot alignpatches object. axes axes aligned? string containing one \"t\", \"l\", \"b\", \"r\". borders border aligned (free_border)? string containing one \"t\", \"l\", \"b\", \"r\". labs axis labs free? string containing one \"t\", \"l\", \"b\", \"r\". spaces border spaces removed? string containing one \"t\", \"l\", \"b\", \"r\". x numeric vector unit object specifying x-location. y numeric vector unit object specifying y-location. width numeric vector unit object specifying width. height numeric vector unit object specifying height. ... Arguments passed grid::viewport default.units string indicating default units use     x, y, width, height     given numeric vectors. just string numeric     vector specifying justification viewport     relative (x, y) location.  two values, first     value specifies horizontal justification second value specifies     vertical justification.  Possible string values : \"left\",     \"right\", \"centre\", \"center\", \"bottom\",     \"top\".  numeric values, 0 means left alignment     1 means right alignment. gp object class \"gpar\", typically output     call function gpar.  basically     list graphical parameter settings. clip One \"\", \"inherit\",     \"\", indicating whether     clip extent viewport, inherit clipping region     parent viewport, turn clipping altogether.     back-compatibility, logical value TRUE corresponds     \"\" FALSE corresponds \"inherit\". May also grob (gTree) describes clipping path     result call .path. mask One \"none\" (FALSE)     \"inherit\" (TRUE)     grob (gTree) result call     .mask.  specifies viewport     mask, inherit mask parent,     mask, described grob. xscale numeric vector length two indicating minimum     maximum x-scale.  limits may identical. yscale numeric vector length two indicating minimum     maximum y-scale. limits may identical. angle numeric value indicating angle rotation     viewport.  Positive values indicate amount rotation,     degrees, anticlockwise positive x-axis. layout Grid layout object splits viewport     subregions. layout.pos.row numeric vector giving     rows occupied viewport     parent's layout. layout.pos.col numeric vector giving     columns occupied viewport     parent's layout. name character value uniquely identify viewport     pushed onto viewport tree.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/free.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Free from alignment — free_align","text":"free_align: modified version plot free_align class. free_border: modified version plot free_border class. free_lab: modified version plot free_lab class. free_space: modified version plot free_space class. free_vp: modified version plot free_vp class.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/free.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Free from alignment — free_align","text":"","code":"# directly copied from `patchwork` # Sometimes you have a plot that defies good composition alginment, e.g. due # to long axis labels p1 <- ggplot(mtcars) +     geom_bar(aes(y = factor(gear), fill = factor(gear))) +     scale_y_discrete(         \"\",         labels = c(             \"3 gears are often enough\",             \"But, you know, 4 is a nice number\",             \"I would def go with 5 gears in a modern car\"         )     )  # When combined with other plots it ends up looking bad p2 <- ggplot(mtcars) +     geom_point(aes(mpg, disp))  align_plots(p1, p2, ncol = 1L)   # We can fix this be using `free_align` align_plots(free_align(p1), p2, ncol = 1L)   # If we still want the panels to be aligned to the right, we can choose to # free only the left side align_plots(free_align(p1, axes = \"l\"), p2, ncol = 1L)   # We could use `free_lab` to fix the layout in a different way align_plots(p1, free_lab(p2), ncol = 1L)   # Another issue is that long labels can occupy much spaces align_plots(NULL, p1, p2, p2)   # This can be fixed with `free_space` align_plots(NULL, free_space(p1, \"l\"), p2, p2)"},{"path":"https://yunuuuu.github.io/ggalign/reference/geom_draw.html","id":null,"dir":"Reference","previous_headings":"","what":"Layer with Grid or Function — geom_draw","title":"Layer with Grid or Function — geom_draw","text":"Draw ggplot2 layer grod function.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/geom_draw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layer with Grid or Function — geom_draw","text":"","code":"geom_draw(   draw = grid::nullGrob(),   ...,   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   na.rm = FALSE,   inherit.aes = TRUE )"},{"path":"https://yunuuuu.github.io/ggalign/reference/geom_draw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layer with Grid or Function — geom_draw","text":"draw Either grob object function (can purrr-style) accepts two arguments (data coords) returns grob. draw function, used draw_group function Geom ggproto object. ... <dyn-dots> Additional arguments passed draw. mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/geom_draw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Layer with Grid or Function — geom_draw","text":"ggplot2 layer.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/geom_draw.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Layer with Grid or Function — geom_draw","text":"want combine functionality multiple geoms can usually achieved preparing data geoms inside draw_*() call send different geoms, collecting output grid::gList (list grobs) call draw_group() grid::gTree (grob containing multiple children grobs) call draw_panel().","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/reference/geom_draw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Layer with Grid or Function — geom_draw","text":"","code":"ggdraw_text <- grid::textGrob(     \"ggdraw\",     x = c(0, 0, 0.5, 1, 1),     y = c(0, 1, 0.5, 0, 1),     hjust = c(0, 0, 0.5, 1, 1),     vjust = c(0, 1, 0.5, 0, 1) ) ggplot2::ggplot(data.frame(x = 1, y = 2)) +     geom_draw(ggdraw_text)"},{"path":"https://yunuuuu.github.io/ggalign/reference/ggalign-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ggalign: A 'ggplot2' Extension for Consistent Axis Alignment — ggalign-package","title":"ggalign: A 'ggplot2' Extension for Consistent Axis Alignment — ggalign-package","text":"'ggplot2' extension offers various tools organizing arranging plots. designed consistently align specific axis across multiple 'ggplot' objects, making especially useful plots requiring data order manipulation. typical use case includes organizing combinations like dendrogram heatmap.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/reference/ggalign-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ggalign: A 'ggplot2' Extension for Consistent Axis Alignment — ggalign-package","text":"Maintainer: Yun Peng yunyunp96@163.com (ORCID) [copyright holder]","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/ggalignGrob.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a plot grob. — ggalignGrob","title":"Generate a plot grob. — ggalignGrob","text":"Generate plot grob.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/ggalignGrob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a plot grob. — ggalignGrob","text":"","code":"ggalignGrob(x)"},{"path":"https://yunuuuu.github.io/ggalign/reference/ggalignGrob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a plot grob. — ggalignGrob","text":"x object converted grob.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/ggalignGrob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a plot grob. — ggalignGrob","text":"grob() object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/ggalignGrob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a plot grob. — ggalignGrob","text":"","code":"ggalignGrob(ggplot()) #> TableGrob (20 x 17) \"layout\": 26 grobs #>     z         cells               name                                   grob #> 1   0 ( 1-20, 1-17)         background       rect[plot.background..rect.2262] #> 2   5 ( 9- 9, 7- 7)             spacer                         zeroGrob[NULL] #> 3   7 (11-11, 7- 7)             axis-l                         zeroGrob[NULL] #> 4   3 (13-13, 7- 7)             spacer                         zeroGrob[NULL] #> 5   6 ( 9- 9, 9- 9)             axis-t                         zeroGrob[NULL] #> 6   1 (11-11, 9- 9)              panel              gTree[panel-1.gTree.2257] #> 7   9 (13-13, 9- 9)             axis-b                         zeroGrob[NULL] #> 8   4 ( 9- 9,11-11)             spacer                         zeroGrob[NULL] #> 9   8 (11-11,11-11)             axis-r                         zeroGrob[NULL] #> 10  2 (13-13,11-11)             spacer                         zeroGrob[NULL] #> 11 10 ( 8- 8, 9- 9)             xlab-t                         zeroGrob[NULL] #> 12 11 (14-14, 9- 9)             xlab-b                         zeroGrob[NULL] #> 13 12 (11-11, 6- 6)             ylab-l                         zeroGrob[NULL] #> 14 13 (11-11,12-12)             ylab-r                         zeroGrob[NULL] #> 15 14 (11-11,15-15)    guide-box-right                         zeroGrob[NULL] #> 16 15 (11-11, 3- 3)     guide-box-left                         zeroGrob[NULL] #> 17 16 (17-17, 9- 9)   guide-box-bottom                         zeroGrob[NULL] #> 18 17 ( 5- 5, 9- 9)      guide-box-top                         zeroGrob[NULL] #> 19 18 (11-11, 9- 9)   guide-box-inside                         zeroGrob[NULL] #> 20 19 ( 4- 4, 9- 9)           subtitle zeroGrob[plot.subtitle..zeroGrob.2259] #> 21 20 ( 3- 3, 9- 9)              title    zeroGrob[plot.title..zeroGrob.2258] #> 22 21 (18-18, 9- 9)            caption  zeroGrob[plot.caption..zeroGrob.2260] #> 23 22 ( 7- 7, 9- 9)    patch-title-top                         zeroGrob[NULL] #> 24 23 (11-11, 5- 5)   patch-title-left                         zeroGrob[NULL] #> 25 24 (15-15, 9- 9) patch-title-bottom                         zeroGrob[NULL] #> 26 25 (11-11,13-13)  patch-title-right                         zeroGrob[NULL]"},{"path":"https://yunuuuu.github.io/ggalign/reference/ggalign_stat.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the statistics from the layout — ggalign_stat","title":"Get the statistics from the layout — ggalign_stat","text":"Get statistics layout","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/ggalign_stat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the statistics from the layout — ggalign_stat","text":"","code":"ggalign_stat(x, ...)  # S3 method for class 'HeatmapLayout' ggalign_stat(x, position, ...)  # S3 method for class 'StackLayout' ggalign_stat(x, what, ...)"},{"path":"https://yunuuuu.github.io/ggalign/reference/ggalign_stat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the statistics from the layout — ggalign_stat","text":"x heatmap_layout() stack_layout() object. ... Arguments passed methods. position string \"top\", \"left\", \"bottom\", \"right\". single number string plot elements stack layout.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/ggalign_stat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the statistics from the layout — ggalign_stat","text":"statistics","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/ggplot2-ggproto.html","id":null,"dir":"Reference","previous_headings":"","what":"Base ggproto classes for ggplot2 — GeomDraw","title":"Base ggproto classes for ggplot2 — GeomDraw","text":"Base ggproto classes ggplot2","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/ggplot2-ggproto.html","id":"geoms","dir":"Reference","previous_headings":"","what":"Geoms","title":"Base ggproto classes for ggplot2 — GeomDraw","text":"geom_*() functions (like geom_point()) return layer contains Geom* object (like GeomPoint). Geom* object responsible rendering data plot. Geom* objects ggproto() object, descended top-level Geom, implements various methods fields. Compared Stat Position, Geom little different execution setup compute functions split . setup_data runs position adjustments, draw_layer() run render time, much later. create new type Geom object, typically want override one following: Either draw_panel(self, data, panel_params, coord) draw_group(self, data, panel_params, coord). draw_panel called per panel, draw_group called per group. Use draw_panel row data represents single element. Use draw_group group represents element (e.g. smooth, violin). data data frame scaled aesthetics. panel_params set per-panel parameters coord. Generally, consider panel_params opaque data structure pass along whenever call coord method. must always call coord$transform(data, panel_params) get (position) scaled data plotting. work non-linear coordinate systems, typically need convert primitive geom (e.g. point, path polygon), pass corresponding draw method munching. Must return grob. Use zeroGrob() nothing draw. draw_key: Renders single legend key. required_aes: character vector aesthetics needed render geom. default_aes: list (generated aes() default values aesthetics. setup_data: Converts width height xmin xmax, ymin ymax values. can potentially set values well. See also new geoms section online ggplot2 book.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/ggplot2-ggproto.html","id":"coordinate-systems","dir":"Reference","previous_headings":"","what":"Coordinate systems","title":"Base ggproto classes for ggplot2 — GeomDraw","text":"coord_*() functions (like coord_trans()) return Coord* object (like CoordTrans). Coord* objects ggproto() object, descended top-level Coord.  create new type Coord object, typically want implement one following: aspect: Returns desired aspect ratio plot. labels: Returns list containing labels x y. render_fg: Renders foreground elements. render_bg: Renders background elements. render_axis_h: Renders horizontal axes. render_axis_v: Renders vertical axes. backtransform_range(panel_params): Extracts panel range provided panel_params (created setup_panel_params(), see ) back-transforms data coordinates. back-transformation can needed coords coord_trans() range transformed coordinates differs range untransformed coordinates. Returns list two ranges, x y, correspond variables mapped x y aesthetics, even coords coord_flip() x aesthetic shown along y direction vice versa. range(panel_params): Extracts panel range provided panel_params (created setup_panel_params(), see ) returns . Unlike backtransform_range(), function perform back-transformation instead returns final transformed coordinates. Returns list two ranges, x y, correspond variables mapped x y aesthetics, even coords coord_flip() x aesthetic shown along y direction vice versa. transform: Transforms x y coordinates. distance: Calculates distance. is_linear: Returns TRUE coordinate system linear; FALSE otherwise. is_free: Returns TRUE coordinate system supports free positional scales; FALSE otherwise. setup_panel_params(scale_x, scale_y, params): Determines appropriate x y ranges panel, also calculates anything else needed render panel axes, tick positions labels major minor ticks. Returns information named list. setup_data(data, params): Allows coordinate system manipulate plot data. return list data frames. setup_layout(layout, params): Allows coordinate system manipulate layout data frame assigns data panels scales. See also new coords section online ggplot2 book.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/reference/hclust2.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Tree Structures with Hierarchical Clustering — hclust2","title":"Generate Tree Structures with Hierarchical Clustering — hclust2","text":"Generate Tree Structures Hierarchical Clustering","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/hclust2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Tree Structures with Hierarchical Clustering — hclust2","text":"","code":"hclust2(   matrix,   distance = \"euclidean\",   method = \"complete\",   use_missing = \"pairwise.complete.obs\" )"},{"path":"https://yunuuuu.github.io/ggalign/reference/hclust2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Tree Structures with Hierarchical Clustering — hclust2","text":"matrix numeric matrix, data frame. distance string distance measure used. must one \"euclidean\", \"maximum\", \"manhattan\", \"canberra\", \"binary\" \"minkowski\".  Correlation coefficient can also used, including \"pearson\", \"spearman\" \"kendall\". way, 1 - cor used distance. addition, can also provide dist object directly function return dist object. Use NULL, want calculate distance. method string agglomeration method used. (unambiguous abbreviation ) one \"ward.D\", \"ward.D2\", \"single\", \"complete\", \"average\" (= UPGMA), \"mcquitty\" (= WPGMA), \"median\" (= WPGMC) \"centroid\" (= UPGMC). can also provide function accepts distance returns hclust object. Alternative, can supply object can coerced hclust. use_missing optional character string giving method computing covariances presence missing values. must (abbreviation ) one strings \"everything\", \".obs\", \"complete.obs\", \"na..complete\", \"pairwise.complete.obs\". used distance correlation coefficient string.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/hclust2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Tree Structures with Hierarchical Clustering — hclust2","text":"hclust object.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/reference/hclust2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Tree Structures with Hierarchical Clustering — hclust2","text":"","code":"hclust2(dist(USArrests), method = \"ward.D\") #>  #> Call: #> stats::hclust(d = d, method = method) #>  #> Cluster method   : ward.D  #> Distance         : euclidean  #> Number of objects: 50  #>"},{"path":"https://yunuuuu.github.io/ggalign/reference/heatmap_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrange plots in a Heatmap — heatmap_layout","title":"Arrange plots in a Heatmap — heatmap_layout","text":"ggheatmap alias heatmap_layout.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/heatmap_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrange plots in a Heatmap — heatmap_layout","text":"","code":"heatmap_layout(   data,   mapping = aes(),   ...,   width = NA,   height = NA,   filling = TRUE,   set_context = TRUE,   order = NULL,   name = NULL )  ggheatmap(   data,   mapping = aes(),   ...,   width = NA,   height = NA,   filling = TRUE,   set_context = TRUE,   order = NULL,   name = NULL )"},{"path":"https://yunuuuu.github.io/ggalign/reference/heatmap_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrange plots in a Heatmap — heatmap_layout","text":"data numeric character vector, data frame, data can converted matrix. Simple vector converted one column matrix. mapping Default list aesthetic mappings use plot. NULL, using aes(.data$.x, .data$.y). ... Additional arguments passed geom_tile. used filling = TRUE. width, height Heatmap body width/height, can unit object. filling boolean value indicates whether fill heatmap. want customize filling style, can set FALSE. set_context single boolean value indicates whether set active context current plot. TRUE, subsequent ggplot elements added plot. order single integer plot area order. name string plot name. Used switch active context hmanno() stack_active().","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/heatmap_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Arrange plots in a Heatmap — heatmap_layout","text":"HeatmapLayout object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/heatmap_layout.html","id":"ggplot-specification","dir":"Reference","previous_headings":"","what":"ggplot2 specification","title":"Arrange plots in a Heatmap — heatmap_layout","text":"data input ggheatmap converted long formated data frame drawing. default mapping use aes(.data$.x, .data$.y), can use mapping argument control . data underlying ggplot object contains following columns: .xpanel .ypanel: column row panel .x .y: x y coordinates .row_names .column_names: factor row column names original matrix (applicable names exist). .row_index .column_index: row column index original matrix. value: actual matrix value.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/heatmap_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arrange plots in a Heatmap — heatmap_layout","text":"","code":"ggheatmap(1:10)  ggheatmap(letters)  ggheatmap(matrix(rnorm(81), nrow = 9L))"},{"path":"https://yunuuuu.github.io/ggalign/reference/hmanno.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine the active context of heatmap layout — hmanno","title":"Determine the active context of heatmap layout — hmanno","text":"Determine active context heatmap layout","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/hmanno.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine the active context of heatmap layout — hmanno","text":"","code":"hmanno(   position = NULL,   size = NULL,   guides = NA,   free_labs = NA,   free_spaces = NA,   plot_data = NA,   theme = NA,   what = waiver(),   width = NULL,   height = NULL )"},{"path":"https://yunuuuu.github.io/ggalign/reference/hmanno.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine the active context of heatmap layout — hmanno","text":"position heatmap annotation get activated? Possible values follows: string \"top\", \"left\", \"bottom\", \"right\". NULL: means set active context heatmap . size unit object set total size heatmap annotation. used position string \"top\", \"left\", \"bottom\", \"right\". position \"top\" \"bottom\", size set total height annotation. position \"left\" \"right\", size set total width annotation. guides boolean value string containing one \"t\", \"l\", \"b\", \"r\" indicates guide collected. NULL, guides collected. Default: \"tlbr\". free_labs boolean value string containing one \"t\", \"l\", \"b\", \"r\" indicates axis title free alignment. NULL, axis title aligned. Default: \"tlbr\". free_spaces boolean value string containing one \"t\", \"l\", \"b\", \"r\" indicates border spaces removed. NULL (default), space removed. plot_data function used transform plot data rendering. default, 'll inherit parent layout. parent layout, default NULL, means want modify anything. Used modify data layout created, data handled ggplot2 rendering. Use hook needs change default data geoms. theme theme() object, added plots layout. Use NULL want theme components added. Use waiver(), want inherit parent layout. get activated anntoation stack? used position NULL. See stack_active details. width, height Heatmap body width/height, can unit object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/hmanno.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine the active context of heatmap layout — hmanno","text":"heatmap_active object can added heatmap_layout.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/hmanno.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine the active context of heatmap layout — hmanno","text":"","code":"ggheatmap(matrix(rnorm(81), nrow = 9)) +     hmanno(\"top\") +     align_dendro()"},{"path":"https://yunuuuu.github.io/ggalign/reference/inset.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a ggplot inset — inset","title":"Create a ggplot inset — inset","text":"Create ggplot inset","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/inset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a ggplot inset — inset","text":"","code":"inset(plot, ..., align = \"panel\", on_top = TRUE, clip = TRUE, vp = NULL)"},{"path":"https://yunuuuu.github.io/ggalign/reference/inset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a ggplot inset — inset","text":"plot graphic can converted grob using patch(). ... Additional arguments passed patch() method. align string specifying area place plot: \"full\" full area, \"plot\" full plotting area (including axis label), \"panel\" actual area data drawn. on_top single boolean value indicates whether graphic plot put frontmost. Note: graphic plot always put background. clip single boolean value indicating whether grob clipped expand outside designated area. vp viewport object, can use define plot area.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/inset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a ggplot inset — inset","text":"patch_inset object, can added ggplot.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/reference/inset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a ggplot inset — inset","text":"","code":"library(grid) p1 <- ggplot(mtcars) +     geom_point(aes(mpg, disp)) p2 <- ggplot(mtcars) +     geom_boxplot(aes(gear, disp, group = gear)) p1 + inset(p2, vp = viewport(0.6, 0.6,     just = c(0, 0), width = 0.4, height = 0.4 ))"},{"path":"https://yunuuuu.github.io/ggalign/reference/is.ggheatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Reports whether x is a heatmap_layout() object — is.ggheatmap","title":"Reports whether x is a heatmap_layout() object — is.ggheatmap","text":"Reports whether x heatmap_layout() object","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/is.ggheatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reports whether x is a heatmap_layout() object — is.ggheatmap","text":"","code":"is.ggheatmap(x)"},{"path":"https://yunuuuu.github.io/ggalign/reference/is.ggheatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reports whether x is a heatmap_layout() object — is.ggheatmap","text":"x object test","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/is.ggheatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reports whether x is a heatmap_layout() object — is.ggheatmap","text":"boolean value","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/is.ggheatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reports whether x is a heatmap_layout() object — is.ggheatmap","text":"","code":"is.ggheatmap(ggheatmap(1:10)) #> [1] TRUE"},{"path":"https://yunuuuu.github.io/ggalign/reference/is.ggstack.html","id":null,"dir":"Reference","previous_headings":"","what":"Reports whether x is a StackLayout object — is.ggstack","title":"Reports whether x is a StackLayout object — is.ggstack","text":"Reports whether x StackLayout object","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/is.ggstack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reports whether x is a StackLayout object — is.ggstack","text":"","code":"is.ggstack(x)"},{"path":"https://yunuuuu.github.io/ggalign/reference/is.ggstack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reports whether x is a StackLayout object — is.ggstack","text":"x object test","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/is.ggstack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reports whether x is a StackLayout object — is.ggstack","text":"boolean value","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/is.ggstack.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reports whether x is a StackLayout object — is.ggstack","text":"","code":"is.ggstack(ggstack(1:10)) #> [1] TRUE"},{"path":"https://yunuuuu.github.io/ggalign/reference/layout-add.html","id":null,"dir":"Reference","previous_headings":"","what":"Add components to Layout — layout-add","title":"Add components to Layout — layout-add","text":"Add components Layout","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/layout-add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add components to Layout — layout-add","text":"","code":"# S4 method for class 'Layout,ANY' e1 + e2"},{"path":"https://yunuuuu.github.io/ggalign/reference/layout-add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add components to Layout — layout-add","text":"e1 heatmap_layout() stack_layout() object. e2 object added plot, including gg elements align object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/layout-add.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add components to Layout — layout-add","text":"modified Layout object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/layout-add.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add components to Layout — layout-add","text":"","code":"ggheatmap(matrix(rnorm(81), nrow = 9)) +     hmanno(\"t\") +     ggalign() +     geom_point(aes(y = value))"},{"path":"https://yunuuuu.github.io/ggalign/reference/layout-operator.html","id":null,"dir":"Reference","previous_headings":"","what":"Layout operator — layout-operator","title":"Layout operator — layout-operator","text":"Layout operator","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/layout-operator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layout operator — layout-operator","text":"","code":"# S4 method for class 'Layout,ANY' e1 & e2  # S4 method for class 'Layout,ANY' e1 - e2"},{"path":"https://yunuuuu.github.io/ggalign/reference/layout-operator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layout operator — layout-operator","text":"e1 heatmap_layout() stack_layout() object. e2 object added plot.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/layout-operator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Layout operator — layout-operator","text":"modified Layout object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/layout-operator.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Layout operator — layout-operator","text":"order reduce code repetition ggalign provides two operators adding ggplot elements (geoms, themes, facets, etc.) multiple/plots heatmap_layout() stack_layout() object. Like patchwork, & add element plots plot. element theme, also modify layout theme. Unlike patchwork, - operator adds ggplot2 elements (geoms, themes, facets, etc.) rather ggplot plot. key difference & - behave heatmap_layout(). - operator applies element current active context heatmap_layout(). Using - might seem unintuitive think operator \"subtract\", underlying reason - operator precedence group +.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/layout-operator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Layout operator — layout-operator","text":"","code":"mat <- matrix(rnorm(81), nrow = 9) ggheatmap(mat) +     hmanno(\"top\") +     align_dendro() &     theme(panel.border = element_rect(         colour = \"red\", fill = NA, linewidth = unit(2, \"mm\")     ))  ggheatmap(mat) +     hmanno(\"top\") +     align_dendro() -     theme(panel.border = element_rect(         colour = \"red\", fill = NA, linewidth = unit(2, \"mm\")     ))"},{"path":"https://yunuuuu.github.io/ggalign/reference/layout_annotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate the whole layout — layout_annotation","title":"Annotate the whole layout — layout_annotation","text":"Annotate whole layout","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/layout_annotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate the whole layout — layout_annotation","text":"","code":"layout_annotation(title = waiver(), subtitle = waiver(), caption = waiver())"},{"path":"https://yunuuuu.github.io/ggalign/reference/layout_annotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate the whole layout — layout_annotation","text":"title text title. subtitle text subtitle plot displayed title. caption text caption displayed bottom-right plot default.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/layout_annotation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate the whole layout — layout_annotation","text":"layout_annotation object added heatmap_layout() stack_layout() object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/layout_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify components of the layout theme — layout_theme","title":"Modify components of the layout theme — layout_theme","text":"Used render guides, title, subtitle, caption, margins background.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/layout_theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify components of the layout theme — layout_theme","text":"","code":"layout_theme(...)"},{"path":"https://yunuuuu.github.io/ggalign/reference/layout_theme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify components of the layout theme — layout_theme","text":"... Additional arguments passed theme().","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/layout_theme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modify components of the layout theme — layout_theme","text":"layout_theme object added heatmap_layout() stack_layout() object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/layout_theme.html","id":"theme-inheritance","dir":"Reference","previous_headings":"","what":"Theme inheritance","title":"Modify components of the layout theme — layout_theme","text":"Theme elements inherit properties theme elements hierarchically. example, axis.title.x.bottom inherits axis.title.x inherits axis.title, turn inherits text. text elements inherit directly indirectly text; lines inherit line, rectangular objects inherit rect. means can modify appearance multiple elements setting single high-level component. Learn setting aesthetics vignette(\"ggplot2-specs\").","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/layout_theme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modify components of the layout theme — layout_theme","text":"","code":"layout_theme(plot.background = element_rect(fill = \"green\")) #> List of 1 #>  $ plot.background:List of 5 #>   ..$ fill         : chr \"green\" #>   ..$ colour       : NULL #>   ..$ linewidth    : NULL #>   ..$ linetype     : NULL #>   ..$ inherit.blank: logi FALSE #>   ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\" #>  - attr(*, \"class\")= chr [1:3] \"layout_theme\" \"theme\" \"gg\" #>  - attr(*, \"complete\")= logi FALSE #>  - attr(*, \"validate\")= logi TRUE"},{"path":"https://yunuuuu.github.io/ggalign/reference/order2.html","id":null,"dir":"Reference","previous_headings":"","what":"Ordering Permutation — order2","title":"Ordering Permutation — order2","text":"order2 returns permutation rearranges first argument ascending order. default, order2 call order() directly.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/order2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ordering Permutation — order2","text":"","code":"order2(x)  # Default S3 method order2(x)  # S3 method for class 'hclust' order2(x)  # S3 method for class 'dendrogram' order2(x)  # S3 method for class 'ser_permutation_vector' order2(x)  # S3 method for class 'ser_permutation' order2(x)"},{"path":"https://yunuuuu.github.io/ggalign/reference/order2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ordering Permutation — order2","text":"x objects can extracting ordering.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/order2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ordering Permutation — order2","text":"integer vector unless inputs 2^31 elements, double vector.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/order2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ordering Permutation — order2","text":"","code":"order2(sample(10L)) #>  [1]  6  4  7  5  8  3  1  2  9 10 order2(letters) #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #> [26] 26"},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.Heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Object into a Grob — patch.Heatmap","title":"Convert Object into a Grob — patch.Heatmap","text":"patch() function used wrap() inset() convert objects grob.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.Heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Object into a Grob — patch.Heatmap","text":"","code":"# S3 method for class 'Heatmap' patch(x, ..., device = NULL)  # S3 method for class 'HeatmapList' patch(x, ..., device = NULL)  # S3 method for class 'HeatmapAnnotation' patch(x, ..., device = NULL)"},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.Heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Object into a Grob — patch.Heatmap","text":"x object converted grob. ... Additional arguments passed draw(). device function opens graphics device temporary     rendering. default -screen, -memory device     based pdf device, default device may     satisfactory using custom fonts.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.Heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Object into a Grob — patch.Heatmap","text":"grob object.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.alignpatches.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Object into a Grob — patch.alignpatches","title":"Convert Object into a Grob — patch.alignpatches","text":"patch() function used wrap() inset() convert objects grob.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.alignpatches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Object into a Grob — patch.alignpatches","text":"","code":"# S3 method for class 'alignpatches' patch(x, ...)"},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.alignpatches.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Object into a Grob — patch.alignpatches","text":"x object converted grob. ... used currently.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.alignpatches.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Object into a Grob — patch.alignpatches","text":"grob object.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Object into a Grob — patch.formula","title":"Convert Object into a Grob — patch.formula","text":"patch() function used wrap() inset() convert objects grob.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Object into a Grob — patch.formula","text":"","code":"# S3 method for class 'formula' patch(x, ..., device = NULL, name = NULL)  # S3 method for class '`function`' patch(x, ..., device = NULL, name = NULL)"},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Object into a Grob — patch.formula","text":"x object converted grob. ... Graphical Parameters passed par(). device function opens graphics device grid.echo()     work .  default -screen, -memory device     based pdf device.  default device may     satisfactory using custom fonts. name character identifier.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Object into a Grob — patch.formula","text":"grob object.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.ggplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Object into a Grob — patch.ggplot","title":"Convert Object into a Grob — patch.ggplot","text":"patch() function used wrap() inset() convert objects grob.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.ggplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Object into a Grob — patch.ggplot","text":"","code":"# S3 method for class 'ggplot' patch(x, ...)"},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.ggplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Object into a Grob — patch.ggplot","text":"x object converted grob. ... used currently.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.ggplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Object into a Grob — patch.ggplot","text":"grob object.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.grob.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Object into a Grob — patch.grob","title":"Convert Object into a Grob — patch.grob","text":"patch() function used wrap() inset() convert objects grob.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.grob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Object into a Grob — patch.grob","text":"","code":"# S3 method for class 'grob' patch(x, ...)  # S3 method for class 'gList' patch(x, ...)"},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.grob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Object into a Grob — patch.grob","text":"x object converted grob. ... used currently.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.grob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Object into a Grob — patch.grob","text":"grob object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Object into a Grob — patch","title":"Convert Object into a Grob — patch","text":"patch() function used wrap() inset() convert objects grob.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Object into a Grob — patch","text":"","code":"patch(x, ...)"},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Object into a Grob — patch","text":"x object converted grob. ... Additional arguments passed specific methods.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Object into a Grob — patch","text":"grob object.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.patch.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Object into a Grob — patch.patch","title":"Convert Object into a Grob — patch.patch","text":"patch() function used wrap() inset() convert objects grob.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.patch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Object into a Grob — patch.patch","text":"","code":"# S3 method for class 'patch' patch(x, ...)"},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.patch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Object into a Grob — patch.patch","text":"x object converted grob. ... used currently.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.patch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Object into a Grob — patch.patch","text":"grob object.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.patch_ggplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Object into a Grob — patch.patch_ggplot","title":"Convert Object into a Grob — patch.patch_ggplot","text":"patch() function used wrap() inset() convert objects grob.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.patch_ggplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Object into a Grob — patch.patch_ggplot","text":"","code":"# S3 method for class 'patch_ggplot' patch(x, ...)"},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.patch_ggplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Object into a Grob — patch.patch_ggplot","text":"x object converted grob. ... used currently.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.patch_ggplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Object into a Grob — patch.patch_ggplot","text":"grob object.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.patchwork.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Object into a Grob — patch.patchwork","title":"Convert Object into a Grob — patch.patchwork","text":"patch() function used wrap() inset() convert objects grob.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.patchwork.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Object into a Grob — patch.patchwork","text":"","code":"# S3 method for class 'patchwork' patch(x, ...)"},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.patchwork.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Object into a Grob — patch.patchwork","text":"x object converted grob. ... used currently.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.patchwork.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Object into a Grob — patch.patchwork","text":"grob object.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.pheatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Object into a Grob — patch.pheatmap","title":"Convert Object into a Grob — patch.pheatmap","text":"patch() function used wrap() inset() convert objects grob.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.pheatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Object into a Grob — patch.pheatmap","text":"","code":"# S3 method for class 'pheatmap' patch(x, ...)"},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.pheatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Object into a Grob — patch.pheatmap","text":"x object converted grob. ... used currently.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.pheatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Object into a Grob — patch.pheatmap","text":"grob object.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.recordedplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Object into a Grob — patch.recordedplot","title":"Convert Object into a Grob — patch.recordedplot","text":"patch() function used wrap() inset() convert objects grob.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.recordedplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Object into a Grob — patch.recordedplot","text":"","code":"# S3 method for class 'recordedplot' patch(x, ..., device = NULL)"},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.recordedplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Object into a Grob — patch.recordedplot","text":"x object converted grob. ... used currently. device function opens graphics device grid.echo()     work .  default -screen, -memory device     based pdf device.  default device may     satisfactory using custom fonts.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.recordedplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Object into a Grob — patch.recordedplot","text":"grob object.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.trellis.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Object into a Grob — patch.trellis","title":"Convert Object into a Grob — patch.trellis","text":"patch() function used wrap() inset() convert objects grob.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.trellis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Object into a Grob — patch.trellis","text":"","code":"# S3 method for class 'trellis' patch(x, ..., device = NULL)"},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.trellis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Object into a Grob — patch.trellis","text":"x object converted grob. ... Arguments passed grid::grid.grabExpr warn integer specifying amount warnings     emit.  0 means warnings, 1 means warn     certain grab faithfully represent     original scene. 2 means warn possibility     grab faithfully represent     original scene. wrap logical indicating output     captured. TRUE, non-grob element     display list captured wrapping grob. wrap.grobs logical indicating whether, wrapping     elements (wrap=TRUE), wrap grobs (just     wrap viewports). width,height Size device used temporary     rendering. device function opens graphics device temporary     rendering. default -screen, -memory device     based pdf device, default device may     satisfactory using custom fonts.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/patch.trellis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Object into a Grob — patch.trellis","text":"grob object.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/reference/patch_titles.html","id":null,"dir":"Reference","previous_headings":"","what":"Add patch titles to plot borders — patch_titles","title":"Add patch titles to plot borders — patch_titles","text":"function extends ggplot2's title functionality, allowing add titles border plot: top, left, bottom, right.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/patch_titles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add patch titles to plot borders — patch_titles","text":"","code":"patch_titles(   top = waiver(),   left = waiver(),   bottom = waiver(),   right = waiver() )"},{"path":"https://yunuuuu.github.io/ggalign/reference/patch_titles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add patch titles to plot borders — patch_titles","text":"top, left, bottom, right string specifying title added top, left, bottom, right border plot.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/patch_titles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add patch titles to plot borders — patch_titles","text":"labels object added ggplot.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/patch_titles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add patch titles to plot borders — patch_titles","text":"can also use labs() specify titles (use arguments \"top\", \"left\", \"bottom\", \"right\") top, left, bottom, right borders plot. appearance alignment patch titles can customized using theme(): plot.patch_title/plot.patch_title.*: Controls text appearance patch titles. default, plot.patch_title inherit plot.title, settings border inherit plot.patch_title, exception angle property, inherited. plot.patch_title.position/plot.patch_title.position.*: Determines alignment patch titles. default, plot.patch_title.position inherit plot.title.position, settings border inherit plot.patch_title. value \"panel\" aligns patch titles plot panels. Setting \"plot\" aligns patch title entire plot (excluding margins plot tags).","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/patch_titles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add patch titles to plot borders — patch_titles","text":"","code":"ggplot(mtcars) +     geom_point(aes(mpg, disp)) +     patch_titles(         top = \"I'm top patch title\",         left = \"I'm left patch title\",         bottom = \"I'm bottom patch title\",         right = \"I'm right patch title\"     )"},{"path":"https://yunuuuu.github.io/ggalign/reference/read_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Example Data — read_example","title":"Read Example Data — read_example","text":"function reads example data file. file specified, returns list available example files.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/read_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Example Data — read_example","text":"","code":"read_example(file = NULL)"},{"path":"https://yunuuuu.github.io/ggalign/reference/read_example.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Example Data — read_example","text":"file string representing name example file read. NULL, function return list available example file names.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/read_example.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Example Data — read_example","text":"file NULL, returns character vector available example file names. Otherwise, returns contents specified example file, read R object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/read_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Example Data — read_example","text":"","code":"read_example() #> [1] \"gene_expression.rds\" \"measles.rds\""},{"path":"https://yunuuuu.github.io/ggalign/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. grid gpar, unit","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/show-Layout-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Layout object — show,Layout-method","title":"Print Layout object — show,Layout-method","text":"Print Layout object","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/show-Layout-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Layout object — show,Layout-method","text":"","code":"# S4 method for class 'Layout' show(object)"},{"path":"https://yunuuuu.github.io/ggalign/reference/show-Layout-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Layout object — show,Layout-method","text":"object heatmap_layout() stack_layout() object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/show-Layout-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print Layout object — show,Layout-method","text":"input invisiblely.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/stack_active.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine the active context of stack layout — stack_active","title":"Determine the active context of stack layout — stack_active","text":"Determine active context stack layout","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/stack_active.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine the active context of stack layout — stack_active","text":"","code":"stack_active(   guides = NA,   free_labs = NA,   free_spaces = NA,   plot_data = NA,   theme = NA,   what = NULL,   sizes = NULL )"},{"path":"https://yunuuuu.github.io/ggalign/reference/stack_active.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine the active context of stack layout — stack_active","text":"guides boolean value string containing one \"t\", \"l\", \"b\", \"r\" indicates guide collected. NULL, guides collected. Default: \"tlbr\". free_labs boolean value string containing one \"t\", \"l\", \"b\", \"r\" indicates axis title free alignment. NULL, axis title aligned. Default: \"tlbr\". free_spaces boolean value string containing one \"t\", \"l\", \"b\", \"r\" indicates border spaces removed. NULL (default), space removed. plot_data function used transform plot data rendering. default, 'll inherit parent layout. parent layout, default NULL, means want modify anything. Used modify data layout created, data handled ggplot2 rendering. Use hook needs change default data geoms. theme theme() object, added plots layout. Use NULL want theme components added. Use waiver(), want inherit parent layout. get activated stack layout? Possible values follows: single number string plot elements stack layout. Usually waive use , since adding procedure can easily changed. NULL: Remove active context, useful active context heatmap_layout() object, Align objects added heatmap. removing active context, can add Align object stack_layout() . sizes numeric unit object length 3 indicates relative widths (direction = \"horizontal\") / heights (direction = \"vertical\").","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/stack_active.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine the active context of stack layout — stack_active","text":"stack_active object can added StackLayout.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/stack_active.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine the active context of stack layout — stack_active","text":"","code":"ggstack(matrix(1:9, nrow = 3L)) +     ggheatmap() +     # ggheamtap will set the active context, directing following addition     # into the heatmap plot area. To remove the heatmap active context,     # we can use `stack_active()` which will direct subsequent addition into     # the stack     stack_active() +     # here we add a dendrogram to the stack.     align_dendro()"},{"path":"https://yunuuuu.github.io/ggalign/reference/stack_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Put plots horizontally or vertically — stack_layout","title":"Put plots horizontally or vertically — stack_layout","text":"ggstack alias stack_layout.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/stack_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Put plots horizontally or vertically — stack_layout","text":"","code":"stack_layout(data, direction = NULL, sizes = NA, ...)  ggstack(data, direction = NULL, sizes = NA, ...)"},{"path":"https://yunuuuu.github.io/ggalign/reference/stack_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Put plots horizontally or vertically — stack_layout","text":"data numeric character vector, data frame, matrix. direction string \"horizontal\" \"vertical\", indicates direction stack layout. sizes numeric unit object length 3 indicates relative widths (direction = \"horizontal\") / heights (direction = \"vertical\"). ... used currently.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/stack_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Put plots horizontally or vertically — stack_layout","text":"StackLayout object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/stack_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Put plots horizontally or vertically — stack_layout","text":"","code":"ggstack(matrix(rnorm(100L), nrow = 10L)) + align_dendro()"},{"path":"https://yunuuuu.github.io/ggalign/reference/wrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrap Arbitrary Graphics for Alignment — wrap","title":"Wrap Arbitrary Graphics for Alignment — wrap","text":"wrap() function allows non-ggplot2 elements converted compliant representation use align_plots(). useful adding graphics can converted grob patch() method.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/wrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrap Arbitrary Graphics for Alignment — wrap","text":"","code":"wrap(plot, ..., align = \"panel\", on_top = TRUE, clip = TRUE, vp = NULL)"},{"path":"https://yunuuuu.github.io/ggalign/reference/wrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrap Arbitrary Graphics for Alignment — wrap","text":"plot graphic can converted grob using patch(). ... Additional arguments passed patch() method. align string specifying area place plot: \"full\" full area, \"plot\" full plotting area (including axis label), \"panel\" actual area data drawn. on_top single boolean value indicates whether graphic plot put frontmost. Note: graphic plot always put background. clip single boolean value indicating whether grob clipped expand outside designated area. vp viewport object, can use define plot area.","code":""},{"path":"https://yunuuuu.github.io/ggalign/reference/wrap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrap Arbitrary Graphics for Alignment — wrap","text":"wrapped_plot object can directly placed align_plots().","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/reference/wrap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrap Arbitrary Graphics for Alignment — wrap","text":"","code":"library(grid) wrap(rectGrob(gp = gpar(fill = \"goldenrod\")), align = \"full\") +     inset(rectGrob(gp = gpar(fill = \"steelblue\")), align = \"panel\") +     inset(textGrob(\"Here are some text\", gp = gpar(color = \"black\")),         align = \"panel\"     )  p1 <- ggplot(mtcars) +     geom_point(aes(mpg, disp)) +     ggtitle(\"Plot 1\") align_plots(p1, wrap(     ~ plot(mtcars$mpg, mtcars$disp),     mar = c(0, 2, 0, 0), bg = NA ))"},{"path":"https://yunuuuu.github.io/ggalign/news/index.html","id":"ggalign-004","dir":"Changelog","previous_headings":"","what":"ggalign 0.0.4","title":"ggalign 0.0.4","text":"stack_layout(): gain sizes argument control relative sizes stack align_()*: now order argument control plot area. align_reorder() now can accept ordering character names. export order2() function align_reorder(): fun argument renamed order argument, can now accept ordering integer index directly fun align_reorder() now can return statistics can handled order2() fix ggheatmap() order work put stack layout method hclust2() can now return objects can coerced hclust, can provide object directly method. hclust2() now can accept distance = NULL hmanno(), stack_active(), align_*() functions gain new argument theme control theme plot. new layout_annotation() layout_theme() modify layout components borders argument free_space() renamed spaces {tibble} now removed dependency align_plots() now can accept gList, function, recordedplot, trellis, pheatmap, Heatmap, HeatmapAnnotation, HeatmapList, added alignpatch method objects. add patch method gList, function, recordedplot, trellis, pheatmap, Heatmap, HeatmapAnnotation, HeatmapList fix bug wrap() function duplicated names gtable cause grobs missing new free_vp() function customize viewport aligning. StackLayout HeatmapLayout methods collapsed one method Layout class New Patch class, now can extend alignment process object customize building process ggproto. fix missing variable labs free_space method PatchAlignpatches","code":""},{"path":"https://yunuuuu.github.io/ggalign/news/index.html","id":"ggalign-003","dir":"Changelog","previous_headings":"","what":"ggalign 0.0.3","title":"ggalign 0.0.3","text":"CRAN release: 2024-09-15 Add package logo new inset() function add package quotes DESCRIPTION add return value docs exported function methods","code":""},{"path":"https://yunuuuu.github.io/ggalign/news/index.html","id":"ggalign-002","dir":"Changelog","previous_headings":"","what":"ggalign 0.0.2","title":"ggalign 0.0.2","text":"omit redudnant description add single quote package name","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/news/index.html","id":"features-0-0-1","dir":"Changelog","previous_headings":"","what":"Features","title":"ggalign 0.0.1","text":"Heatmap layout: Arrange ggplot Heatmap. Stack layout: Arrange ggplot vertically horizontally. align_group(): Group layout axis panel align_kmeans(): Group layout observations kmeans align_reorder(): Reorder layout observations align_dendro(): Reorder Group layout based Hierarchical Clustering align_gg()/ggalign(): Create ggplot object layout align_panel()/ggpanel(): Create ggplot object based layout panel data.","code":""}]
