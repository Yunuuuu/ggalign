[{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement yunyunp96@163.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 ggalign authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/FAQ.html","id":"can-i-change-the-default-data-for-all-geoms","dir":"Articles","previous_headings":"","what":"Can I change the default data for all geoms?","title":"FAQ","text":"function ggalign requires specific data formats operations. need transform filter data individual geoms, can use data argument within geom. However, multiple geoms want consistent transformation applied across , can utilize plot_data() function allows transform default data additive geoms.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/FAQ.html","id":"why-are-there-spaces-after-setting-all-plot-margin-to-zero","dir":"Articles","previous_headings":"","what":"Why are there spaces after setting all plot.margin to zero?","title":"FAQ","text":"default, ggalign doesn’t add spaces plots. notice spaces, likely due : Plot margins within individual plots. Scale expansion automatically added ggplot2. can resolve removing scale expansion adjusting margins theme:","code":"ggheatmap(small_mat) +     anno_top() +     align_dendro(aes(color = branch), k = 3L) +     scale_y_continuous(expand = expansion()) &     theme(plot.margin = margin()) #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/FAQ.html","id":"why-cant-i-add-two-dendrograms-with-different-reorder-settings","dir":"Articles","previous_headings":"","what":"Why can’t I add two dendrograms with different reorder settings?","title":"FAQ","text":"Note: always prevent users reordering layout direction twice. reorder_group = FALSE used, reordering heatmap occurs within group. long ordering within group remains consistent, two dendrograms can placed axis heatmap. Let’s assume panels represents group observation index represents ordered index observations. code provided, panels initialized ungrouped index unordered: add dendrogram reorder_group = FALSE; ’ll something like (Since reorder_group = FALSE, panels won’t changed): However, dendrogram reorder_group = TRUE added, reorder panels, underlying index changed: prevent reordering axis twice, ensure new_index matches index (index NULL). done maintain consistency prevent conflicts ordering heatmap.","code":"panels <- NULL index <- NULL set.seed(2L) group <- sample(letters[1:3], ncol(small_mat), replace = TRUE) h <- ggheatmap(small_mat) +     anno_top() +     align_group(group) h1 <- h + align_dendro(reorder_group = FALSE, merge_dendrogram = TRUE) # always remember dendrogram will initialize the index, here, we extract the # index from the underlying dendrogram index <- stats::order.dendrogram(ggalign_stat(h1, \"top\", 2L)) h2 <- h + align_dendro(reorder_group = TRUE, merge_dendrogram = TRUE) new_index <- stats::order.dendrogram(ggalign_stat(h2, \"top\", 2L)) all(index == new_index) #> [1] FALSE"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/FAQ.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"FAQ","text":"","code":"sessionInfo() #> R version 4.4.2 (2024-10-31) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.5 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggalign_0.0.5.9000 ggplot2_3.5.1      #>  #> loaded via a namespace (and not attached): #>  [1] vctrs_0.6.5       cli_3.6.3         knitr_1.49        rlang_1.1.4       #>  [5] xfun_0.49         generics_0.1.3    textshaping_0.4.0 jsonlite_1.8.9    #>  [9] labeling_0.4.3    glue_1.8.0        colorspace_2.1-1  htmltools_0.5.8.1 #> [13] ragg_1.3.3        sass_0.4.9        fansi_1.0.6       scales_1.3.0      #> [17] rmarkdown_2.29    grid_4.4.2        tibble_3.2.1      evaluate_1.0.1    #> [21] munsell_0.5.1     jquerylib_0.1.4   fastmap_1.2.0     yaml_2.3.10       #> [25] lifecycle_1.0.4   compiler_4.4.2    dplyr_1.1.4       fs_1.6.5          #> [29] pkgconfig_2.0.3   farver_2.1.2      systemfonts_1.1.0 digest_0.6.37     #> [33] R6_2.5.1          tidyselect_1.2.1  utf8_1.2.4        pillar_1.9.0      #> [37] magrittr_2.0.3    bslib_0.8.0       withr_3.0.2       tools_4.4.2       #> [41] gtable_0.3.6      pkgdown_2.1.1     cachem_1.1.0      desc_1.4.3"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/benchmarks.html","id":"compared-with-other-packages","dir":"Articles","previous_headings":"","what":"Compared with other packages","title":"Benchmarks","text":"simple heatmap. heatmap dendrogram","code":"bench::mark(     \"heatmap()\" = {         pdf(NULL)         heatmap(mat, Rowv = NA, Colv = NA)         dev.off()         NULL     },     \"heatmap.2()\" = {         pdf(NULL)         heatmap.2(mat, dendrogram = \"none\", trace = \"none\")         dev.off()         NULL     },     \"Heatmap()\" = {         pdf(NULL)         draw(Heatmap(mat,             cluster_rows = FALSE, cluster_columns = FALSE,             use_raster = TRUE         ))         dev.off()         NULL     },     \"pheatmap()\" = {         pdf(NULL)         pheatmap(mat, cluster_rows = FALSE, cluster_cols = FALSE)         dev.off()         NULL     },     \"ggalign()\" = {         pdf(NULL)         print(ggheatmap(mat, filling = \"raster\"))         dev.off()         NULL     } ) #> Warning: Some expressions had a GC in every iteration; so filtering is #> disabled. #> # A tibble: 5 × 6 #>   expression       min   median `itr/sec` mem_alloc `gc/sec` #>   <bch:expr>  <bch:tm> <bch:tm>     <dbl> <bch:byt>    <dbl> #> 1 heatmap()    165.5ms  280.6ms     3.56   139.11MB    1.78  #> 2 heatmap.2()    2.23s    2.23s     0.448  224.23MB    0.897 #> 3 Heatmap()      4.33s    4.33s     0.231  792.59MB    3.00  #> 4 pheatmap()   649.5ms  649.5ms     1.54    124.1MB    3.08  #> 5 ggalign()      2.17s    2.17s     0.461    2.51GB    9.69 bench::mark(     \"heatmap()\" = {         pdf(NULL)         heatmap(mat)         dev.off()         NULL     },     \"heatmap.2()\" = {         pdf(NULL)         heatmap.2(mat, trace = \"none\")         dev.off()         NULL     },     \"Heatmap()\" = {         pdf(NULL)         draw(Heatmap(mat,             row_dend_reorder = FALSE, column_dend_reorder = FALSE,             use_raster = TRUE         ))         dev.off()         NULL     },     \"pheatmap()\" = {         pdf(NULL)         pheatmap(mat)         dev.off()         NULL     },     \"ggalign()\" = {         pdf(NULL)         print(ggheatmap(mat, filling = \"raster\") +             anno_top() + align_dendro() +             anno_right() + align_dendro())         dev.off()         NULL     } ) #> Warning: Some expressions had a GC in every iteration; so filtering is #> disabled. #> # A tibble: 5 × 6 #>   expression       min   median `itr/sec` mem_alloc `gc/sec` #>   <bch:expr>  <bch:tm> <bch:tm>     <dbl> <bch:byt>    <dbl> #> 1 heatmap()      2.63s    2.63s     0.380  173.72MB    2.66  #> 2 heatmap.2()    3.07s    3.07s     0.326  223.41MB    2.28  #> 3 Heatmap()      5.45s    5.45s     0.184    1.51GB    1.84  #> 4 pheatmap()     2.23s    2.23s     0.450  177.53MB    0.450 #> 5 ggalign()      4.69s    4.69s     0.213    2.58GB    4.69"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/complete-examples.html","id":"simple-heatmap","dir":"Articles","previous_headings":"","what":"Simple heatmap","title":"Complete Examples","text":"","code":"ggheatmap(small_mat) #> → heatmap built with `geom_tile()`"},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/complete-examples.html","id":"based-on-dendrogram","dir":"Articles","previous_headings":"heatmap layout customize","what":"Based on dendrogram","title":"Complete Examples","text":"","code":"ggheatmap(small_mat) +     anno_top() +     align_dendro(aes(color = branch), k = 3) +     geom_point(aes(color = branch, y = y)) +     scale_color_brewer(palette = \"Dark2\") #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/complete-examples.html","id":"based-on-kmeans","dir":"Articles","previous_headings":"heatmap layout customize","what":"Based on kmeans","title":"Complete Examples","text":"","code":"ggheatmap(small_mat) +     anno_top() +     align_kmeans(3L) #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/complete-examples.html","id":"based-on-a-group-variable","dir":"Articles","previous_headings":"heatmap layout customize","what":"Based on a group variable","title":"Complete Examples","text":"","code":"ggheatmap(small_mat) +     anno_top() +     align_group(sample(letters[1:4], ncol(small_mat), replace = TRUE)) #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/complete-examples.html","id":"based-on-an-ordering-weights","dir":"Articles","previous_headings":"heatmap layout customize","what":"Based on an ordering weights","title":"Complete Examples","text":", ordered heatmap rows based row means.","code":"ggheatmap(small_mat) +     anno_left() +     align_order(rowMeans) #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/complete-examples.html","id":"heatmap-annotation-plot","dir":"Articles","previous_headings":"","what":"Heatmap annotation plot","title":"Complete Examples","text":"","code":"ggheatmap(small_mat) +     anno_top() +     align_dendro(aes(color = branch), k = 3) +     geom_point(aes(color = branch, y = y)) +     scale_color_brewer(palette = \"Dark2\") +     ggalign(aes(y = value)) +     geom_boxplot(aes(factor(.x), fill = .panel)) +     scale_fill_brewer(palette = \"Dark2\") #> → heatmap built with `geom_tile()` ggheatmap(small_mat) +     anno_top(size = 0.5) +     align_dendro(aes(color = branch), k = 3L) +     ggalign(aes(y = value), data = rowSums) +     geom_bar(stat = \"identity\", aes(fill = factor(.panel))) +     scale_fill_brewer(name = NULL, palette = \"Dark2\") +     anno_left(size = 0.5) +     align_dendro(aes(color = branch), size = 0.5, k = 4L) +     ggalign(aes(x = value), data = rowSums) +     geom_bar(         aes(y = .y, fill = factor(.y)),         stat = \"identity\",         orientation = \"y\"     ) +     scale_fill_brewer(name = NULL, palette = \"Paired\", guide = \"none\") #> → heatmap built with `geom_tile()`"},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/complete-examples.html","id":"horizontal-layout","dir":"Articles","previous_headings":"Multiple heatmaps","what":"Horizontal layout","title":"Complete Examples","text":"","code":"(stack_alignh(small_mat) +     ggheatmap() +     ggheatmap() &     theme(axis.text.x = element_text(angle = -60, hjust = 0))) +     stack_active() +     align_dendro(aes(color = branch), k = 4L, size = 0.2) +     scale_color_brewer(palette = \"Dark2\") #> → heatmap built with `geom_tile()` #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/complete-examples.html","id":"vertical-layout","dir":"Articles","previous_headings":"Multiple heatmaps","what":"Vertical layout","title":"Complete Examples","text":"","code":"stack_alignv(small_mat) -     plot_theme(         axis.text.x = element_blank(),         axis.ticks.x = element_blank()     ) +     align_dendro(aes(color = branch), k = 4L, size = 0.2) +     scale_color_brewer(palette = \"Dark2\") +     ggheatmap() +     ggheatmap() +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) #> → heatmap built with `geom_tile()` #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/complete-examples.html","id":"marginal-plots","dir":"Articles","previous_headings":"","what":"marginal plots","title":"Complete Examples","text":"","code":"ggside(mpg, aes(displ, hwy, colour = class)) -     # set default theme for all plots in the layout     plot_theme(theme_bw()) +     geom_point(size = 2) +     # add top annotation     anno_top(size = 0.3) -     # set default theme for the top annotation     plot_theme(theme_no_axes(\"tb\")) +     # add a plot in the top annotation     ggfree() +     geom_density(aes(displ, y = after_stat(density), colour = class), position = \"stack\") +     anno_right(size = 0.3) -     # set default theme for the right annotation     plot_theme(theme_no_axes(\"lr\")) +     # add a plot in the right annotation     ggfree() +     geom_density(aes(x = after_stat(density), hwy, colour = class),         position = \"stack\"     ) +     theme(axis.text.x = element_text(angle = 90, vjust = .5)) &     scale_color_brewer(palette = \"Dark2\")"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/complete-examples.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Complete Examples","text":"","code":"sessionInfo() #> R version 4.4.2 (2024-10-31) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.5 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggalign_0.0.5.9000 ggplot2_3.5.1      #>  #> loaded via a namespace (and not attached): #>  [1] gtable_0.3.6       jsonlite_1.8.9     dplyr_1.1.4        compiler_4.4.2     #>  [5] tidyselect_1.2.1   jquerylib_0.1.4    systemfonts_1.1.0  scales_1.3.0       #>  [9] textshaping_0.4.0  yaml_2.3.10        fastmap_1.2.0      R6_2.5.1           #> [13] labeling_0.4.3     generics_0.1.3     knitr_1.49         tibble_3.2.1       #> [17] desc_1.4.3         munsell_0.5.1      bslib_0.8.0        pillar_1.9.0       #> [21] RColorBrewer_1.1-3 rlang_1.1.4        utf8_1.2.4         cachem_1.1.0       #> [25] xfun_0.49          fs_1.6.5           sass_0.4.9         cli_3.6.3          #> [29] pkgdown_2.1.1      withr_3.0.2        magrittr_2.0.3     digest_0.6.37      #> [33] grid_4.4.2         lifecycle_1.0.4    vctrs_0.6.5        evaluate_1.0.1     #> [37] glue_1.8.0         farver_2.1.2       ragg_1.3.3         fansi_1.0.6        #> [41] colorspace_2.1-1   rmarkdown_2.29     tools_4.4.2        pkgconfig_2.0.3    #> [45] htmltools_0.5.8.1"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/difference-with-ggplot2.html","id":"axes-used-for-alignment","dir":"Articles","previous_headings":"","what":"Axes used for alignment","title":"Difference with ggplot2","text":"Axes used alignment ggalign refer : - x-axis vertical stack layouts x-axis horizontal stack layouts x- y axes quad_layout() main plot ggalign introduces special syntax handling axes, differing default behavior ggplot2. adjustments ensure observations properly aligned operations user-friendly.","code":"library(ggalign) #> Loading required package: ggplot2 set.seed(123) small_mat <- matrix(rnorm(72), nrow = 9) rownames(small_mat) <- paste0(\"row\", seq_len(nrow(small_mat))) colnames(small_mat) <- paste0(\"column\", seq_len(ncol(small_mat)))"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/difference-with-ggplot2.html","id":"position-scales","dir":"Articles","previous_headings":"","what":"Position Scales","title":"Difference with ggplot2","text":"better fit alignment-based layout, ggalign introduces adjustments breaks, labels, expand arguments.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/difference-with-ggplot2.html","id":"breaks","dir":"Articles","previous_headings":"Position Scales","what":"breaks","title":"Difference with ggplot2","text":"breaks labels typically handled similarly discrete scales, focus aligning observations (regarded discrete variables); matter use continuous scale discrete scale. breaks one : Default breaks without names:  breaks:   Character-based breaks use data names (indices names absent)   Integer-based breaks interpreted data indices:   Floating numbers invalid breaks: interpret integers plot-specific coordinate indices, wrap ():","code":"- `NULL` for no breaks  - `waiver()` for the default breaks (the full data index or `NULL` if no data names and `labels` is `waiver()`)  - A character vector of breaks (rownames / colunames of the matrix).  - A numeric vector of data index (must be an integer).  - A function that takes the data names or the data index as input and returns breaks as output. Also accepts rlang lambda function notation. no_names <- small_mat colnames(no_names) <- NULL ggheatmap(no_names) + scale_x_continuous() #> → heatmap built with `geom_tile()` ggheatmap(small_mat) + scale_x_continuous(breaks = NULL) #> → heatmap built with `geom_tile()` ggheatmap(small_mat, filling = FALSE) +     geom_tile(aes(.column_names, .row_names, fill = value)) +     scale_x_discrete(breaks = NULL) ggheatmap(small_mat) +     scale_x_continuous(breaks = c(\"column3\", \"column5\")) +     anno_top() +     align_dendro(k = 3L) #> → heatmap built with `geom_tile()` ggheatmap(small_mat, filling = FALSE) +     geom_tile(aes(.column_names, .row_names, fill = value)) +     scale_x_discrete(breaks = c(\"column3\", \"column5\")) +     anno_top() +     align_dendro(k = 3L) ggheatmap(small_mat) +     scale_x_continuous(breaks = c(3, 5)) +     anno_top() +     align_dendro(k = 3L) #> → heatmap built with `geom_tile()` ggheatmap(small_mat, filling = FALSE) +     geom_tile(aes(.column_names, .row_names, fill = value)) +     scale_x_discrete(breaks = c(3, 5)) +     anno_top() +     align_dendro(k = 3L) ggheatmap(small_mat) + scale_x_continuous(breaks = c(3.5, 5)) #> → heatmap built with `geom_tile()` #> Error in `scale_x_continuous()`: #> ! Can't convert from `breaks` <double> to <integer> due to loss of precision. #> • Locations: 1 ggheatmap(small_mat) +     scale_x_continuous(breaks = I(3:4)) +     anno_top() +     align_dendro(k = 3L) #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/difference-with-ggplot2.html","id":"labels","dir":"Articles","previous_headings":"Position Scales","what":"labels","title":"Difference with ggplot2","text":"labels one : default labels data names (indices names absent):  labels:  Character labels reordered based data’s ordering:  retain original order character labels, wrap ():  default, labels correspond breaks:  override default matching, wrap labels vector ():","code":"- `NULL` for no labels  - `waiver()` for the default labels (data names)  - A character vector giving labels (must be same length as breaks)  - An expression vector (must be the same length as breaks). See `?plotmath` for details.   - A function that takes the data names (or data index if data has no names) as input and returns labels as output. This can be also a rlang lambda function. ggheatmap(small_mat) + scale_x_continuous() +     anno_top() +     align_dendro(k = 3L) #> → heatmap built with `geom_tile()` ggheatmap(small_mat) +     scale_x_continuous(labels = NULL) +     anno_top() +     align_dendro(k = 3L) #> → heatmap built with `geom_tile()` ggheatmap(small_mat) +     scale_x_continuous(labels = letters[seq_len(ncol(small_mat))]) +     anno_top() +     align_dendro(k = 3L) #> → heatmap built with `geom_tile()` ggheatmap(small_mat) +     scale_x_continuous(labels = I(letters[seq_len(ncol(small_mat))])) +     anno_top() +     align_dendro(k = 3L) #> → heatmap built with `geom_tile()` ggheatmap(small_mat) +     scale_x_continuous(breaks = c(5, 3), labels = c(\"a\", \"b\")) #> → heatmap built with `geom_tile()` ggheatmap(small_mat) +     scale_x_continuous(breaks = c(5, 3), labels = I(c(\"a\", \"b\"))) #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/difference-with-ggplot2.html","id":"expand","dir":"Articles","previous_headings":"Position Scales","what":"expand","title":"Difference with ggplot2","text":"default, utilize zero expansion aligned axis. typically desired setting. wish introduce expansion, must manually adjust apply plot ensure proper axis alignment.  can utilize ggh4x::facetted_pos_scales() set scales panel.","code":"ggheatmap(small_mat) +     scale_x_continuous(expand = expansion(mult = 0.1)) +     anno_top() +     align_dendro(aes(color = branch), k = 3L) +     scale_x_continuous(expand = expansion(mult = 0.1)) #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/difference-with-ggplot2.html","id":"theme","dir":"Articles","previous_headings":"","what":"theme","title":"Difference with ggplot2","text":"Although ggplot2 officially support vectorized input theme elements, can still utilize . ggalign extends feature, allowing theme elements vectorized applied across panels.","code":"ggheatmap(small_mat) +     theme(         axis.text.x = element_text(             colour = c(rep(\"red\", 4), rep(\"blue\", 5))         ),         axis.ticks.x = element_line(             colour = c(rep(\"red\", 4), rep(\"blue\", 5))         ),         axis.ticks.length.x = unit(rep(c(1, 4), times = c(4, 5)), \"mm\")     ) +     anno_top() +     align_dendro(aes(color = branch), k = 3L) +     scale_y_continuous(expand = expansion()) &     theme(plot.margin = margin()) #> Warning: Vectorized input to `element_text()` is not officially supported. #> ℹ Results may be unexpected or may change in future versions of ggplot2. #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/difference-with-ggplot2.html","id":"facets","dir":"Articles","previous_headings":"","what":"Facets","title":"Difference with ggplot2","text":"working facets, manual configuration panel using facet_*() functions possible since internal structure use facet_grid() set row/column groups defined align_*() functions. However, can still use facet_grid() facet_null() (panel) control arguments except aligned panels (rows horizontal stack layout cols vertical stack layout, rows cols heatmap body). common use case modify panel strip text. default theme (theme_ggalign()) always remove panel strip text, can override behaviour theme(strip.text = element_text()) add panel title plot area.","code":"ggheatmap(small_mat) +     facet_grid(labeller = labeller(.column_panel = function(x) letters[as.integer(x)])) +     theme(strip.text = element_text()) +     anno_top() +     align_kmeans(centers = 3L) #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/difference-with-ggplot2.html","id":"coords","dir":"Articles","previous_headings":"","what":"Coords","title":"Difference with ggplot2","text":"Currently, cartesian coordinate can used align axis well. Internally, limits always set number observations, additional range expansion 0.5 added ends.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/difference-with-ggplot2.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Difference with ggplot2","text":"","code":"sessionInfo() #> R version 4.4.2 (2024-10-31) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.5 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggalign_0.0.5.9000 ggplot2_3.5.1      #>  #> loaded via a namespace (and not attached): #>  [1] vctrs_0.6.5       cli_3.6.3         knitr_1.49        rlang_1.1.4       #>  [5] xfun_0.49         generics_0.1.3    textshaping_0.4.0 jsonlite_1.8.9    #>  [9] labeling_0.4.3    glue_1.8.0        colorspace_2.1-1  htmltools_0.5.8.1 #> [13] ragg_1.3.3        sass_0.4.9        fansi_1.0.6       scales_1.3.0      #> [17] rmarkdown_2.29    grid_4.4.2        tibble_3.2.1      evaluate_1.0.1    #> [21] munsell_0.5.1     jquerylib_0.1.4   fastmap_1.2.0     yaml_2.3.10       #> [25] lifecycle_1.0.4   compiler_4.4.2    dplyr_1.1.4       fs_1.6.5          #> [29] pkgconfig_2.0.3   farver_2.1.2      systemfonts_1.1.0 digest_0.6.37     #> [33] R6_2.5.1          tidyselect_1.2.1  utf8_1.2.4        pillar_1.9.0      #> [37] magrittr_2.0.3    bslib_0.8.0       withr_3.0.2       tools_4.4.2       #> [41] gtable_0.3.6      pkgdown_2.1.1     cachem_1.1.0      desc_1.4.3"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/heatmap-layout.html","id":"input-data","dir":"Articles","previous_headings":"","what":"input data","title":"Heatmap Layout","text":"data input can numeric character vector, data frame, data can converted matrix fortify_matrix().","code":"set.seed(123) small_mat <- matrix(rnorm(81), nrow = 9) rownames(small_mat) <- paste0(\"row\", seq_len(nrow(small_mat))) colnames(small_mat) <- paste0(\"column\", seq_len(ncol(small_mat))) library(ggalign) #> Loading required package: ggplot2 ggheatmap(small_mat) #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/heatmap-layout.html","id":"heatmap-body","dir":"Articles","previous_headings":"","what":"heatmap body","title":"Heatmap Layout","text":"ggplot2 usage, matrix input converted long formated data frame drawing. default mapping use aes(.data$.x, .data$.y), can controlled using mapping argument. data underlying ggplot object contains following columns: .xpanel .ypanel: column row panel .x .y: x y coordinates .row_names .column_names: factor row column names original matrix (applicable names exist). .row_index .column_index: row column index original matrix. value: actual matrix value. can treat ggheatmap()/heatmap_layout() object standard ggplot2 object default mapping data. means can add ggplot2 layers elements just like ggplot object.  default, ggheatmap()/heatmap_layout() adds heatmap layer. matrix 20,000 cells (nrow * ncol > 20000), uses geom_raster() performance efficiency; smaller matrices, geom_tile() used. can explicitly choose layer providing single string (\"raster\" \"tile\") filling argument.   set filling = NULL, blank heatmap drawn, allowing customized filling geoms. way, must set fill mapping manually.  3D heatmap can easily created using geom_tile3d() function. Note ggheatmap() always sets limits align plots annotations, even annotations present. Therefore, necessary manually adjust plot margins spacing legend panel area. Additionally, since guide legends collected layout, spacing specified theme argument ggheatmap().  heatmap pie charts:  want complex customization pie charts, try using ggforce::geom_arc_bar() instead.","code":"ggheatmap(small_mat) + geom_point() + scale_fill_viridis_c() #> → heatmap built with `geom_tile()` ggheatmap(small_mat, filling = \"raster\") ggheatmap(small_mat, filling = \"tile\") ggheatmap(small_mat, filling = NULL) +     geom_tile(aes(fill = value), color = \"black\", width = 0.9, height = 0.9) set.seed(123) ggheatmap(matrix(runif(100), 10),     filling = NULL,     theme = theme(legend.box.spacing = unit(5, \"mm\")) ) +     geom_tile3d(aes(z = value, fill = value),         color = \"black\", width = 0.9, height = 0.9     ) +     coord_cartesian(clip = \"off\") +     theme(plot.margin = margin(t = 5, unit = \"mm\")) set.seed(123) ggheatmap(matrix(runif(360L), nrow = 20L), filling = NULL) +     geom_pie(aes(angle = value * 360, fill = value))"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/heatmap-layout.html","id":"rasterization","dir":"Articles","previous_headings":"","what":"rasterization","title":"Heatmap Layout","text":"working large heatmaps, ’s often beneficial rasterize heatmap body layer. can achieve using raster_magick() function. default, res match resolution current device, specifying different value can reduce resolution rasterized heatmap body.  raster image post-processing, similar approach ComplexHeatmap, can leverage raster_magick() function. function uses magick package apply custom image resizing filters. Based rough testing, rasterization becomes advantageous heatmaps 5000 x 5000 cells compared using pure geom_raster().  Note: using magick::image_resize(), specify geometry argument resize image. filter specified, distort image data (though subtle). information image resizing, refer ImageMagick’s resize documentation. can rasterize plots layout directly raster_magick(). method works ggheatmap()/quad_layout() ggstack()/stack_layout() objects. Additionally, can use external packages like ggrastr ggfx rasterize heatmap body.  can also rasterize plots layout directly ggrastr::rasterise(). method works ggheatmap()/quad_layout() ggstack()/stack_layout() objects. Indeed, core code raster_magick() adopted ggrastr::rasterise().  Furthermore, ggfx offers many image filters can applied ggplot2 layers.","code":"ggheatmap(small_mat, filling = NULL) +     raster_magick(geom_tile(aes(fill = value)), res = 50) ggheatmap(small_mat, filling = NULL) +     # Use `magick::filter_types()` to check available `filter` arguments     raster_magick(geom_raster(aes(fill = value)),         magick = function(image) {             magick::image_resize(image,                 # we resize to the 50% of width                 geometry = \"50%x\", filter = \"Lanczos\"             )         }     ) ggheatmap(small_mat, filling = FALSE) +     ggrastr::rasterise(geom_tile(aes(fill = value)), dev = \"ragg\") ggrastr::rasterise(ggheatmap(small_mat), dev = \"ragg\") #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/heatmap-layout.html","id":"heatmap-annotations","dir":"Articles","previous_headings":"","what":"heatmap annotations","title":"Heatmap Layout","text":"heatmap typically two observation axes (rows columns), can reordered supplemented additional information. ggheatmap(), annotations handled stack_layout() object, specifically stack_align(), aligns observations. object can hold multiple plots can positioned top, left, bottom, right heatmap. Note ggalign use concept \"number observations\" vctrs package NROW() function. aligning observations, must ensure number observations equal. column annotations, layout matrix transposed use. necessary column annotations use heatmap columns observations, need rows.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/heatmap-layout.html","id":"quad_anno","dir":"Articles","previous_headings":"heatmap annotations","what":"quad_anno()","title":"Heatmap Layout","text":"default, heatmap_layout()/ggheatmap() initialize active context, means additions directed within heatmap body. can use quad_anno() set active context, directing subsequent additions specified annotation position. quad_anno() function following aliases: anno_top: special case quad_anno position = \"top\". anno_left: special case quad_anno position = \"left\". anno_bottom: special case quad_anno position = \"bottom\". anno_right: special case quad_anno position = \"right\". annotations allows custom layout adjustments addition various plot types. following example, align_kmeans() used group columns three panels. doesn’t matter added top bottom since won’t add plot area:  can add align_*() function annotation. details align_*() functions, refer vignette(\"layout-customize\") vignette(\"layout-plot\").  example: anno_right() change active context right heatmap. align_dendro(k = 3L) adds dendrogram right-side annotation context sets active plot annotation stack. geom_point(aes(color = factor(branch))) added active plot within annotation stack, , means align_dendro() plot.","code":"ggheatmap(small_mat) +     # we set the active context to the top annotation     anno_top() +     # we split the observations into 3 groups by kmeans     align_kmeans(3L) #> → heatmap built with `geom_tile()` ggheatmap(small_mat) +     # in the heatmap body, we set the axis text theme     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     # we set the active context to the right annotation     anno_right() +     # in the right annotation, we add a dendrogram     align_dendro(k = 3L) +     # in the dendrogram, we add a point layer     geom_point(aes(color = factor(branch))) #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/heatmap-layout.html","id":"quad_active","dir":"Articles","previous_headings":"heatmap annotations","what":"quad_active()","title":"Heatmap Layout","text":"remove active context redirect additions back heatmap body, can use quad_active().","code":"ggheatmap(small_mat) +     # we set the active context to the top annotation     anno_top() +     # we split the observations into 3 groups by kmeans     align_kmeans(3L) +     # remove any active annotation     quad_active() +     # set fill color scale for the heatmap body     scale_fill_viridis_c() #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/heatmap-layout.html","id":"quad_switchhmanno","dir":"Articles","previous_headings":"heatmap annotations","what":"quad_switch()/hmanno()","title":"Heatmap Layout","text":"also provide quad_switch()/hmanno() (heatmap annotation) integrates quad_active() quad_anno() one function ease use. Feel free use functions streamline annotation process.   may wonder prefix quad_. ggheatmap() function specialized version quad_layout(), designed simplify creation heatmap plots integrating essential elements standard heatmap layout. quad_anno() quad_active() functions designed quad_layout().","code":"ggheatmap(small_mat) +     # we set the active context to the top annotation     quad_switch(\"t\") +     # we split the observations into 3 groups by kmeans     align_kmeans(3L) +     # remove any active annotation     quad_switch() +     # set fill color scale for the heatmap body     scale_fill_viridis_c() #> → heatmap built with `geom_tile()` ggheatmap(small_mat) +     # we set the active context to the top annotation     hmanno(\"t\") +     # we split the observations into 3 groups by kmeans     align_kmeans(3L) +     # remove any active annotation     hmanno() +     # set fill color scale for the heatmap body     scale_fill_viridis_c() #> → heatmap built with `geom_tile()`"},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/heatmap-layout.html","id":"heatmap-body-size","dir":"Articles","previous_headings":"Plot Size","what":"Heatmap Body Size","title":"Heatmap Layout","text":"can specify relative sizes heatmap body using width height arguments ggheatmap() function.  Alternatively, quad_active() function allows control heatmap body sizes.","code":"ggheatmap(small_mat, height = 2) +     anno_top() +     align_dendro() #> → heatmap built with `geom_tile()` ggheatmap(small_mat) +     quad_active(height = 2) +     anno_top() +     align_dendro() #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/heatmap-layout.html","id":"annotation-stack-size","dir":"Articles","previous_headings":"Plot Size","what":"Annotation Stack Size","title":"Heatmap Layout","text":"quad_anno() function allows control total annotation stack size. size argument controls relative width (left right annotations) height (top bottom annotations) whole annotation stack.  can also specify absolute size using unit():","code":"ggheatmap(small_mat) +     anno_top(size = 1) +     align_dendro() #> → heatmap built with `geom_tile()` ggheatmap(small_mat) +     anno_top(size = unit(30, \"mm\")) +     align_dendro() #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/heatmap-layout.html","id":"single-plot-size","dir":"Articles","previous_headings":"Plot Size","what":"Single Plot Size","title":"Heatmap Layout","text":"align_*()/ggfree() functions add plots annotation stack size argument control relative width (left right annotations) height (top bottom annotations) single plot annotation stack.","code":"ggheatmap(small_mat) +     anno_left(size = 0.2) +     ggalign(data = rowSums, aes(x = value), size = unit(10, \"mm\")) +     geom_bar(         aes(y = .y, fill = factor(.y)),         stat = \"identity\", orientation = \"y\"     ) +     scale_fill_brewer(palette = \"Set1\", guide = \"none\") #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/heatmap-layout.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Heatmap Layout","text":"","code":"sessionInfo() #> R version 4.4.2 (2024-10-31) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.5 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggalign_0.0.5.9000 ggplot2_3.5.1      #>  #> loaded via a namespace (and not attached): #>  [1] gtable_0.3.6       jsonlite_1.8.9     dplyr_1.1.4        compiler_4.4.2     #>  [5] Rcpp_1.0.13-1      tidyselect_1.2.1   ggbeeswarm_0.7.2   magick_2.8.5       #>  [9] jquerylib_0.1.4    systemfonts_1.1.0  scales_1.3.0       textshaping_0.4.0  #> [13] yaml_2.3.10        fastmap_1.2.0      R6_2.5.1           labeling_0.4.3     #> [17] generics_0.1.3     knitr_1.49         tibble_3.2.1       bookdown_0.41      #> [21] munsell_0.5.1      RColorBrewer_1.1-3 bslib_0.8.0        pillar_1.9.0       #> [25] rlang_1.1.4        utf8_1.2.4         cachem_1.1.0       xfun_0.49          #> [29] sass_0.4.9         viridisLite_0.4.2  cli_3.6.3          withr_3.0.2        #> [33] magrittr_2.0.3     digest_0.6.37      grid_4.4.2         beeswarm_0.4.0     #> [37] lifecycle_1.0.4    vipor_0.4.7        ggrastr_1.0.2      vctrs_0.6.5        #> [41] evaluate_1.0.1     glue_1.8.0         farver_2.1.2       ragg_1.3.3         #> [45] fansi_1.0.6        colorspace_2.1-1   rmarkdown_2.29     tools_4.4.2        #> [49] pkgconfig_2.0.3    htmltools_0.5.8.1"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/layout-customize.html","id":"align_group","dir":"Articles","previous_headings":"","what":"align_group","title":"Layout Customization","text":"align_group() function allows group rows/columns separate panels. doesn’t add plot area.  default, facet strip text removed. can override behavior theme(strip.text = element_text()). Since align_group() create new plot, panel title can added heatmap plot.","code":"ggheatmap(small_mat) +     anno_top() +     align_group(sample(letters[1:4], ncol(small_mat), replace = TRUE)) #> → heatmap built with `geom_tile()` ggheatmap(small_mat) +     theme(strip.text = element_text()) +     anno_left() +     align_group(sample(letters[1:4], nrow(small_mat), replace = TRUE)) #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/layout-customize.html","id":"align_order","dir":"Articles","previous_headings":"","what":"align_order","title":"Layout Customization","text":"align_order() function order rows/columns based summary weights, Like align_group(), doesn’t add plot area. , order rows based means.  addition, can provide ordering integer index directly order argument.  can also provide ordering character index.  default, align_order() reorders rows columns ascending order summary function’s output (bottom top rows, left right columns). reverse order, can set reverse = TRUE:  align_* functions accept data argument. can matrix, data frame, even simple vector. data argument can also accept function (purrr-like lambda syntax supported), applied layout data. important note align_* functions consider rows observations. means NROW(data) must return number observations axis used alignment. quad_layout()/ggheatmap(): column annotation, layout data transposed using (data function, applied transposed matrix). necessary column annotation uses heatmap columns observations, need rows. stack_layout()/ggstack(): layout data used since place plots along single axis. Even top bottom annotations, can use rowMeans() calculate mean value across columns.","code":"ggheatmap(small_mat) +     anno_left() +     align_order(rowMeans) #> → heatmap built with `geom_tile()` my_order <- sample(nrow(small_mat)) print(rownames(small_mat)[my_order]) #> [1] \"row3\" \"row1\" \"row7\" \"row6\" \"row2\" \"row8\" \"row9\" \"row5\" \"row4\" ggheatmap(small_mat) +     anno_left() +     align_order(my_order) #> → heatmap built with `geom_tile()` ggheatmap(small_mat) +     anno_left() +     align_order(rownames(small_mat)[my_order]) #> → heatmap built with `geom_tile()` ggheatmap(small_mat) +     anno_left() +     align_order(rowMeans, reverse = TRUE) #> → heatmap built with `geom_tile()` ggheatmap(small_mat) +     anno_top() +     align_order(rowMeans) #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/layout-customize.html","id":"align_kmeans","dir":"Articles","previous_headings":"","what":"align_kmeans","title":"Layout Customization","text":"align_kmeans() function groups heatmap rows columns based k-means clustering. Like previous functions, add plot area.  Note align_* functions define groups must break previous established groups. means new groups must nest old groups, way, usually used groups already exist.","code":"ggheatmap(small_mat) +     anno_top() +     align_kmeans(3L) #> → heatmap built with `geom_tile()` ggheatmap(small_mat) +     anno_top() +     align_group(sample(letters[1:4], ncol(small_mat), replace = TRUE)) +     align_kmeans(3L) #> Error in `initialize()`: #> ! align_kmeans(3L) disrupt the previously established panel groups of #>   the top annotation `stack_align()` ggheatmap(small_mat) +     anno_top() +     align_kmeans(3L) +     align_group(sample(letters[1:4], ncol(small_mat), replace = TRUE)) #> Error in `initialize()`: #> ! align_group(sample(letters[1:4], ncol(small_mat), replace = TRUE)) #>   disrupt the previously established panel groups of the top annotation #>   `stack_align()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/layout-customize.html","id":"align_dendro","dir":"Articles","previous_headings":"","what":"align_dendro","title":"Layout Customization","text":"align_dendro() function adds dendrogram layout can also reorder split layout based hierarchical clustering. particularly useful working heatmap plots.  Hierarchical clustering performed two steps: calculate distance matrix apply clustering. can use distance method argument control dendrogram builind process. two ways specify distance metric clustering: specify distance pre-defined option. valid values supported methods dist() function coorelation coefficient \"pearson\", \"spearman\" \"kendall\". correlation distance defined 1 - cor(x, y, method = distance). self-defined function calculates distance matrix. function contain one argument. Please note clustering columns, matrix transposed automatically.   Method perform hierarchical clustering can specified method. Possible methods supported hclust() function. can also provide self-defined function, accepts distance object return hclust object.  dendrogram can also used cut columns/rows groups. can specify k h, work similarly cutree():  contrast align_group(), align_kmeans(), align_order(), align_dendro() capable drawing plot components. default set_context value TRUE, meaning set active context annotation stack layout. way, can add ggplot elements plot area.  align_dendro() function creates default node data ggplot. See ggplot2 specification ?align_dendro details. Additionally, edge data added ggplote::geom_segment() layer directly, used draw dendrogram tree. One useful variable node edge data branch column, corresponding cutree result:  can reorder dendrogram based mean values observations setting reorder_dendrogram = TRUE.  align_dendro() can also perform clustering groups, meaning can used even existing groups present layout, way, specify k h:  can reorder groups setting reorder_group = TRUE.  can merge sub-tree group settting merge_dendrogram = TRUE.  can reorder dendrogram merge simutaneously.  specify k h, always turn sub-clustering. principle applies align_dendro(), new groups must nested within previously established groups.","code":"ggheatmap(small_mat) +     anno_top() +     align_dendro() #> → heatmap built with `geom_tile()` ggheatmap(small_mat) +     anno_top() +     align_dendro(distance = \"pearson\") +     patch_titles(top = \"pre-defined distance method (1 - pearson)\") #> → heatmap built with `geom_tile()` ggheatmap(small_mat) +     anno_top() +     align_dendro(distance = function(m) dist(m)) +     patch_titles(top = \"a function that calculates distance matrix\") #> → heatmap built with `geom_tile()` ggheatmap(small_mat) +     anno_top() +     align_dendro(method = \"ward.D2\") #> → heatmap built with `geom_tile()` ggheatmap(small_mat) +     anno_top() +     align_dendro(k = 3L) #> → heatmap built with `geom_tile()` ggheatmap(small_mat) +     anno_top() +     align_dendro() +     geom_point(aes(y = y)) #> → heatmap built with `geom_tile()` ggheatmap(small_mat) +     anno_top() +     align_dendro(aes(color = branch), k = 3) +     geom_point(aes(color = branch, y = y)) #> → heatmap built with `geom_tile()` h1 <- ggheatmap(small_mat) +     anno_top() +     align_dendro(aes(color = branch), k = 3, reorder_dendrogram = TRUE) +     ggtitle(\"reorder_dendrogram = TRUE\") h2 <- ggheatmap(small_mat) +     anno_top() +     align_dendro(aes(color = branch), k = 3) +     ggtitle(\"reorder_dendrogram = FALSE\") align_plots(h1, h2) #> → heatmap built with `geom_tile()` #> → heatmap built with `geom_tile()` set.seed(3L) column_groups <- sample(letters[1:3], ncol(small_mat), replace = TRUE) ggheatmap(small_mat) +     anno_top() +     align_group(column_groups) +     align_dendro(aes(color = branch)) #> → heatmap built with `geom_tile()` ggheatmap(small_mat) +     anno_top() +     align_group(column_groups) +     align_dendro(aes(color = branch), reorder_group = TRUE) #> → heatmap built with `geom_tile()` ggheatmap(small_mat) +     anno_top() +     align_group(column_groups) +     align_dendro(aes(color = branch), merge_dendrogram = TRUE) #> → heatmap built with `geom_tile()` ggheatmap(small_mat) +     anno_top() +     align_group(column_groups) +     align_dendro(aes(color = branch),         reorder_group = TRUE,         merge_dendrogram = TRUE     ) +     anno_bottom() +     align_dendro(aes(color = branch),         reorder_group = FALSE,         merge_dendrogram = TRUE     ) #> → heatmap built with `geom_tile()` ggheatmap(small_mat) +     anno_top() +     align_group(column_groups) +     align_dendro(k = 2L) #> Error in `initialize()`: #> ! align_dendro(k = 2L) disrupt the previously established panel groups #>   of the top annotation `stack_align()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/layout-customize.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Layout Customization","text":"","code":"sessionInfo() #> R version 4.4.2 (2024-10-31) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.5 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggalign_0.0.5.9000 ggplot2_3.5.1      #>  #> loaded via a namespace (and not attached): #>  [1] vctrs_0.6.5       cli_3.6.3         knitr_1.49        rlang_1.1.4       #>  [5] xfun_0.49         generics_0.1.3    textshaping_0.4.0 jsonlite_1.8.9    #>  [9] labeling_0.4.3    glue_1.8.0        colorspace_2.1-1  htmltools_0.5.8.1 #> [13] ragg_1.3.3        sass_0.4.9        fansi_1.0.6       scales_1.3.0      #> [17] rmarkdown_2.29    grid_4.4.2        tibble_3.2.1      evaluate_1.0.1    #> [21] munsell_0.5.1     jquerylib_0.1.4   fastmap_1.2.0     yaml_2.3.10       #> [25] lifecycle_1.0.4   compiler_4.4.2    dplyr_1.1.4       fs_1.6.5          #> [29] pkgconfig_2.0.3   farver_2.1.2      systemfonts_1.1.0 digest_0.6.37     #> [33] R6_2.5.1          tidyselect_1.2.1  utf8_1.2.4        pillar_1.9.0      #> [37] magrittr_2.0.3    bslib_0.8.0       withr_3.0.2       tools_4.4.2       #> [41] gtable_0.3.6      pkgdown_2.1.1     cachem_1.1.0      desc_1.4.3"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/layout-plot.html","id":"align_ggggalign","dir":"Articles","previous_headings":"","what":"align_gg/ggalign","title":"Layout Plots","text":"align_gg() similar ggplot initializes ggplot data mapping. align_* functions. align_gg() allowing provide data various formats, including matrices, data frames, simple vectors. default, inherit layout. function, apply layout matrix. align_gg() always applies default mapping axis data index layout. mapping aes(y = .data$.y) horizontal stacking (including left right quad layout annotation) aes(x = .data$.x) vertical stacking (including top bottom quad layout annotation). information, refer “ggplot2 Specification” section align_gg() documentation. can also use ggalign() function, alias align_gg(). data underlying ggplot object contain following columns: .panel: panel aligned axis. means x-axis vertical stack layout (including top bottom annotation), y-axis horizontal stack layout (including left right annotation). .x .y: x y coordinates. .names .index: factor names (applicable names exists) integer index original data. .row_names .row_index: row names integer row index original matrix (applicable data matrix). .column_names .column_index: column names column index original matrix (applicable data matrix). value: actual value (applicable data matrix atomic vector). recommended use .x/.y, .names x/y mapping.  data = NULL, data underlying ggplot object contains following columns: .panel: panel axis used alignment. .index: index original layout data. .x .y: x y coordinates can use integrate additional elements, block annotation customized panel title, layout.","code":"ggheatmap(small_mat) +     scale_fill_viridis_c(guide = \"none\") +     anno_top() +     ggalign(data = rowSums) +     geom_point(aes(y = value)) #> → heatmap built with `geom_tile()` ggheatmap(small_mat) +     anno_top(size = unit(1, \"cm\")) +     align_kmeans(centers = 3L) +     ggalign(data = NULL) +     plot_data(~ aggregate(.x ~ .panel, .x, FUN = median)) +     geom_tile(aes(y = 1L, fill = .panel, color = .panel)) +     geom_text(aes(y = 1L, label = .panel)) #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/layout-plot.html","id":"cross-panel-sumamry","dir":"Articles","previous_headings":"align_gg/ggalign","what":"Cross panel sumamry","title":"Layout Plots","text":"used ggheatmap(), data inherited ggheatmap(), special column .extra_panel added, panel information column (left right annotation) row (top bottom annotation). useful want create summary plot using another axis panel. cases, ’s often necessary disable automatic setting limits (limits = FALSE ggalign()).  approach replicates functionality ComplexHeatmap::anno_summary(), versatile enough used heatmap, just single-column single-row heatmaps.","code":"set.seed(1L) v <- stats::rnorm(50L) split <- sample(letters[1:2], 50L, replace = TRUE) ggheatmap(v) +     theme(strip.text = element_text(), strip.background = element_rect()) +     anno_right() +     align_group(split) +     anno_top(size = 0.5) +     ggalign(limits = FALSE) +     geom_boxplot(aes(.extra_panel, value, fill = .extra_panel),         # here, we use `print()` to show the underlying data         data = function(data) {             print(head(data))             data         }     ) +     scale_fill_brewer(palette = \"Dark2\", name = \"branch\") #> → heatmap built with `geom_tile()` #>   .row_index .column_index      value .index .panel .x .extra_panel #> 1          1             1 -0.6264538      1      1  1            b #> 2          1             2  0.1836433      1      1  1            b #> 3          1             3 -0.8356286      1      1  1            b #> 4          1             4  1.5952808      1      1  1            a #> 5          1             5  0.3295078      1      1  1            a #> 6          1             6 -0.8204684      1      1  1            a ggheatmap(small_mat) +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     anno_top() +     align_dendro(aes(color = branch), k = 3L) +     scale_color_brewer(palette = \"Dark2\") +     anno_right(size = 0.5) +     ggalign(limits = FALSE) +     geom_boxplot(aes(y = .extra_panel, x = value, fill = factor(.extra_panel))) +     scale_fill_brewer(palette = \"Dark2\", name = \"branch\") #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/layout-plot.html","id":"plot-titles","dir":"Articles","previous_headings":"align_gg/ggalign","what":"Plot titles","title":"Layout Plots","text":"ggplot2 allow add titles top add caption bottom. ggalign package extends capability, allowing place titles around border plot using patch_titles() function.","code":"ggheatmap(small_mat) +     patch_titles(left = \"left patch title\", bottom = \"bottom patch title\") +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     anno_top() +     align_dendro(aes(color = branch), k = 3L) +     scale_color_brewer(palette = \"Dark2\") +     patch_titles(top = \"top patch title\") +     anno_right(size = 0.5) +     ggalign(limits = FALSE) +     geom_boxplot(aes(y = .extra_panel, x = value, fill = factor(.extra_panel))) +     scale_fill_brewer(palette = \"Dark2\", name = \"branch\") +     patch_titles(right = \"right patch title\") #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/layout-plot.html","id":"free_ggggfree","dir":"Articles","previous_headings":"","what":"free_gg/ggfree","title":"Layout Plots","text":"free_gg() function allows incorporate ggplot object layout. Unlike align_gg(), aligns every axis value precisely, free_gg() focuses layout integration without enforcing strict axis alignment. ggfree() alias free_gg. Internally, function uses fortify_data_frame() transform input data frame. matrices, converts long-formatted data frame. Note ggfree() provide default aesthetic mapping, contrasts ggalign(). need manually provide default mappings. annotations ggheatmap() stack_align(). used stack_align(), typically want inherit layout matrix input data frame manually. data argument must explicitly provided, comes ..., rarely used stack_align().  commonly used stack_free(), usually want inherit layout data frame. annotations ggside() stack_free().  Alternatively, can directly input ggplot object.  can also add ggplot object directly without using ggfree(). However, limit control plot (like plot area size, active components):","code":"ggheatmap(small_mat) +     anno_top() +     ggfree(aes(wt, mpg), data = mtcars) +     geom_point() #> → heatmap built with `geom_tile()` ggside(mpg, aes(displ, hwy, colour = class)) +     geom_point(size = 2) +     anno_top(size = 0.3) +     ggfree() +     geom_density(aes(displ, y = after_stat(density), colour = class), position = \"stack\") +     anno_right(size = 0.3) +     ggfree() +     geom_density(aes(x = after_stat(density), hwy, colour = class),         position = \"stack\"     ) +     theme(axis.text.x = element_text(angle = 90, vjust = .5)) ggheatmap(small_mat) +     anno_top() +     ggfree(data = ggplot(mtcars, aes(wt, mpg))) +     geom_point() #> → heatmap built with `geom_tile()` ggheatmap(small_mat) +     anno_top() +     ggplot(mtcars, aes(wt, mpg)) +     geom_point() #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/layout-plot.html","id":"ggwrap-and-inset","dir":"Articles","previous_headings":"","what":"ggwrap() and inset()","title":"Layout Plots","text":"ggwrap() function allows wrap objects can converted grob, turning ggplot plotting. can still add ggplot elements like title, subtitle, tag, caption, geoms using approach normal ggplots (using ggtitle(), labs(), geom_*()) well styling using theme(). enables pass wrapped objects ggfree(). can also integrate base plots, pheatmap, ComplexHeatmap, e.g. Additionally, can add graphics inset ggplot using inset() function. Like ggwrap(), inset() can accept object can converted grob.","code":"library(grid) ggheatmap(small_mat) +     anno_top() +     # `ggwrap()` will create a `ggplot` object, we use `ggfree` to add it into the layout     ggfree(data = ggwrap(rectGrob(gp = gpar(fill = \"goldenrod\")), align = \"full\")) #> → heatmap built with `geom_tile()` ggheatmap(small_mat) +     anno_top() +     ggfree(data = ggwrap(rectGrob(gp = gpar(fill = \"goldenrod\")), align = \"full\")) +     # we can then add any inset grobs (the same as ggwrap, it can take any objects     # which can be converted to a `grob`)     inset(rectGrob(gp = gpar(fill = \"steelblue\")), align = \"panel\") +     inset(textGrob(\"Here are some text\", gp = gpar(color = \"black\")),         align = \"panel\"     ) #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/layout-plot.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Layout Plots","text":"","code":"sessionInfo() #> R version 4.4.2 (2024-10-31) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.5 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] grid      stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #> [1] ggalign_0.0.5.9000 ggplot2_3.5.1      #>  #> loaded via a namespace (and not attached): #>  [1] gtable_0.3.6       jsonlite_1.8.9     dplyr_1.1.4        compiler_4.4.2     #>  [5] tidyselect_1.2.1   jquerylib_0.1.4    systemfonts_1.1.0  scales_1.3.0       #>  [9] textshaping_0.4.0  yaml_2.3.10        fastmap_1.2.0      R6_2.5.1           #> [13] labeling_0.4.3     generics_0.1.3     knitr_1.49         tibble_3.2.1       #> [17] desc_1.4.3         munsell_0.5.1      RColorBrewer_1.1-3 bslib_0.8.0        #> [21] pillar_1.9.0       rlang_1.1.4        utf8_1.2.4         cachem_1.1.0       #> [25] xfun_0.49          fs_1.6.5           sass_0.4.9         viridisLite_0.4.2  #> [29] cli_3.6.3          pkgdown_2.1.1      withr_3.0.2        magrittr_2.0.3     #> [33] digest_0.6.37      lifecycle_1.0.4    vctrs_0.6.5        evaluate_1.0.1     #> [37] glue_1.8.0         farver_2.1.2       ragg_1.3.3         fansi_1.0.6        #> [41] colorspace_2.1-1   rmarkdown_2.29     tools_4.4.2        pkgconfig_2.0.3    #> [45] htmltools_0.5.8.1"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/more-examples.html","id":"add-more-information-for-gene-expression-matrix","dir":"Articles","previous_headings":"","what":"Add more information for gene expression matrix","title":"ComplexHeatmap: more examples","text":"","code":"expr <- read_example(\"gene_expression.rds\") mat <- as.matrix(expr[, grep(\"cell\", colnames(expr))]) base_mean <- rowMeans(mat) mat_scaled <- t(apply(mat, 1, scale)) type <- gsub(\"s\\\\d+_\", \"\", colnames(mat))  heat1 <- ggheatmap(mat_scaled) -     plot_align(free_spaces = \"l\") +     scale_y_continuous(breaks = NULL) +     scale_fill_viridis_c(option = \"magma\") +     # add dendrogram for this heatmap     anno_top() +     align_dendro() +     # add a block for the heatmap column     ggalign(data = type, size = unit(1, \"cm\")) +     geom_tile(aes(y = 1, fill = factor(value))) +     scale_y_continuous(breaks = NULL, name = NULL) +     scale_fill_brewer(         palette = \"Set1\", name = \"type\",         guide = guide_legend(position = \"top\")     )  heat2 <- ggheatmap(base_mean, width = unit(2, \"cm\")) +     scale_y_continuous(breaks = NULL) +     scale_x_continuous(name = \"base mean\", breaks = FALSE) +     scale_fill_gradientn(colours = c(\"#2600D1FF\", \"white\", \"#EE3F3FFF\")) +     # set the active context of the heatmap to the top     # and set the size of the top stack     anno_top(size = unit(4, \"cm\")) +     # add box plot in the heatmap top     ggalign() +     geom_boxplot(aes(y = value, fill = factor(.extra_panel))) +     scale_x_continuous(expand = expansion(), breaks = NULL) +     scale_fill_brewer(         palette = \"Dark2\", name = \"base mean\",         guide = guide_legend(position = \"top\")     ) +     theme(axis.title.y = element_blank())  heat3 <- ggheatmap(expr$type, width = unit(2, \"cm\")) +     scale_fill_brewer(palette = \"Set3\", name = \"gene type\") +     scale_x_continuous(breaks = NULL, name = \"gene type\") +     # add barplot in the top annotation, and remove the spaces in the y-axis     anno_top() -     plot_align(free_spaces = \"lr\") +     ggalign(limits = FALSE) +     geom_bar(         aes(.extra_panel, fill = factor(value)),         position = position_fill()     ) +     scale_y_continuous(expand = expansion()) +     scale_fill_brewer(palette = \"Set3\", name = \"gene type\", guide = \"none\") -     plot_theme(plot.margin = margin())  stack_alignh(mat_scaled) +     stack_active(sizes = c(0.2, 1, 1)) +     # group stack rows into 5 groups     align_kmeans(centers = 5L) +     # add a block plot for each group in the stack     ggalign(size = unit(1, \"cm\"), data = NULL) +     geom_tile(aes(x = 1, fill = factor(.panel))) +     scale_fill_brewer(palette = \"Dark2\", name = \"Kmeans group\") +     scale_x_continuous(breaks = NULL, name = NULL) +     # add a heatmap plot in the stack     heat1 +     # add another heatmap in the stack     heat2 +     # we move into the stack layout     stack_active() +     # add a point plot     ggalign(data = expr$length, size = unit(2, \"cm\")) +     geom_point(aes(x = value)) +     labs(x = \"length\") +     theme(         panel.border = element_rect(fill = NA),         axis.text.x = element_text(angle = -60, hjust = 0)     ) +     # add another heatmap     heat3 &     theme(         plot.background = element_blank(),          panel.background = element_blank(),         legend.background = element_blank()     ) #> → heatmap built with `geom_tile()` #> → heatmap built with `geom_tile()` #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/more-examples.html","id":"the-measles-vaccine-heatmap","dir":"Articles","previous_headings":"","what":"The measles vaccine heatmap","title":"ComplexHeatmap: more examples","text":"","code":"mat <- read_example(\"measles.rds\") ggheatmap(mat, filling = FALSE) +     geom_tile(aes(fill = value), color = \"white\") +     scale_fill_gradientn(         colours = c(\"white\", \"cornflowerblue\", \"yellow\", \"red\"),         values = scales::rescale(c(0, 800, 1000, 127000), c(0, 1))     ) +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     anno_right() +     align_dendro(plot_dendrogram = FALSE) +     anno_top(size = unit(2, \"cm\")) +     ggalign(data = rowSums) +     geom_bar(aes(y = value), fill = \"#FFE200\", stat = \"identity\") +     scale_y_continuous(expand = expansion()) +     ggtitle(\"Measles cases in US states 1930-2001\\nVaccine introduced 1961\") +     theme(plot.title = element_text(hjust = 0.5)) +     anno_right(size = unit(2, \"cm\")) +     ggalign(data = rowSums) +     geom_bar(aes(x = value),         fill = \"#FFE200\", stat = \"identity\",         orientation = \"y\"     ) +     scale_x_continuous(expand = expansion()) +     theme(axis.text.x = element_text(angle = -60, hjust = 0))"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/more-examples.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"ComplexHeatmap: more examples","text":"","code":"sessionInfo() #> R version 4.4.2 (2024-10-31) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.5 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggalign_0.0.5.9000 ggplot2_3.5.1      #>  #> loaded via a namespace (and not attached): #>  [1] gtable_0.3.6       jsonlite_1.8.9     dplyr_1.1.4        compiler_4.4.2     #>  [5] tidyselect_1.2.1   jquerylib_0.1.4    systemfonts_1.1.0  scales_1.3.0       #>  [9] textshaping_0.4.0  yaml_2.3.10        fastmap_1.2.0      R6_2.5.1           #> [13] labeling_0.4.3     generics_0.1.3     knitr_1.49         tibble_3.2.1       #> [17] desc_1.4.3         munsell_0.5.1      bslib_0.8.0        pillar_1.9.0       #> [21] RColorBrewer_1.1-3 rlang_1.1.4        utf8_1.2.4         cachem_1.1.0       #> [25] xfun_0.49          fs_1.6.5           sass_0.4.9         viridisLite_0.4.2  #> [29] cli_3.6.3          pkgdown_2.1.1      withr_3.0.2        magrittr_2.0.3     #> [33] digest_0.6.37      grid_4.4.2         lifecycle_1.0.4    vctrs_0.6.5        #> [37] evaluate_1.0.1     glue_1.8.0         farver_2.1.2       ragg_1.3.3         #> [41] fansi_1.0.6        colorspace_2.1-1   rmarkdown_2.29     tools_4.4.2        #> [45] pkgconfig_2.0.3    htmltools_0.5.8.1"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/oncoplot.html","id":"ggoncoplot","dir":"Articles","previous_headings":"","what":"ggoncoplot","title":"Oncoplot","text":"ggoncoplot() function generates oncoPrint visualizations display genetic alterations matrix format. function especially useful visualizing complex genomic data, mutations, copy number variations, genomic alterations cancer research.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/oncoplot.html","id":"input-data","dir":"Articles","previous_headings":"","what":"Input data","title":"Oncoplot","text":"input character matrix encodes alterations, can use string \";\", \":\", \",\", \"|\" separate multiple alterations. Internally, ggoncoplot() use fortify_matrix() get matrix. basic oncoprint can generated follows:","code":"mat <- read.table(     textConnection(         \"s1,s2,s3          g1,snv;indel,snv,indel          g2,,snv;indel,snv          g3,snv,,indel;snv\"     ),     row.names = 1, header = TRUE, sep = \",\", stringsAsFactors = FALSE ) mat #>                    s1        s2        s3 #>          g1 snv;indel       snv     indel #>          g2           snv;indel       snv #>          g3       snv           indel;snv library(ggalign) #> Loading required package: ggplot2 ggoncoplot(mat)"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/oncoplot.html","id":"oncoprint-customization","dir":"Articles","previous_headings":"","what":"oncoPrint Customization","title":"Oncoplot","text":"default, alterations represented tiles equal width height, may lead overlapping. can control width height tiles using map_width map_height arguments (introduce another effective ways handle Specialized Geoms section):  default, empty string converted NA value ggplot2 translate NA values render legend. prevent , can turn translation using na.translate = FALSE:  function automatically reorders rows columns based alteration frequency. Disable reorder_row = FALSE reorder_column = FALSE. can customize layouts using methods vignette(\"layout-customize\").","code":"ggoncoplot(mat, map_width = c(snv = 0.5), map_height = c(indel = 0.9)) ggoncoplot(mat, map_width = c(snv = 0.5), map_height = c(indel = 0.9)) +     scale_fill_brewer(palette = \"Dark2\", na.translate = FALSE) ggoncoplot(mat,     map_width = c(snv = 0.5), map_height = c(indel = 0.9),     reorder_row = FALSE, reorder_column = FALSE ) +     scale_fill_brewer(palette = \"Dark2\", na.translate = FALSE)"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/oncoplot.html","id":"advanced-data-handling","dir":"Articles","previous_headings":"","what":"Advanced Data Handling","title":"Oncoplot","text":"ggoncoplot() built ggheatmap() default plot_data() (see vignette(\"plot-options\") details), splits alterations separate entries visualization. (See ggplot2 specification section ggheatmap() input data plot_data()):  default, plot_data() inherited parent layout data plot inherited layout. can apply parent plot_data() first apply another transformation setting inherit = TRUE. functionality especially useful working ggoncoplot().","code":"pdata <- function(data) {     tidyr::separate_longer_delim(data,         cols = value,         delim = stringr::regex(\"\\\\s*[;:,|]\\\\s*\")     ) } # Note: this figure will contain an empty string value. # # `ggoncoplot()` will automatically convert any empty strings to `NA` # before pass it to `ggheatmap`. ggheatmap(mat) -     plot_data(pdata) +     scale_fill_brewer(palette = \"Dark2\", na.translate = FALSE) #> → heatmap built with `geom_tile()` ggoncoplot(mat, map_width = c(snv = 0.5), map_height = c(indel = 0.9)) +     anno_top(size = 0.2) +     ggalign() +     # by setting `inherti = TRUE`, we apply the parent layout `plot_data()`     # (from the `ggoncoplot()` layout) firstly, which will split the alteration     # string and unnested the columns.     # Here: We then remove `NA` value     plot_data(~ subset(.x, !is.na(value)), inherit = TRUE) +     geom_bar(aes(.x, after_stat(count), fill = value)) +     # note: `ggoncoplot()` use `geom_tile()` to draw the oncoPrint,     # the guide is different from `geom_bar()`, though both looks     # like the same, we remove the guide of `geom_bar()` plot     guides(fill = \"none\") &     scale_fill_brewer(palette = \"Dark2\", na.translate = FALSE)"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/oncoplot.html","id":"integration-with-maftools","dir":"Articles","previous_headings":"","what":"Integration with maftools","title":"Oncoplot","text":"ggoncoplot() function supports MAF objects maftools package using fortify_matrix.MAF() method. includes options control data generation ggoncoplot(), drawing top n_top genes.  default, samples without alterations selected genes removed. include samples, set remove_empty_samples = FALSE:","code":"# load data from `maftools` laml.maf <- system.file(\"extdata\", \"tcga_laml.maf.gz\", package = \"maftools\") # clinical information containing survival information and histology. This is optional laml.clin <- system.file(\"extdata\", \"tcga_laml_annot.tsv\", package = \"maftools\") laml <- maftools::read.maf(     maf = laml.maf,     clinicalData = laml.clin,     verbose = FALSE ) # Visualizing the Top 20 Genes ggoncoplot(laml, n_top = 20) +     scale_fill_brewer(palette = \"Dark2\", na.translate = FALSE) +     theme_no_axes(\"x\") align_plots(     ggoncoplot(laml, n_top = 20L, remove_empty_samples = FALSE) +         scale_fill_brewer(palette = \"Dark2\", na.translate = FALSE) +         theme_no_axes(\"x\") +         ggtitle(\"Keep empty samples\"),     ggoncoplot(laml, n_top = 20L, remove_empty_samples = TRUE) +         scale_fill_brewer(palette = \"Dark2\", na.translate = FALSE) +         theme_no_axes(\"x\") +         ggtitle(\"Remove empty samples\"),     ncol = 1L,     guides = \"tlbr\" )"},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/oncoplot.html","id":"geom_subtile","dir":"Articles","previous_headings":"Specialized Geoms","what":"geom_subtile()","title":"Oncoplot","text":"multiple alterations occur sample gene, combined single value, \"Multi_Hit\", default. visualize alterations separately, can set collapse_vars = FALSE. However, can lead overlapping alterations within cell, making visualization cluttered hard interpret. cases, disabling default filling defining custom heatmap layer geom_subtile() effective. function subdivides cell smaller rectangles, allowing distinct alterations clearly displayed.  focus exclusively cells multiple alterations highlight differences, filtering data applying geom_subtile():","code":"ggoncoplot(laml, n_top = 20, collapse_vars = FALSE, filling = FALSE) +     geom_subtile(aes(fill = value), direction = \"vertical\") +     scale_fill_brewer(palette = \"Dark2\", na.translate = FALSE) +     theme_no_axes(\"x\") #> `geom_subtile()` subdivide tile into a maximal of 3 rectangles ggoncoplot(laml, n_top = 20, collapse_vars = FALSE, filling = FALSE) +     plot_data(function(data) {         dplyr::filter(data, dplyr::n() > 1L, .by = c(\".x\", \".y\"))         # we apply the parent layout `plot_data()` first (`inherit = TRUE`),         # which will split the alteration string and unnested the columns.     }, inherit = TRUE) +     geom_subtile(aes(fill = value), direction = \"vertical\") +     scale_fill_brewer(palette = \"Dark2\", na.translate = FALSE) +     theme_no_axes(\"x\") #> `geom_subtile()` subdivide tile into a maximal of 3 rectangles"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/oncoplot.html","id":"geom_draw","dir":"Articles","previous_headings":"Specialized Geoms","what":"geom_draw()","title":"Oncoplot","text":"geom_subtile() often suffices scenarios. However, require strategy similar ComplexHeatmap, consider using geom_draw(), offers greater flexibility complex customizations. Key Features geom_draw(): Custom Drawing Logic: Accepts draw aesthetic, allowing cell rendered specific graphical object (grob). Manual Scaling: Requires scale_draw_manual() map draw values corresponding drawing functions. Flexible Aesthetic Mapping: Functions mapped scale_draw_manual() can utilize number ggplot2 aesthetics output custom graphical objects (grob). Beyond x, y, xmin, xmax, width, height aesthetics, may want rely solely mapped aesthetics (aes()). Unmapped aesthetics default ggplot2’s behavior, might produce desired outcome. always use native unit. :) Sorry, deal pretty example , function provided values argument scale_draw_manual operates similarly alter_fun ComplexHeatmap. Currently, geom_subtile() performs well enough cases, making geom_draw() somewhat cumbersome use. Managing alteration types, especially case overlapping alterations, requires meticulous design ensure visual elements interfere .","code":"library(grid) draw_mapping <- list(     function(x, y, width, height, fill) {         rectGrob(x, y,             width = width, height = height,             gp = gpar(fill = fill),             default.units = \"native\"         )     },     function(x, y, width, height, fill) {         rectGrob(x, y,             width = width, height = height,             gp = gpar(fill = fill),             default.units = \"native\"         )     },     function(x, y, width, height, fill) {         rectGrob(x, y,             width = width, height = height,             gp = gpar(fill = fill),             default.units = \"native\"         )     },     function(x, y, width, height, shape) {         gList(             pointsGrob(x, y, pch = shape),             # To ensure the rectangle color is shown in the legends, you             # must explicitly provide a color argument and include it in             # the `gpar()` of the graphical object             rectGrob(x, y, width, height,                 gp = gpar(col = \"black\", fill = NA)             )         )     },     function(xmin, xmax, ymin, ymax) {         segmentsGrob(             xmin, ymin,             xmax, ymax,             gp = gpar(lwd = 2)         )     } ) ggplot(data.frame(value = letters[seq_len(5)], y = seq_len(5))) +     geom_draw(aes(x = 1, y = y, draw = value, fill = value)) +     scale_draw_manual(values = draw_mapping) +     scale_fill_brewer(palette = \"Dark2\") value <- sample(letters, 5L) ggplot(data.frame(value = c(value, value[5L]), y = c(1, 2, 3, 1, 2, 3))) +     geom_draw(aes(x = 1, y = y, draw = value, fill = value)) +     scale_draw_manual(values = draw_mapping) +     scale_fill_brewer(palette = \"Dark2\")"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/oncoplot.html","id":"ggalign-attributes","dir":"Articles","previous_headings":"","what":"ggalign attributes","title":"Oncoplot","text":"Except data used main plot, fortify_matrix.MAF() also attaches several useful attributes. gene_summary: gene summary informations. See maftools::getGeneSummary() details. sample_summary: sample summary informations. See maftools::getSampleSummary() details. sample_anno: sample clinical informations. See maftools::getClinicalData() details. n_genes: Total genes. n_samples: Total samples. titv: list data.frames Transitions Transversions summary. See maftools::titv() details. can extract attributes using ggalign_attr() function. example extract sample summary data (e.g., TMB) using ggalign_attr() add top annotation oncoplot:  can draw example maftools vignette.","code":"ggoncoplot(laml, n_top = 20, collapse_vars = FALSE, filling = FALSE) +     geom_subtile(aes(fill = value), direction = \"vertical\") +     theme_no_axes(\"x\") +     anno_top(size = 0.2) +     ggalign(data = function(data) {         data <- ggalign_attr(data, \"sample_summary\")         # matrix input will be automatically melted into a long foramted data         # frame in `ggalign()` function.         as.matrix(data[2:(ncol(data) - 1L)])     }) +     geom_bar(aes(.x, value, fill = .column_names),         stat = \"identity\"     ) +     ylab(\"TMB\") &     scale_fill_brewer(palette = \"Dark2\", na.translate = FALSE) #> `geom_subtile()` subdivide tile into a maximal of 3 rectangles ggoncoplot(laml, n_top = 20, collapse_vars = FALSE, filling = FALSE) +     geom_subtile(aes(fill = value), direction = \"vertical\") +     theme_no_axes(\"x\") +     # since legends from geom_tile (oncoPrint body) and `geom_bar`     # is different, though both looks like the same, the internal     # won't merge the legends. we remove the legends of oncoPrint body     guides(fill = \"none\") +     # add top annotation     anno_top(size = 0.2) +     ggalign(data = function(data) {         data <- ggalign_attr(data, \"sample_summary\")         # matrix input will be automatically melted into a long foramted data         # frame in `ggalign()` function.         as.matrix(data[2:(ncol(data) - 1L)])     }) +     geom_bar(aes(.x, value, fill = .column_names),         stat = \"identity\"     ) +     ylab(\"TMB\") +     # add right annotation     anno_right(size = 0.2) -     # remove bottom spaces of the right annotation when aligning     plot_align(free_spaces = \"b\") +     # add the text percent for the alterated samples in the right annotation     ggalign(data = function(data) {         # Atomic vector will be put in the `value` column of the data frame.         ggalign_attr(data, \"gene_summary\")$AlteredSamples /             ggalign_attr(data, \"n_samples\")     }) +     geom_text(aes(1, label = scales::label_percent()(value)), hjust = 1) +     scale_x_continuous(         expand = expansion(),         name = NULL, breaks = NULL,         limits = c(0, 1)     ) +     theme(plot.margin = margin()) +     # add the bar plot in the right annotation     ggalign(data = function(data) {         data <- ggalign_attr(data, \"gene_summary\")         # matrix input will be automatically melted into a long foramted data         # frame in `ggalign()` function.         as.matrix(data[2:8])     }) +     geom_bar(aes(value, fill = .column_names),         stat = \"identity\",         orientation = \"y\"     ) +     xlab(\"No. of samples\") -     # we apply the scale mapping to the top and right annotation: `position = \"tr\"`     # and the main plot: `main = TRUE`     with_quad(         scale_fill_brewer(\"Mutations\",             palette = \"Dark2\", na.translate = FALSE         ),         position = \"tr\",         main = TRUE     ) +     # add bottom annotation     anno_bottom(size = 0.2) +     # add bar plot in the bottom annotation     ggalign(data = function(data) {         data <- ggalign_attr(data, \"titv\")$fraction.contribution         # matrix input will be automatically melted into a long foramted data         # frame in `ggalign()` function.         as.matrix(data[2:7])     }) +     geom_bar(aes(y = value, fill = .column_names), stat = \"identity\") +     ylab(\"Ti/Tv\") +     scale_fill_brewer(\"Ti/Tv\", palette = \"Set2\") #> `geom_subtile()` subdivide tile into a maximal of 3 rectangles #> Warning: Removed 24 rows containing missing values or values outside the scale range #> (`geom_bar()`)."},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/oncoplot.html","id":"integration-with-gistic-results-from-maftools","dir":"Articles","previous_headings":"","what":"Integration with GISTIC results from maftools","title":"Oncoplot","text":"package also includes fortify_matrix.GISTIC() method designed handle GISTIC objects maftools package. allows seamlessly apply operations visualize GISTIC results. following ggalign attributes generated part analysis: sample_anno: sample clinical informations provided sample_anno argument. sample_summary: sample copy number summary informations. See data@cnv.summary details. cytoband_summary: cytoband summary informations. See data@cytoband.summary details. gene_summary: gene summary informations. See data@gene.summary details. summary: data frame summary information. See data@summary details.","code":"# Ensure the maftools package is installed and load the example GISTIC data all.lesions <- system.file(\"extdata\", \"all_lesions.conf_99.txt\", package = \"maftools\") amp.genes <- system.file(\"extdata\", \"amp_genes.conf_99.txt\", package = \"maftools\") del.genes <- system.file(\"extdata\", \"del_genes.conf_99.txt\", package = \"maftools\") scores.gistic <- system.file(\"extdata\", \"scores.gistic\", package = \"maftools\") laml.gistic <- maftools::readGistic(     gisticAllLesionsFile = all.lesions, gisticAmpGenesFile = amp.genes,     gisticDelGenesFile = del.genes, gisticScoresFile = scores.gistic ) #> -Processing Gistic files.. #> --Processing amp_genes.conf_99.txt #> --Processing del_genes.conf_99.txt #> --Processing scores.gistic #> --Summarizing by samples ggoncoplot(laml.gistic) +     scale_fill_brewer(\"CNV\", palette = \"Dark2\", na.translate = FALSE) +     theme_no_axes(\"x\")"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/oncoplot.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Oncoplot","text":"","code":"sessionInfo() #> R version 4.4.2 (2024-10-31) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.5 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] grid      stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #> [1] ggalign_0.0.5.9000 ggplot2_3.5.1      #>  #> loaded via a namespace (and not attached): #>  [1] sass_0.4.9         utf8_1.2.4         generics_0.1.3     tidyr_1.3.1        #>  [5] maftools_2.22.0    lattice_0.22-6     stringi_1.8.4      digest_0.6.37      #>  [9] magrittr_2.0.3     evaluate_1.0.1     RColorBrewer_1.1-3 fastmap_1.2.0      #> [13] R.oo_1.27.0        Matrix_1.7-1       jsonlite_1.8.9     R.utils_2.12.3     #> [17] survival_3.7-0     purrr_1.0.2        fansi_1.0.6        scales_1.3.0       #> [21] textshaping_0.4.0  jquerylib_0.1.4    cli_3.6.3          rlang_1.1.4        #> [25] R.methodsS3_1.8.2  munsell_0.5.1      splines_4.4.2      withr_3.0.2        #> [29] cachem_1.1.0       yaml_2.3.10        DNAcopy_1.80.0     tools_4.4.2        #> [33] dplyr_1.1.4        colorspace_2.1-1   vctrs_0.6.5        R6_2.5.1           #> [37] lifecycle_1.0.4    stringr_1.5.1      fs_1.6.5           ragg_1.3.3         #> [41] pkgconfig_2.0.3    desc_1.4.3         pkgdown_2.1.1      pillar_1.9.0       #> [45] bslib_0.8.0        gtable_0.3.6       glue_1.8.0         data.table_1.16.2  #> [49] systemfonts_1.1.0  xfun_0.49          tibble_3.2.1       tidyselect_1.2.1   #> [53] knitr_1.49         farver_2.1.2       htmltools_0.5.8.1  rmarkdown_2.29     #> [57] labeling_0.4.3     compiler_4.4.2"},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/operator.html","id":"addition-operator","dir":"Articles","previous_headings":"Operators","what":"Addition operator","title":"Operator","text":"+: adds elements active plot active layout. + operator straightforward used needed. quad_layout() (ggheatmap()/ggside()), four nested layouts available annotations: top, left, bottom, right. active annotation set, quad_layout() (ggheatmap()/ggside()) treat active layout. Since one main plot quad_layout() (ggheatmap()/ggside()), main plot always treated active plot context.  ggstack()/stack_layout(), nested layout occur pass quad_layout() ggstack()/stack_layout(). active plot within ggstack()/stack_layout() quad_layout(), quad_layout() treated active layout, + operator add elements , following principles quad_layout(). Otherwise, ggstack()/stack_layout() treated active layout, + operator add elements directly plot.","code":"# Initialize the heatmap; by default, no active annotation will be set. # The active layout is the heatmap layout, and the active plot in the layout is # the main plot. ggheatmap(small_mat) +     # Add elements to the main plot     scale_fill_viridis_c() +     # Change the active layout to the left annotation     anno_left(size = 0.2) +     # Add a dendrogram in the left annotation     align_dendro() +     # Change the active layout to the right annotation     anno_right(size = 0.2) +     # Add a dendrogram in the right annotation     align_dendro() #> → heatmap built with `geom_tile()` stack_alignh(small_mat) +     # the dendrogram will be added to the stack     align_dendro() +     # Add elements to the dendrogram     geom_point() +     # add a heamtap layout to the stack     ggheatmap() +     # the active layout is the heamtap layout     # so following elements will be added to the heatmap layout     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     anno_right() +     align_dendro() #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/operator.html","id":"logical-and-operator","dir":"Articles","previous_headings":"Operators","what":"logical AND operator","title":"Operator","text":"&: applies elements plots layout. & operator works similarly patchwork, applying element across plots layout. Since & lower precedence +, ’s generally best use end expression wrap parentheses needed.","code":"# Initialize the heatmap ggheatmap(small_mat) +     # initialize the left annotation     anno_left(size = 0.2) +     # Add a dendrogram in the left annotation and split the dendrogram into 3 groups     align_dendro(aes(color = branch), k = 3L) +     anno_right(size = 0.2) +     # Add a dendrogram in the right annotation and split the dendrogram into 3 groups     align_dendro(aes(color = branch), k = 3L) &     # Set color scale for all plots     scale_color_brewer(palette = \"Dark2\") #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/operator.html","id":"subtraction-operator","dir":"Articles","previous_headings":"Operators","what":"Subtraction operator","title":"Operator","text":"- operator powerful + operator, enabling flexible addition elements multiple plots. use might initially seem unintuitive, reason behind - shares precedence group +, allows seamlessly combine +.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/operator.html","id":"quad_layout","dir":"Articles","previous_headings":"Operators > Subtraction operator","what":"quad_layout()","title":"Operator","text":"active layout ggheatmap()/quad_layout() , - operator behaves similarly &. applies specified elements plots within layout.  active layout annotation stack, - operator add elements plots active annotation stack:","code":"# Initialize the heatmap ggheatmap(small_mat) +     # initialize the left annotation     anno_left(size = 0.2) +     align_dendro(aes(color = branch), k = 3L) +     anno_right(size = 0.2) +     align_dendro(aes(color = branch), k = 3L) +     # Remove any active annotation     quad_active() -     # Set color scale for all plots, since the active layout is the `ggheatmap()`/`quad_layout()`     scale_color_brewer(palette = \"Dark2\") #> → heatmap built with `geom_tile()` ggheatmap(small_mat) +     # initialize the left annotation     anno_left(size = 0.2) +     align_dendro(aes(color = branch), k = 3L) +     align_dendro(aes(color = branch), k = 3L) -     # Modify the the color scales of all plots in the left annotation     scale_color_brewer(palette = \"Dark2\") #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/operator.html","id":"stack_layout","dir":"Articles","previous_headings":"Operators > Subtraction operator","what":"stack_layout()","title":"Operator","text":"active layout ggstack()/stack_layout() , - applies elements plots layout except nested ggheatmap()/quad_layout().  active layout nested ggheatmap()/quad_layout(), - operator applies elements nested layout, following principles ggheatmap()/quad_layout(). Want apply elements plots stack_layout() nested ggheatmap()/quad_layout() time? refer following section.","code":"stack_alignv(small_mat) +     align_dendro() +     ggtitle(\"I'm from the parent stack\") +     ggheatmap() +     # remove any active context     stack_active() +     align_dendro() +     ggtitle(\"I'm from the parent stack\") -     # Modify the the color scales of all plots in the stack layout except the heatmap layout     scale_color_brewer(palette = \"Dark2\") -     # set the background of all plots in the stack layout except the heatmap layout     theme(plot.background = element_rect(fill = \"red\")) #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/operator.html","id":"with_quad","dir":"Articles","previous_headings":"","what":"with_quad()","title":"Operator","text":"with_quad() function modifies application context elements ggheatmap()/quad_layout(). controls objects like themes, scales, plot modifications apply specific annotation stacks main plot without altering currently active layout plot. function accepts three arguments: x: object can added ggplot, including plot options (see vignette(\"plot-options\") details). position: string containing one \"t\", \"l\", \"b\", \"r\" specifies context applying x. main: single boolean value indicates whether x also apply main plot within ggheatmap()/quad_layout(). used position NULL.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/operator.html","id":"quad_layout-1","dir":"Articles","previous_headings":"with_quad()","what":"quad_layout()","title":"Operator","text":"Default Behavior wrapping object with_quad(): ggheatmap()/quad_layout() active annotation stack, objects added via + - operate normally without with_quad(). main plot (default). Opposite annotation stacks using -. wrapping object with_quad(), + operator apply object active plot annotation stack, also main plot unless specified main argument otherwise.  wrapping object with_quad(), - operator apply object annotation stack also opposite one (.e., bottom top active, vice versa). cases, object also applied main plot default unless specified main argument otherwise.  position argument can string containing one \"t\", \"l\", \"b\", \"r\", indicating annotation stack used context. position argument manually set, default value main argument FALSE.  Setting position NULL change context ggheatmap()/quad_layout() .","code":"ggheatmap(small_mat) +     # initialize the left annotation     anno_left(size = 0.2) +     align_dendro() +     # apply the object not only to the active plot in the annotation stack, but     # also to the main plot     with_quad(theme(plot.background = element_rect(fill = \"red\"))) #> → heatmap built with `geom_tile()` ggheatmap(small_mat) +     # initialize the left annotation     anno_left(size = 0.2) +     align_dendro(aes(color = branch), k = 3L) +     # Change the active layout to the left annotation     anno_top(size = 0.2) +     align_dendro(aes(color = branch), k = 3L) +     anno_bottom(size = 0.2) +     align_dendro(aes(color = branch), k = 3L) -     # Modify the theme of all plots in the bottom and the opposite annotation     # in this way, the `main` argument by default would be `TRUE`     with_quad(theme(plot.background = element_rect(fill = \"red\"))) #> → heatmap built with `geom_tile()` ggheatmap(small_mat) +     # initialize the left annotation     anno_left(size = 0.2) +     align_dendro(aes(color = branch), k = 3L) +     # initialize the top annotation     anno_top(size = 0.2) +     align_dendro(aes(color = branch), k = 3L) +     # initialize the bottom annotation     anno_bottom(size = 0.2) +     align_dendro(aes(color = branch), k = 3L) -     # Modify the background of all plots in the left and top annotation     with_quad(theme(plot.background = element_rect(fill = \"red\")), \"tl\") #> → heatmap built with `geom_tile()` ggheatmap(small_mat) +     # initialize the left annotation     anno_left(size = 0.2) +     align_dendro() +     # we apply the theme to the main plot only     with_quad(theme(plot.background = element_rect(fill = \"red\")), NULL) #> → heatmap built with `geom_tile()` ggheatmap(small_mat) +     # initialize the left annotation     anno_left(size = 0.2) +     align_dendro(aes(color = branch), k = 3L) +     # initialize the top annotation     anno_top(size = 0.2) +     align_dendro(aes(color = branch), k = 3L) +     # initialize the bottom annotation     anno_bottom(size = 0.2) +     align_dendro(aes(color = branch), k = 3L) -     # Modify the background of all plots     with_quad(theme(plot.background = element_rect(fill = \"red\")), NULL) #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/operator.html","id":"stack_layout-1","dir":"Articles","previous_headings":"with_quad()","what":"stack_layout()","title":"Operator","text":"active layout stack_layout() , default, wrapping object with_quad(), - operator apply changes plots along stack_layout(), means stack layout horizontal, - operator also add element left right annotation, stack layout vertical, - operator also add element top bottom annotation. cases, object also applied main plot default unless specified main argument otherwise.  + operator won’t anything special active layout stack_layout() . active layout nested ggheatmap()/quad_layout(), +/- operator applies elements nested layout, following principles ggheatmap()/quad_layout().","code":"stack_alignv(small_mat) +     align_dendro() +     ggtitle(\"I'm from the parent stack\") +     ggheatmap() +     anno_top() +     align_dendro() +     ggtitle(\"I'm from the nested heatmap\") +     # remove any active context     stack_active() +     align_dendro() +     ggtitle(\"I'm from the parent stack\") -     # Modify the the color scales of all plots in the stack layout except the heatmap layout     scale_color_brewer(palette = \"Dark2\") -     # set the background of all plots in the stack layout (including plots in the heatmap layout)     with_quad(theme(plot.background = element_rect(fill = \"red\"))) #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/operator.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Operator","text":"","code":"sessionInfo() #> R version 4.4.2 (2024-10-31) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.5 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggalign_0.0.5.9000 ggplot2_3.5.1      #>  #> loaded via a namespace (and not attached): #>  [1] gtable_0.3.6       jsonlite_1.8.9     dplyr_1.1.4        compiler_4.4.2     #>  [5] tidyselect_1.2.1   jquerylib_0.1.4    systemfonts_1.1.0  scales_1.3.0       #>  [9] textshaping_0.4.0  yaml_2.3.10        fastmap_1.2.0      R6_2.5.1           #> [13] labeling_0.4.3     generics_0.1.3     knitr_1.49         tibble_3.2.1       #> [17] desc_1.4.3         munsell_0.5.1      RColorBrewer_1.1-3 bslib_0.8.0        #> [21] pillar_1.9.0       rlang_1.1.4        utf8_1.2.4         cachem_1.1.0       #> [25] xfun_0.49          fs_1.6.5           sass_0.4.9         viridisLite_0.4.2  #> [29] cli_3.6.3          pkgdown_2.1.1      withr_3.0.2        magrittr_2.0.3     #> [33] digest_0.6.37      grid_4.4.2         lifecycle_1.0.4    vctrs_0.6.5        #> [37] evaluate_1.0.1     glue_1.8.0         farver_2.1.2       ragg_1.3.3         #> [41] fansi_1.0.6        colorspace_2.1-1   rmarkdown_2.29     tools_4.4.2        #> [45] pkgconfig_2.0.3    htmltools_0.5.8.1"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/plot-composer.html","id":"align_plots","dir":"Articles","previous_headings":"","what":"align_plots","title":"Plot composer","text":"Special thanks patchwork project—many core codes plot composer process adapted patchwork. added new features better implement ggalign’s layout functions (ggheatmap() ggstack()), including: free_align() free_border() free_guide() free_lab() free_space() free_vp() features pushed patchwork required significant modification core code. attempted merge , author patchwork decided implement features independently. latest version patchwork now includes free_align(), free_lab(), free_space() functionality single function: patchwork::free(). details, see: https://www.tidyverse.org/blog/2024/09/patchwork-1-3-0/. plot composer function ggalign align_plots(), behaves similarly cowplot::align_plots() patchwork::wrap_plots(). However, can directly use align_plots() quad_layout()/ggheatmap() ggstack(), ensuring align correctly plot panel. Additionally, align_plots() can align pheatmap ComplexHeatmap objects, although won’t align panel area ggplot2.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/plot-composer.html","id":"plot-assembly","dir":"Articles","previous_headings":"align_plots","what":"Plot Assembly","title":"Plot composer","text":"’ll start well-known example plots: Either add plots single arguments  use bang-bang-bang add list plots","code":"p1 <- ggplot(mtcars) +     geom_point(aes(mpg, disp)) p2 <- ggplot(mtcars) +     geom_boxplot(aes(gear, disp, group = gear)) p3 <- ggplot(mtcars) +     geom_bar(aes(gear)) +     facet_wrap(~cyl) p4 <- ggplot(mtcars) +     geom_bar(aes(carb)) p5 <- ggplot(mtcars) +     geom_violin(aes(cyl, mpg, group = cyl)) align_plots(p1, p2, p3, p4, p5) align_plots(!!!list(p1, p2, p3), p4, p5)"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/plot-composer.html","id":"empty-area","dir":"Articles","previous_headings":"align_plots","what":"Empty area","title":"Plot composer","text":"can use NULL indicate empty area.","code":"align_plots(p1, NULL, p2, NULL, p3, NULL)"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/plot-composer.html","id":"controlling-the-grid","dir":"Articles","previous_headings":"align_plots","what":"Controlling the grid","title":"Plot composer","text":"Like patchwork, specific layout provided, align_plots() attempt create grid square possible, column row taking equal space:  adjust widths columns, use:","code":"align_plots(p1, p2, p3, p4, ncol = 3) align_plots(p1, p2, p3, p4, widths = c(2, 1))"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/plot-composer.html","id":"guide-legends","dir":"Articles","previous_headings":"align_plots","what":"Guide legends","title":"Plot composer","text":"default, align_plots() won’t collect guide legends. can use guides argument control side guide legends collected. collected original side. , use patch_titles() indicate guide legend position (instead using ggtitle()). patch_titles() can add titles four sides, title placed plot panel guide legend.  align_plots() nested another align_plots(), nested align_plots() inherit guides argument upper-level align_plots(). top-level align_plots() won’t collect guide legends plots within nested align_plots() unless nested align_plots() collects first.","code":"p_right <- ggplot(mtcars) +     geom_point(aes(hp, wt, colour = mpg)) +     patch_titles(\"right\") +     labs(color = \"right\") p_top <- p_right +     patch_titles(\"top\") +     scale_color_continuous(         name = \"top\",         guide = guide_colorbar(position = \"top\")     ) p_left <- p_right +     patch_titles(\"left\") +     scale_color_continuous(         name = \"left\",         guide = guide_colorbar(position = \"left\")     ) p_bottom <- p_right +     patch_titles(\"bottom\") +     scale_color_continuous(         name = \"bottom\",         guide = guide_colorbar(position = \"bottom\")     ) align_plots(p_right, p_bottom, p_top, p_left, guides = \"tlbr\")"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/plot-composer.html","id":"free_guide","dir":"Articles","previous_headings":"align_plots","what":"free_guide","title":"Plot composer","text":"free_guide() function allows override guides argument single plot.  can also specify guide positions collected individual plots.","code":"align_plots(     free_guide(p_right, NULL),     free_guide(p_bottom, NULL),     free_guide(p_top, NULL),     free_guide(p_left, NULL),     guides = \"tlbr\" ) align_plots(     free_guide(p_right, \"r\"),     free_guide(p_bottom, \"b\"),     free_guide(p_top, \"t\"),     free_guide(p_left, \"l\") )"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/plot-composer.html","id":"session-information","dir":"Articles","previous_headings":"align_plots","what":"Session information","title":"Plot composer","text":"","code":"sessionInfo() #> R version 4.4.2 (2024-10-31) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.5 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggalign_0.0.5.9000 ggplot2_3.5.1      #>  #> loaded via a namespace (and not attached): #>  [1] vctrs_0.6.5       cli_3.6.3         knitr_1.49        rlang_1.1.4       #>  [5] xfun_0.49         generics_0.1.3    textshaping_0.4.0 jsonlite_1.8.9    #>  [9] labeling_0.4.3    glue_1.8.0        colorspace_2.1-1  htmltools_0.5.8.1 #> [13] ragg_1.3.3        sass_0.4.9        fansi_1.0.6       scales_1.3.0      #> [17] rmarkdown_2.29    grid_4.4.2        tibble_3.2.1      evaluate_1.0.1    #> [21] munsell_0.5.1     jquerylib_0.1.4   fastmap_1.2.0     yaml_2.3.10       #> [25] lifecycle_1.0.4   compiler_4.4.2    dplyr_1.1.4       fs_1.6.5          #> [29] pkgconfig_2.0.3   farver_2.1.2      systemfonts_1.1.0 digest_0.6.37     #> [33] R6_2.5.1          tidyselect_1.2.1  utf8_1.2.4        pillar_1.9.0      #> [37] magrittr_2.0.3    bslib_0.8.0       withr_3.0.2       tools_4.4.2       #> [41] gtable_0.3.6      pkgdown_2.1.1     cachem_1.1.0      desc_1.4.3"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/plot-options.html","id":"plot_theme","dir":"Articles","previous_headings":"","what":"plot_theme","title":"Plot Options","text":"plot_theme() function extends theme() set default theme plots, allowing input theme() elements directly modify theme elements. set plot option single plot, simply use + operator:  can use theme() object directly plot_theme().  Note plot_theme() serves default theme always overridden theme() settings applied directly plot. default theme (plot_theme()) applied first, followed specific theme() settings, even theme() added plot_theme().  using - operator plot options, apply option directly active layout.  Unlike individual ggplot2 elements, added directly plot - operator, layout-level options set - operator inherited plots layout rendered. plot-specific options override layout-level options, regardless order added.","code":"ggheatmap(small_mat) +     # change the default theme of the heatmap body     plot_theme(plot.background = element_rect(fill = \"red\")) #> → heatmap built with `geom_tile()` ggheatmap(small_mat, filling = FALSE) +     # we reduce the heatmap body cell width and height     # in this way, we can see the background of `theme_bw()` in the panel.     geom_tile(aes(fill = value), width = 0.9, height = 0.9) +     # change the default theme of the heatmap body     plot_theme(theme_bw(), plot.background = element_rect(fill = \"red\")) ggheatmap(small_mat) +     # change the plot theme of the heatmap body     theme(plot.background = element_rect(fill = \"blue\")) +     # change the default theme of the heatmap body     plot_theme(plot.background = element_rect(fill = \"red\")) #> → heatmap built with `geom_tile()` ggheatmap(small_mat) +     # Change the active layout to the top annotation     anno_top() +     # add a dendrogram to the top annotation     align_dendro() +     # add a bar plot to the top annotation     ggalign(aes(.names, value, fill = factor(.names)), data = rowSums) +     geom_bar(stat = \"identity\") -     # Change the default theme of the top annotation     # All plots in the top annotation will inherit this default theme     plot_theme(plot.background = element_rect(fill = \"red\")) #> → heatmap built with `geom_tile()` ggheatmap(small_mat) +     # Change the active layout to the top annotation     anno_top() +     # add a dendrogram to the top annotation     align_dendro() +     # change the plot_theme for the dendrogram plot     plot_theme(plot.background = element_rect(fill = \"blue\")) +     # add a bar plot to the top annotation     ggalign(aes(.names, value, fill = factor(.names)), data = rowSums) +     geom_bar(stat = \"identity\") -     # Change the default theme of the top annotation     # All plots in the top annotation will inherit this default theme     # But the plot-specific options will override these     plot_theme(plot.background = element_rect(fill = \"red\")) #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/plot-options.html","id":"plot_data","dir":"Articles","previous_headings":"","what":"plot_data","title":"Plot Options","text":"align_gg()/ggalign() requires specific data format operations. need transform filter data individual geoms, can use data argument within geom. However, multiple geoms want consistent transformation applied across , can utilize plot_data() function. allows transform default data entire plot. plot_data() accepts function takes data frame input returns modified data frame. default, plot_data() attempt inherit parent layout data inherited . However, one exception: align_dendro() inherit plot_data() transformations default.","code":"set.seed(1234L) ggheatmap(small_mat) +     anno_top() +     align_kmeans(3L) +     # we add a bar plot     ggalign() +     # we subest the plot data     plot_data(~ subset(.x, .panel == 1L)) +     geom_bar(aes(y = value, fill = .row_names), stat = \"identity\") #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/plot-options.html","id":"plot_align","dir":"Articles","previous_headings":"","what":"plot_align","title":"Plot Options","text":"plot_align() function defines align Specifications plots.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/plot-options.html","id":"guides","dir":"Articles","previous_headings":"plot_align","what":"guides","title":"Plot Options","text":"default, ggheatmap() collect guide legends side originate.  guides argument controls side guide legends gathered. following example, ’ll collect guide legends top (t) sides:  can also apply plot_align() function directly specific plots:  Note: legend left side heatmap body collected positioned left side layout level. ’re annoyed large space left annotation heatmap body, don’t worry! issue can addressed using free_spaces feature, covered dedicated section. Now, Let’s dive deeper guide collection process. last example, set guides argument heatmap body. happens set guides dendrogram top annotation?  Nothing seems changed, right? guide legends within annotation stacks first collected annotation stack_layout() passed top-level layout integration. default, annotation stack inherits guides arguments heatmap layout, followed inherited individual plot annotation. guides argument set top-level (heatmap layout) affect guide collection behaviour. example: legend left side dendrogram top annotation collected first annotation level. Since heatmap layout set collect legends left side, remains left side within annotation stack. specific case, top annotation contains one plot, annotation-level placement identical plot-level placement. override , can use free_guides argument quad_anno()/anno_*() function. differs guides argument plot_align(), controls behavior plots layout. free_guides argument specifies guide legends annotation stack layout level collected heatmap layout.  Note: heatmap layout collect guide legends annotation stack stack layout collects guides first.","code":"heatmap_collect_all_guides <- ggheatmap(small_mat, width = 2, height = 2L) +     # we set the legend to the left side     scale_fill_gradient2(         low = \"blue\", high = \"red\",         name = \"I'm from heatmap body\",         guide = guide_legend(position = \"left\")     ) +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     # we add a top annotation     anno_top() +     # in the top annotation, we add a dendrogram     align_dendro(aes(color = branch), k = 3L) +     # we set the legends of the dendrogram to the left side     scale_color_brewer(         name = \"I'm from top annotation\", palette = \"Dark2\",         guide = guide_legend(position = \"left\")     ) +     # we add a left annotation     anno_left() +     align_dendro(aes(color = branch), k = 3L) +     # we set the legends of the dendrogram to the top side     scale_color_brewer(         name = \"I'm from left annotation\", palette = \"Dark2\",         guide = guide_legend(position = \"top\", direction = \"vertical\")     ) &     # we remove all margins for all plots     theme(plot.margin = margin()) heatmap_collect_all_guides #> → heatmap built with `geom_tile()` heatmap_collect_all_guides -     # we set global `guides` argument for `the heatmap layout`     # we only collect guides in the top side     with_quad(plot_align(guides = \"t\"), NULL) #> → heatmap built with `geom_tile()` heatmap_collect_all_guides -     # we set global `guides` argument for the heatmap layout     # we only collect guides in the top side     with_quad(plot_align(guides = \"t\"), NULL) +     # `+` apply it to the active plot     # for the heatmap body, we collect guide in the left side     with_quad(plot_align(guides = \"l\"), NULL) #> → heatmap built with `geom_tile()` heatmap_collect_all_guides -     # we set global `guides` argument for `the heatmap layout`     # we only collect guides in the top side in the heatmap layout     with_quad(plot_align(guides = \"t\"), NULL) +     # `+` apply it to the active plot     # for the dendrogram in the top annotation, we collect guide in the left side     with_quad(plot_align(guides = \"l\"), \"t\") #> → heatmap built with `geom_tile()` heatmap_collect_all_guides -     # we set global `guides` argument for `the heatmap layout`     # we only collect guides in the top side in the heatmap layout     with_quad(plot_align(guides = \"t\"), NULL) +     # we also collect guides in the left side for the top annotation stack     # in the heatmap layout     anno_top(free_guides = \"l\") +     # `+` apply it to the active plot     # for the dendrogram in the top annotation, we collect guide in the left side     plot_align(guides = \"l\") #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/plot-options.html","id":"free_spaces","dir":"Articles","previous_headings":"plot_align","what":"free_spaces","title":"Plot Options","text":"default, ggheatmap() align elements plot, can sometimes lead unwanted spacing. Consider following example:  case, left annotation stack positioned far heatmap body due wide axis labels top annotation stack. occurs top annotation stack aligned heatmap body. fix , can remove left borders around panel top annotation stack setting free_spaces = \"l\".  One useful way utilize free_spaces position guide legends next annotations. (Note guide legend bottom annotation):  Usually want apply free_spaces whole layout, instead individual plots. ggheatmap()/quad_layout(), behavior free_spaces free_labs arguments differs guides arguments plot_align() inheriting parent layout: top bottom annotations, inherits left (“l”) right (“r”) axes. left right annotations, inherits top (“t”) bottom (“b”) axes.","code":"ggheatmap(small_mat) +     # add top annotation     anno_top(size = unit(30, \"mm\")) +     # add a dendrogram to the top annotation     align_dendro() +     # here, we use long labels for visual example     scale_y_continuous(         expand = expansion(),         labels = ~ paste(\"very very long labels\", .x)     ) +     # add left annotation     anno_left(unit(20, \"mm\")) +     # add a dendrogram to the left annotation     align_dendro() #> → heatmap built with `geom_tile()` ggheatmap(small_mat) +     # add top annotation     anno_top(size = unit(30, \"mm\")) -     # we remove the spaces of the left borders in the top annotation     plot_align(free_spaces = \"l\") +     # add a dendrogram to the top annotation     align_dendro() +     # here, we use long labels for visual example     scale_y_continuous(         expand = expansion(),         labels = ~ paste(\"very very long labels\", .x)     ) +     # add left annotation     anno_left(unit(20, \"mm\")) +     # add a dendrogram to the left annotation     align_dendro() #> → heatmap built with `geom_tile()` heatmap_collect_all_guides +     # reset the active context to the heatmap layout     quad_active() -     # we set global `guides` argument for the heatmap layout     # we only collect guides in the top side     plot_align(guides = \"t\") +     # `+` apply it to the current active plot     # for the heatmap body, we collect guide in the left side     plot_align(guides = \"l\") -     with_quad(plot_align(free_spaces = \"l\"), \"t\") #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/plot-options.html","id":"free_labs","dir":"Articles","previous_headings":"plot_align","what":"free_labs","title":"Plot Options","text":"default, won’t align axis titles.  align axis titles, can set free_labs = NULL. Alternatively, single string containing one axis positions (“t”, “l”, “b”, “r”) indicate axis titles free alignment.","code":"ggheatmap(small_mat) +     ylab(\"Heatmap title\") +     anno_top(size = unit(30, \"mm\")) +     align_dendro() +     ylab(\"Annotation title\") #> → heatmap built with `geom_tile()` ggheatmap(small_mat) -     plot_align(free_labs = NULL) +     ylab(\"Heatmap title\") +     anno_top(size = unit(30, \"mm\")) +     align_dendro() +     ylab(\"Annotation title\") #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/plot-options.html","id":"session-information","dir":"Articles","previous_headings":"plot_align","what":"Session information","title":"Plot Options","text":"","code":"sessionInfo() #> R version 4.4.2 (2024-10-31) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.5 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggalign_0.0.5.9000 ggplot2_3.5.1      #>  #> loaded via a namespace (and not attached): #>  [1] gtable_0.3.6       jsonlite_1.8.9     dplyr_1.1.4        compiler_4.4.2     #>  [5] tidyselect_1.2.1   jquerylib_0.1.4    systemfonts_1.1.0  scales_1.3.0       #>  [9] textshaping_0.4.0  yaml_2.3.10        fastmap_1.2.0      R6_2.5.1           #> [13] labeling_0.4.3     generics_0.1.3     knitr_1.49         tibble_3.2.1       #> [17] desc_1.4.3         munsell_0.5.1      bslib_0.8.0        pillar_1.9.0       #> [21] RColorBrewer_1.1-3 rlang_1.1.4        utf8_1.2.4         cachem_1.1.0       #> [25] xfun_0.49          fs_1.6.5           sass_0.4.9         cli_3.6.3          #> [29] pkgdown_2.1.1      withr_3.0.2        magrittr_2.0.3     digest_0.6.37      #> [33] grid_4.4.2         lifecycle_1.0.4    vctrs_0.6.5        evaluate_1.0.1     #> [37] glue_1.8.0         farver_2.1.2       ragg_1.3.3         fansi_1.0.6        #> [41] colorspace_2.1-1   rmarkdown_2.29     tools_4.4.2        pkgconfig_2.0.3    #> [45] htmltools_0.5.8.1"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/quad-layout.html","id":"quad_free","dir":"Articles","previous_headings":"","what":"quad_free()","title":"Quad-Layout","text":"quad_free() won’t align observations. ggside() alias quad_free(). function ggside packge. particularly useful metadata summary graphics continuous axis","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/quad-layout.html","id":"input-data","dir":"Articles","previous_headings":"quad_free()","what":"input data","title":"Quad-Layout","text":"Like ggplot, ’ll need provide input can converted data frame. Internally, fortify_data_frame() function used handle conversion.","code":"ggside(mpg) +     geom_point(aes(displ, hwy, colour = class))"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/quad-layout.html","id":"annotation","dir":"Articles","previous_headings":"quad_free()","what":"annotation","title":"Quad-Layout","text":"Like ggheatmap(), annotations quad_free() can placed top, left, bottom, right sides, annotations use stack_free(), meaning don’t align observations. data directly inherited different quad_alignb()/quad_alignh()/quad_alignv() column annotation transpose layout matrix. Additionally, annotations stack_layout() can manually added directly, ’ll demonstrate quad_alignh()/quad_alignv() section manual initialization required.  Unlike ggheatmap()/heatmap_layout(), ggside()/quad_free() allows facetting main plot, also applied annotations proper alignment.","code":"ggside(mpg, aes(displ, hwy, colour = class)) -     # set default theme for all plots in the layout     plot_theme(theme_bw()) +     geom_point(size = 2) +     # add top annotation     anno_top(size = 0.3) -     # set default theme for the top annotation     plot_theme(theme_no_axes(\"tb\")) +     # add a plot in the top annotation     ggfree() +     geom_density(aes(displ, y = after_stat(density), colour = class), position = \"stack\") +     # add right annotation     anno_right(size = 0.3) -     # set default theme for the right annotation     plot_theme(theme_no_axes(\"lr\")) +     # add a plot in the right annotation     ggfree() +     geom_density(aes(x = after_stat(density), hwy, colour = class),         position = \"stack\"     ) +     theme(axis.text.x = element_text(angle = 90, vjust = .5)) i2 <- iris i2$Species2 <- rep(c(\"A\", \"B\"), 75) ggside(i2, aes(Sepal.Width, Sepal.Length, color = Species)) -     # set default theme for all plots in the layout     plot_theme(theme_bw()) +     geom_point(size = 2) +     facet_grid(Species ~ Species2) +     # add top annotation     anno_top(size = 0.3) -     # set default theme for the top annotation     plot_theme(theme_no_axes(\"tb\")) +     # add a plot in the top annotation     ggfree() +     geom_density(aes(Sepal.Width, y = after_stat(density), colour = Species),         position = \"stack\"     ) -     # we can utilize the `-` to set facet for all plots in the annotation     facet_grid(cols = vars(Species2)) +     # add right annotation     anno_right(size = 0.3) -     # set default theme for the right annotation     plot_theme(theme_no_axes(\"lr\")) +     # add a plot in the right annotation     ggfree() +     geom_density(aes(x = after_stat(density), Sepal.Length, colour = Species),         position = \"stack\"     ) +     theme(axis.text.x = element_text(angle = 90, vjust = .5)) -     # we can utilize the `-` to set facet for all plots in the annotation     facet_grid(rows = vars(Species))"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/quad-layout.html","id":"quad_alignhquad_alignv","dir":"Articles","previous_headings":"","what":"quad_alignh()/quad_alignv()","title":"Quad-Layout","text":"quad_alignh() aligns observations horizontally, quad_alignv() aligns observations vertically.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/quad-layout.html","id":"input-data-1","dir":"Articles","previous_headings":"quad_alignh()/quad_alignv()","what":"input data","title":"Quad-Layout","text":"align observations horizontal/vertical direction, ’ll need provide input can converted matrix. Internally, fortify_matrix() function used handle conversion, ensuring input correct format alignment. underlying ggplot data ggheatmap()/heatmap_layout(), recommended use .y, .row_names y mapping main plot quad_alignh() use .x .column_names x mapping main plot quad_alignv().","code":"set.seed(123) small_mat <- matrix(rnorm(56), nrow = 8) rownames(small_mat) <- paste0(\"row\", seq_len(nrow(small_mat))) colnames(small_mat) <- paste0(\"column\", seq_len(ncol(small_mat))) # we'll align the horizontal direction quad_alignh(small_mat) +     geom_boxplot(aes(value, .row_names, fill = .row_names)) +     scale_fill_brewer(palette = \"Dark2\") # we'll align the vertical direction quad_alignv(small_mat) +     geom_boxplot(aes(.column_names, value, fill = .column_names)) +     scale_fill_brewer(palette = \"Dark2\")"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/quad-layout.html","id":"annotation-1","dir":"Articles","previous_headings":"quad_alignh()/quad_alignv()","what":"annotation","title":"Quad-Layout","text":"ggheatmap()/heatmap_layout(), can add annotation top, left, bottom, right side. top bottom annotation quad_alignh() stack_free() won’t align observations left right annotation quad_alignv() stack_free() won’t align observations. left right annotation quad_alignh(), stack_align() layout align observations, require matrix layout data. can inherit parent quad_layout() can add ggalign() ggfree() align_*() functions annotation.  top bottom annotation quad_alignh(), stack_free() won’t align observations, require data frame layout data. way, annotation stack won’t initialized, resulting warning message.  Manual adding stack_layout() required cases, can set initialize = FALSE prevent warning message.  Alternatively, can set initialize = TRUE, initialize annotation stack layout data. case, must provide data plot within annotation.  quad_alignh(), need manually initialize left right annotations quad_alignv().","code":"quad_alignh(small_mat) +     geom_boxplot(aes(value, .row_names, fill = .row_names)) +     scale_fill_brewer(palette = \"Dark2\") +     anno_left() +     align_dendro() quad_alignh(small_mat) +     geom_boxplot(aes(value, .row_names, fill = .row_names)) +     scale_fill_brewer(palette = \"Dark2\") +     anno_top() #> Warning: `data` in `quad_alignh()` is a double matrix, but the top annotation stack need #> a <data.frame>, won't initialize the top annotation stack quad_alignh(small_mat) +     geom_boxplot(aes(value, .row_names, fill = .row_names)) +     scale_fill_brewer(palette = \"Dark2\") +     anno_top(initialize = FALSE) +     # initialize the top annotation with a self-provided `stack_layout()`     stack_freev(mpg) +     # add a plot in the top annotation     ggfree(aes(displ, hwy, colour = class)) +     geom_point(aes(displ, hwy, colour = class)) quad_alignh(small_mat) +     geom_boxplot(aes(value, .row_names, fill = .row_names)) +     scale_fill_brewer(palette = \"Dark2\") +     anno_top(initialize = TRUE) +     # add a plot in the top annotation     ggfree(data = mpg, aes(displ, hwy, colour = class)) +     geom_point(aes(displ, hwy, colour = class)) quad_alignv(small_mat) +     geom_boxplot(aes(.column_names, value, fill = .column_names)) +     scale_fill_brewer(palette = \"Dark2\") +     anno_left(initialize = FALSE) +     # initialize the left annotation with a self-provided `stack_layout()`     stack_free(data = mpg) +     # add a plot in the top annotation     ggfree(aes(displ, hwy, colour = class)) +     geom_point(aes(displ, hwy, colour = class)) #> Warning: The `direction` argument of `stack_free()` must be provided as of ggalign #> 0.0.5. #> ℹ no default value of 'direction' argument in the next release #> ℹ The deprecated feature was likely used in the ggalign package. #>   Please report the issue at <https://github.com/Yunuuuu/ggalign/issues>. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated."},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/quad-layout.html","id":"quad_alignb","dir":"Articles","previous_headings":"","what":"quad_alignb()","title":"Quad-Layout","text":"quad_alignb aligns observations horizontal vertical directions. base version ggheatmap()/heatmap_layout(), won’t add main plot geoms default mapping automatically.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/quad-layout.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Quad-Layout","text":"","code":"sessionInfo() #> R version 4.4.2 (2024-10-31) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.5 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggalign_0.0.5.9000 ggplot2_3.5.1      #>  #> loaded via a namespace (and not attached): #>  [1] gtable_0.3.6       jsonlite_1.8.9     crayon_1.5.3       dplyr_1.1.4        #>  [5] compiler_4.4.2     tidyselect_1.2.1   jquerylib_0.1.4    systemfonts_1.1.0  #>  [9] scales_1.3.0       textshaping_0.4.0  yaml_2.3.10        fastmap_1.2.0      #> [13] R6_2.5.1           labeling_0.4.3     generics_0.1.3     knitr_1.49         #> [17] tibble_3.2.1       desc_1.4.3         munsell_0.5.1      bslib_0.8.0        #> [21] pillar_1.9.0       RColorBrewer_1.1-3 rlang_1.1.4        utf8_1.2.4         #> [25] cachem_1.1.0       xfun_0.49          fs_1.6.5           sass_0.4.9         #> [29] cli_3.6.3          pkgdown_2.1.1      withr_3.0.2        magrittr_2.0.3     #> [33] digest_0.6.37      grid_4.4.2         lifecycle_1.0.4    vctrs_0.6.5        #> [37] evaluate_1.0.1     glue_1.8.0         farver_2.1.2       ragg_1.3.3         #> [41] fansi_1.0.6        colorspace_2.1-1   rmarkdown_2.29     tools_4.4.2        #> [45] pkgconfig_2.0.3    htmltools_0.5.8.1"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/single-heatmap.html","id":"colors","dir":"Articles","previous_headings":"","what":"Colors","title":"ComplexHeatmap: single-heatmap","text":"important note ComplexHeatmap package reorders dendrogram default, align_dendro() ggalign modify tree layout. Another key difference two packages treat starting point. ggalign considers left-bottom starting point, whereas ComplexHeatmap starts left-top. reordering dendrogram, ComplexHeatmap decreasing order, ggalign uses ascending order. modify colors heatmap, can use scale_fill_*() function ggplot2, provides flexible way enriched pallete adjust color schemes.   oob argument scale_fill_* function can used deal outliers.  can use align_plots() arrange .   character matrix, can use ggplot2 discrete filling scales.    won’t compare LAB RGB space. want convert color different color space, try use farver pacakge. ggplot2, can use panel.border argument theme() function control Heatmap body border.  can use filling argument turn heatmap cell filling, allowing customize heatmap body geoms. Use color aesthetic specify cell border color linewidth aesthetic set border width.  draw blank heatmap body:","code":"# ComplexHeatmap::Heatmap(mat) dim(mat) #> [1] 18 24 ggheatmap(mat) +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     anno_right(size = unit(15, \"mm\")) +     align_dendro(reorder_dendrogram = TRUE) +     anno_top(size = unit(15, \"mm\")) +     align_dendro(reorder_dendrogram = TRUE) +     quad_active() &     theme(plot.margin = margin()) #> → heatmap built with `geom_tile()` ggheatmap(mat) +     scale_fill_gradient2(low = \"green\", high = \"red\") +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     anno_right(size = unit(15, \"mm\")) +     align_dendro(reorder_dendrogram = TRUE) +     anno_top(size = unit(15, \"mm\")) +     align_dendro() +     quad_active() &     theme(plot.margin = margin()) #> → heatmap built with `geom_tile()` mat2 <- mat mat2[1, 1] <- 100000 ggheatmap(mat2) +     scale_fill_gradient2(         low = \"green\", high = \"red\",         limits = c(-2, 2),         oob = scales::squish     ) +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     anno_right(size = unit(15, \"mm\")) +     align_dendro(reorder_dendrogram = TRUE) +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     anno_top(size = unit(15, \"mm\")) +     align_dendro(reorder_dendrogram = TRUE) +     quad_active() &     theme(plot.margin = margin()) #> → heatmap built with `geom_tile()` h1 <- ggheatmap(mat) +     scale_fill_gradient2(name = \"mat\", low = \"green\", high = \"red\") +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     anno_right(size = unit(15, \"mm\")) +     align_dendro(reorder_dendrogram = TRUE) +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     anno_top(size = unit(15, \"mm\")) +     align_dendro(reorder_dendrogram = TRUE) +     quad_active() &     theme(plot.margin = margin())  h2 <- ggheatmap(mat / 4) +     scale_fill_gradient2(         name = \"mat/4\", limits = c(-2, 2L),         oob = scales::squish,         low = \"green\", high = \"red\"     ) +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     anno_right(size = unit(15, \"mm\")) +     align_dendro(reorder_dendrogram = TRUE) +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     anno_top(size = unit(15, \"mm\")) +     align_dendro(reorder_dendrogram = TRUE) +     quad_active() &     theme(plot.margin = margin())  h3 <- ggheatmap(abs(mat)) +     scale_fill_gradient2(name = \"abs(mat)\", low = \"green\", high = \"red\") +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     anno_right(size = unit(15, \"mm\")) +     align_dendro(reorder_dendrogram = TRUE) +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     anno_top(size = unit(15, \"mm\")) +     align_dendro(reorder_dendrogram = TRUE) +     quad_active() &     theme(plot.margin = margin()) align_plots(h1, h2, h3, ncol = 2L) #> → heatmap built with `geom_tile()` #> → heatmap built with `geom_tile()` #> → heatmap built with `geom_tile()` ggheatmap(mat) +     scale_fill_gradientn(colors = rev(rainbow(10))) +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     anno_right(size = unit(15, \"mm\")) +     align_dendro(reorder_dendrogram = TRUE) +     anno_top(size = unit(15, \"mm\")) +     align_dendro(reorder_dendrogram = TRUE) +     quad_active() &     theme(plot.margin = margin()) #> → heatmap built with `geom_tile()` discrete_mat <- matrix(sample(1:4, 100, replace = TRUE), 10, 10) colors <- structure(1:4, names = c(\"1\", \"2\", \"3\", \"4\")) # black, red, green, blue ggheatmap(discrete_mat, aes(fill = factor(value))) +     scale_fill_manual(values = colors) +     anno_right(size = unit(15, \"mm\")) +     align_dendro(reorder_dendrogram = TRUE) +     anno_top(size = unit(15, \"mm\")) +     align_dendro(reorder_dendrogram = TRUE) +     quad_active() &     theme(plot.margin = margin()) #> → heatmap built with `geom_tile()` discrete_mat <- matrix(sample(letters[1:4], 100, replace = TRUE), 10, 10) colors <- structure(1:4, names = letters[1:4]) ggheatmap(discrete_mat) +     scale_fill_manual(values = colors) #> → heatmap built with `geom_tile()` mat_with_na <- mat na_index <- sample(c(TRUE, FALSE),     nrow(mat) * ncol(mat),     replace = TRUE, prob = c(1, 9) ) mat_with_na[na_index] <- NA ggheatmap(mat_with_na) +     scale_fill_gradient2(low = \"blue\", high = \"red\", na.value = \"black\") +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     anno_right(size = unit(15, \"mm\")) +     align_dendro(reorder_dendrogram = TRUE) +     anno_top(size = unit(15, \"mm\")) +     align_dendro(reorder_dendrogram = TRUE) +     quad_active() &     theme(plot.margin = margin()) #> → heatmap built with `geom_tile()` ggheatmap(mat) +     theme(         axis.text.x = element_text(angle = -60, hjust = 0),         panel.border = element_rect(linetype = \"dashed\", fill = NA)     ) +     anno_right(size = unit(15, \"mm\")) +     align_dendro(reorder_dendrogram = TRUE) +     anno_top(size = unit(15, \"mm\")) +     align_dendro(reorder_dendrogram = TRUE) +     theme(plot.margin = margin()) #> → heatmap built with `geom_tile()` ggheatmap(mat, filling = NULL) +     geom_tile(aes(fill = value), color = \"white\") +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     anno_right(size = unit(15, \"mm\")) +     align_dendro(reorder_dendrogram = TRUE) +     anno_top(size = unit(15, \"mm\")) +     align_dendro(reorder_dendrogram = TRUE) &     theme(plot.margin = margin()) ggheatmap(mat, filling = NULL) +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     anno_right(size = unit(15, \"mm\")) +     align_dendro(reorder_dendrogram = TRUE) +     anno_top(size = unit(15, \"mm\")) +     align_dendro(reorder_dendrogram = TRUE) &     theme(plot.margin = margin())"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/single-heatmap.html","id":"titles","dir":"Articles","previous_headings":"","what":"Titles","title":"ComplexHeatmap: single-heatmap","text":"can use patch_titles() add titles around border plot. can use theme() control text appearance.","code":"ggheatmap(mat) +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     anno_right(size = unit(20, \"mm\")) +     align_dendro(reorder_dendrogram = TRUE) +     patch_titles(right = \"I am a row title\") +     theme(plot.patch_title.right = element_text(face = \"bold\", size = 16)) +     anno_top(size = unit(15, \"mm\")) +     align_dendro(reorder_dendrogram = TRUE) +     patch_titles(top = \"I am a column title\") +     theme(plot.patch_title.top = element_text(face = \"bold\", size = 16)) &     theme(plot.margin = margin()) #> → heatmap built with `geom_tile()`"},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/single-heatmap.html","id":"distance-methods","dir":"Articles","previous_headings":"Clustering","what":"Distance methods","title":"ComplexHeatmap: single-heatmap","text":"","code":"# ComplexHeatmap::Heatmap(mat, #   name = \"mat\", clustering_distance_rows = \"pearson\", #   column_title = \"pre-defined distance method (1 - pearson)\" # ) ggheatmap(mat) +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     anno_right(size = unit(20, \"mm\")) +     align_dendro(distance = \"pearson\", reorder_dendrogram = TRUE) +     anno_top(size = unit(15, \"mm\")) +     align_dendro(reorder_dendrogram = TRUE) +     patch_titles(top = \"pre-defined distance method (1 - pearson)\") +     theme(plot.patch_title.top = element_text(face = \"bold\", size = 16)) &     theme(plot.margin = margin()) #> → heatmap built with `geom_tile()` # ComplexHeatmap::Heatmap(mat, #     name = \"mat\", clustering_distance_rows = function(m) dist(m), #     column_title = \"a function that calculates distance matrix\" # ) ggheatmap(mat) +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     anno_right(size = unit(20, \"mm\")) +     align_dendro(distance = dist, reorder_dendrogram = TRUE) +     anno_top(size = unit(15, \"mm\")) +     align_dendro(reorder_dendrogram = TRUE) +     patch_titles(top = \"a function that calculates distance matrix\") +     theme(plot.patch_title.top = element_text(face = \"bold\", size = 16)) &     theme(plot.margin = margin()) #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/single-heatmap.html","id":"clustering-methods","dir":"Articles","previous_headings":"Clustering","what":"Clustering methods","title":"ComplexHeatmap: single-heatmap","text":"Method perform hierarchical clustering can specified method argument, Possible methods supported hclust() function.  Use distance = NULL don’t want calculate distance.","code":"# ComplexHeatmap::Heatmap(mat, #     name = \"mat\", #     clustering_method_rows = \"single\" # ) ggheatmap(mat) +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     anno_right(size = unit(20, \"mm\")) +     align_dendro(method = \"single\", reorder_dendrogram = TRUE) +     anno_top(size = unit(15, \"mm\")) +     align_dendro(reorder_dendrogram = TRUE) &     theme(plot.margin = margin()) #> → heatmap built with `geom_tile()` ggheatmap(mat) +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     anno_right(size = unit(20, \"mm\")) +     align_dendro(         distance = NULL, method = cluster::diana,         reorder_dendrogram = TRUE     ) +     anno_top(size = unit(15, \"mm\")) +     align_dendro(         distance = NULL, method = cluster::agnes,         reorder_dendrogram = TRUE     ) &     theme(plot.margin = margin()) #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/single-heatmap.html","id":"render-dendrograms","dir":"Articles","previous_headings":"Clustering","what":"Render dendrograms","title":"ComplexHeatmap: single-heatmap","text":"’s easy ggalign color branches setting color mapping, since ggalign add cutree() results underlying data.","code":"ggheatmap(mat) +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     anno_right(size = unit(20, \"mm\")) +     align_dendro(aes(color = branch), k = 2L, reorder_dendrogram = TRUE) +     anno_top(size = unit(15, \"mm\")) +     align_dendro(reorder_dendrogram = TRUE) &     theme(plot.margin = margin()) #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/single-heatmap.html","id":"set-row-and-column-orders","dir":"Articles","previous_headings":"","what":"Set row and column orders","title":"ComplexHeatmap: single-heatmap","text":"can use align_order() set order.","code":"# ComplexHeatmap::Heatmap(mat, #     name = \"mat\", #     row_order = order(as.numeric(gsub(\"row\", \"\", rownames(mat)))), #     column_order = order(as.numeric(gsub(\"column\", \"\", colnames(mat)))), #     column_title = \"reorder matrix\" # ) ggheatmap(mat) +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     anno_right(size = unit(20, \"mm\")) +     align_order(as.numeric(gsub(\"row\", \"\", rownames(mat)))) +     anno_top(size = unit(15, \"mm\")) +     align_order(as.numeric(gsub(\"column\", \"\", colnames(mat)))) &     theme(plot.margin = margin()) #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/single-heatmap.html","id":"seriation","dir":"Articles","previous_headings":"","what":"Seriation","title":"ComplexHeatmap: single-heatmap","text":"align_reorder() can directly take seriate() function input extract ordering information.  code execute seriate() twice—dimension. However, since single run seriate() can provide ordering dimensions, can manually extract ordering indices avoid redundancy. use seriate() function, please refer seriation package.","code":"mat2 <- max(mat) - mat ggheatmap(mat2) +     scale_fill_gradient2(low = \"blue\", high = \"red\", midpoint = 2L) +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     anno_right(size = unit(20, \"mm\")) +     align_reorder(seriation::seriate, method = \"BEA_TSP\") +     anno_top(size = unit(15, \"mm\")) +     align_reorder(seriation::seriate, method = \"BEA_TSP\") &     theme(plot.margin = margin()) #> → heatmap built with `geom_tile()` o <- seriation::seriate(mat2, method = \"BEA_TSP\") ggheatmap(mat2) +     scale_fill_gradient2(low = \"blue\", high = \"red\", midpoint = 2L) +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     anno_right(size = unit(20, \"mm\")) +     align_order(seriation::get_order(o, 1L)) +     anno_top(size = unit(15, \"mm\")) +     align_order(seriation::get_order(o, 2L)) &     theme(plot.margin = margin()) #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/single-heatmap.html","id":"dimension-labels","dir":"Articles","previous_headings":"","what":"Dimension labels","title":"ComplexHeatmap: single-heatmap","text":"ggplot2 use scales theme control axis labels, Please see scales section details.","code":"# ComplexHeatmap::Heatmap(mat, #     name = \"mat\", row_names_side = \"left\", row_dend_side = \"right\", #     column_names_side = \"top\", column_dend_side = \"bottom\" # ) ggheatmap(mat) +     scale_x_continuous(position = \"top\") +     scale_y_continuous(position = \"right\") +     theme(axis.text.x = element_text(angle = 60, hjust = 0)) +     anno_left(size = unit(15, \"mm\")) +     align_dendro(reorder_dendrogram = TRUE) +     scale_x_continuous(position = \"top\") +     anno_bottom(size = unit(15, \"mm\")) +     align_dendro(reorder_dendrogram = TRUE) +     scale_y_continuous(position = \"right\") +     quad_active() &     theme(plot.margin = margin()) #> → heatmap built with `geom_tile()` ggheatmap(mat) +     scale_y_continuous(breaks = NULL) +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     anno_right(size = unit(15, \"mm\")) +     align_dendro(reorder_dendrogram = TRUE) +     anno_top(size = unit(15, \"mm\")) +     align_dendro(reorder_dendrogram = TRUE) +     quad_active() &     theme(plot.margin = margin()) #> → heatmap built with `geom_tile()` ggheatmap(mat) +     theme(         axis.text.x = element_text(angle = -60, hjust = 0),         axis.text.y = element_text(face = \"bold\", size = 16)     ) +     anno_right(size = unit(15, \"mm\")) +     align_dendro(reorder_dendrogram = TRUE) +     anno_top(size = unit(15, \"mm\")) +     align_dendro(reorder_dendrogram = TRUE) +     quad_active() &     theme(plot.margin = margin()) #> → heatmap built with `geom_tile()` ggheatmap(mat) +     theme(         axis.text.x = element_text(angle = -60, hjust = 0),         axis.text.y = element_text(             face = \"bold\", size = 16,             colour = c(rep(\"red\", 10), rep(\"blue\", 8))         )     ) +     anno_right(size = unit(15, \"mm\")) +     align_dendro(reorder_dendrogram = TRUE) +     anno_top(size = unit(15, \"mm\")) +     align_dendro(reorder_dendrogram = TRUE) +     quad_active() &     theme(plot.margin = margin()) #> Warning: Vectorized input to `element_text()` is not officially supported. #> ℹ Results may be unexpected or may change in future versions of ggplot2. #> → heatmap built with `geom_tile()`"},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/single-heatmap.html","id":"split-by-k-means-clustering","dir":"Articles","previous_headings":"Heatmap split","what":"Split by k-means clustering","title":"ComplexHeatmap: single-heatmap","text":"dendrogram calculated group defined kmeans.","code":"ggheatmap(mat) +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     anno_right(size = unit(15, \"mm\")) +     align_kmeans(2L) +     align_dendro(reorder_dendrogram = TRUE) +     anno_top(size = unit(15, \"mm\")) +     align_dendro(reorder_dendrogram = TRUE) +     quad_active() &     theme(plot.margin = margin()) #> → heatmap built with `geom_tile()` ggheatmap(mat) +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     anno_right(size = unit(15, \"mm\")) +     align_dendro(reorder_dendrogram = TRUE) +     anno_top(size = unit(15, \"mm\")) +     align_kmeans(3L) +     align_dendro(reorder_dendrogram = TRUE) +     quad_active() &     theme(plot.margin = margin()) #> → heatmap built with `geom_tile()` ggheatmap(mat) +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     anno_right(size = unit(15, \"mm\")) +     align_kmeans(2L) +     align_dendro(reorder_dendrogram = TRUE) +     anno_top(size = unit(15, \"mm\")) +     align_kmeans(3L) +     align_dendro(reorder_dendrogram = TRUE) +     quad_active() &     theme(plot.margin = margin()) #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/single-heatmap.html","id":"split-by-categorical-variables","dir":"Articles","previous_headings":"Heatmap split","what":"Split by categorical variables","title":"ComplexHeatmap: single-heatmap","text":"","code":"ggheatmap(mat) +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     anno_right(size = unit(15, \"mm\")) +     align_group(rep(c(\"A\", \"B\"), 9)) +     align_dendro(reorder_dendrogram = TRUE) +     anno_top(size = unit(15, \"mm\")) +     align_group(rep(c(\"C\", \"D\"), 12)) +     align_dendro(reorder_dendrogram = TRUE) +     quad_active() &     theme(plot.margin = margin()) #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/single-heatmap.html","id":"split-by-dendrogram","dir":"Articles","previous_headings":"Heatmap split","what":"Split by dendrogram","title":"ComplexHeatmap: single-heatmap","text":"splitted dendrogram, cutted height indicated dashed line.","code":"ggheatmap(mat) +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     anno_right(size = unit(15, \"mm\")) +     align_dendro(k = 3L, reorder_dendrogram = TRUE) +     anno_top(size = unit(15, \"mm\")) +     align_dendro(k = 2L, reorder_dendrogram = TRUE) +     quad_active() &     theme(plot.margin = margin()) #> → heatmap built with `geom_tile()` ggheatmap(mat) +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     anno_right(size = unit(15, \"mm\")) +     align_dendro(aes(color = branch), k = 3L, reorder_dendrogram = TRUE) +     scale_color_brewer(palette = \"Dark2\") +     anno_top(size = unit(15, \"mm\")) +     align_dendro(k = 2L, reorder_dendrogram = TRUE) +     quad_active() &     theme(plot.margin = margin()) #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/single-heatmap.html","id":"order-of-slices-panels","dir":"Articles","previous_headings":"Heatmap split","what":"Order of slices (panels)","title":"ComplexHeatmap: single-heatmap","text":"order panels always follow factor level. Note: merging dendrogram ComplexHeatmap ggalign little different.","code":"ggheatmap(mat) +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     anno_right(size = unit(15, \"mm\")) +     align_group(rep(LETTERS[1:3], 6)) +     align_dendro(aes(color = branch),         reorder_dendrogram = TRUE,         reorder_group = TRUE,         merge_dendrogram = TRUE     ) +     scale_color_brewer(palette = \"Dark2\") +     anno_top(size = unit(15, \"mm\")) +     align_group(rep(letters[1:6], 4)) +     align_dendro(aes(color = branch),         reorder_dendrogram = TRUE,         reorder_group = TRUE,         merge_dendrogram = TRUE     ) +     quad_active() -     with_quad(theme(strip.text = element_text()), \"tr\") &     theme(plot.margin = margin()) #> → heatmap built with `geom_tile()` ggheatmap(mat) +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     anno_right(size = unit(15, \"mm\")) +     align_group(rep(LETTERS[1:3], 6)) +     align_dendro(aes(color = branch), reorder_dendrogram = TRUE) +     scale_color_brewer(palette = \"Dark2\") +     anno_top(size = unit(15, \"mm\")) +     align_group(rep(letters[1:6], 4)) +     align_dendro(aes(color = branch), reorder_dendrogram = TRUE) +     quad_active() -     with_quad(theme(strip.text = element_text()), \"tr\") &     theme(plot.margin = margin()) #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/single-heatmap.html","id":"titles-for-splitting-facet-strip-text","dir":"Articles","previous_headings":"Heatmap split","what":"Titles for splitting (facet strip text)","title":"ComplexHeatmap: single-heatmap","text":"default, facet strip text removed. can override behavior theme(strip.text = element_text()). Since align_group() create new plot, panel title can added heatmap plot. waiting complete …","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/single-heatmap.html","id":"graphic-parameters-for-splitting","dir":"Articles","previous_headings":"Heatmap split","what":"Graphic parameters for splitting","title":"ComplexHeatmap: single-heatmap","text":"","code":"ggh4x::facet_grid2(strip = ggh4x::strip_themed(     background_x = list(         element_rect(fill = \"red\"),         element_rect(fill = \"blue\"),         element_rect(fill = \"green\")     ) )) #> <ggproto object: Class FacetGrid2, FacetGrid, Facet, gg> #>     attach_axes: function #>     compute_layout: function #>     draw_back: function #>     draw_front: function #>     draw_labels: function #>     draw_panels: function #>     finish_data: function #>     finish_panels: function #>     init_scales: function #>     map_data: function #>     params: list #>     setup_aspect_ratio: function #>     setup_axes: function #>     setup_data: function #>     setup_panel_table: function #>     setup_params: function #>     shrink: TRUE #>     strip: <ggproto object: Class StripElemental, Strip, gg> #>         assemble_strip: function #>         build_strip: function #>         clip: inherit #>         draw_labels: function #>         elements: list #>         finish_strip: function #>         get_strips: function #>         given_elements: list #>         incorporate_grid: function #>         incorporate_wrap: function #>         init_strip: function #>         params: list #>         setup: function #>         setup_elements: function #>         strips: list #>         super:  <ggproto object: Class StripElemental, Strip, gg> #>     train_scales: function #>     vars: function #>     vars_combine: function #>     super:  <ggproto object: Class FacetGrid2, FacetGrid, Facet, gg>"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/single-heatmap.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"ComplexHeatmap: single-heatmap","text":"","code":"sessionInfo() #> R version 4.4.2 (2024-10-31) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.5 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggalign_0.0.5.9000 ggplot2_3.5.1      #>  #> loaded via a namespace (and not attached): #>  [1] gtable_0.3.6       jsonlite_1.8.9     dplyr_1.1.4        compiler_4.4.2     #>  [5] tidyselect_1.2.1   cluster_2.1.6      jquerylib_0.1.4    systemfonts_1.1.0  #>  [9] scales_1.3.0       textshaping_0.4.0  ggh4x_0.2.8        yaml_2.3.10        #> [13] fastmap_1.2.0      R6_2.5.1           labeling_0.4.3     generics_0.1.3     #> [17] ca_0.71.1          knitr_1.49         iterators_1.0.14   tibble_3.2.1       #> [21] desc_1.4.3         munsell_0.5.1      RColorBrewer_1.1-3 bslib_0.8.0        #> [25] pillar_1.9.0       rlang_1.1.4        utf8_1.2.4         cachem_1.1.0       #> [29] xfun_0.49          fs_1.6.5           sass_0.4.9         TSP_1.2-4          #> [33] registry_0.5-1     cli_3.6.3          withr_3.0.2        pkgdown_2.1.1      #> [37] magrittr_2.0.3     digest_0.6.37      foreach_1.5.2      grid_4.4.2         #> [41] lifecycle_1.0.4    vctrs_0.6.5        evaluate_1.0.1     glue_1.8.0         #> [45] farver_2.1.2       codetools_0.2-20   ragg_1.3.3         fansi_1.0.6        #> [49] colorspace_2.1-1   rmarkdown_2.29     seriation_1.5.6    pkgconfig_2.0.3    #> [53] tools_4.4.2        htmltools_0.5.8.1"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/stack-layout.html","id":"input-data","dir":"Articles","previous_headings":"","what":"Input data","title":"Stack Layout","text":"stack_free(), data frame required, input automatically converted using fortify_data_frame() needed. stack_align(), matrix required, input automatically converted using fortify_matrix() needed. default, stack_align()/stack_free() set layout, plot drawn add plot element:","code":"set.seed(123) small_mat <- matrix(rnorm(56), nrow = 7) rownames(small_mat) <- paste0(\"row\", seq_len(nrow(small_mat))) colnames(small_mat) <- paste0(\"column\", seq_len(ncol(small_mat))) stack_alignh(small_mat) # stack_freev(small_mat) # the same for `stack_free()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/stack-layout.html","id":"plot-element","dir":"Articles","previous_headings":"","what":"plot element","title":"Stack Layout","text":"stack_align(), plots can added regardless whether need align observations.   can stack plots vertically stack_alignv():  Note vertical stack take x-axis observations, horizontal stack take y-axis observations. stack_align() can add plot without alignment observations.  stack_free(), plots free alignment (ggfree()) can added along axis. stack_free() alone useful, since can combine multiple plots vertically horizontally align_plots() patchwork. benefits data can inherited multiple plots.","code":"stack_alignh(small_mat) + align_dendro() stack_alignh(small_mat) +     align_kmeans(centers = 3L) +     ggalign(data = rowSums) +     geom_bar(aes(value, fill = .panel), orientation = \"y\", stat = \"identity\") +     facet_grid(switch = \"y\") +     theme(strip.text = element_text()) +     align_dendro(aes(color = branch)) stack_alignv(small_mat) + align_dendro() stack_alignv() +     ggfree(aes(displ, hwy, colour = class), data = mpg) +     geom_point(size = 2) +     ggfree(aes(displ, hwy, colour = class), data = mpg) +     geom_point(size = 2) &     scale_color_brewer(palette = \"Dark2\") &     theme_bw() stack_freev(mpg) +     ggfree(aes(displ, hwy, colour = class)) +     geom_point(size = 2) +     ggfree(aes(displ, hwy, colour = class)) +     geom_point(size = 2) &     scale_color_brewer(palette = \"Dark2\") &     theme_bw()"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/stack-layout.html","id":"ggheatmapquad_layout","dir":"Articles","previous_headings":"","what":"ggheatmap()/quad_layout()","title":"Stack Layout","text":"ggheatmap()/quad_layout() can added stack layout.  However, noted earlier, stack_free() can accept plots free alignment along axis. ’s table summarizing layouts compatible stack_free():  data ggheatmap()/quad_layout() can inherit parent stack_layout(), data format must match. Otherwise, need manually provide data. ggheatmap()/quad_layout() added vertical stack_align(), inherited matrix transposed use.  ggheatmap()/quad_layout() added, elements add applied ggheatmap()/quad_layout(). can include align_* elements ggplot2 components quad_layout().  ’d like add elements stack layout rather ggheatmap()/quad_layout() layout, can easily switch ggheatmap()/quad_layout() stack layout using stack_active().  One exception ggheatmap()/quad_layout() , added another heatmap layout. Therefore, can directly add ggheatmap()/quad_layout() stack layout without using stack_active().","code":"stack_alignh(small_mat) +     ggheatmap() #> → heatmap built with `geom_tile()` alignh_quad_plot <- quad_alignh(small_mat) +     geom_boxplot(aes(value, .row_names, fill = .row_names)) +     scale_fill_brewer(palette = \"Dark2\") stack_freev() +     alignh_quad_plot +     alignh_quad_plot stack_alignv(small_mat) +     ggheatmap() #> → heatmap built with `geom_tile()` stack_alignh(small_mat) +     ggheatmap() #> → heatmap built with `geom_tile()` stack_alignh(small_mat) +     ggheatmap() +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     stack_active() +     ggalign(data = rowSums) +     geom_bar(aes(value), fill = \"red\", orientation = \"y\", stat = \"identity\") #> → heatmap built with `geom_tile()` stack_alignv(small_mat) +     ggheatmap() +     ggheatmap() #> → heatmap built with `geom_tile()` #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/stack-layout.html","id":"control-sizes","dir":"Articles","previous_headings":"","what":"Control sizes","title":"Stack Layout","text":"length 3 sizes provided stack_align()/stack_free() putting heatmap flank annotation stack layout. vertical stacks, means heatmaps left right annotations; horizontal stacks, means heatmaps top bottom annotations. first size controls relative width/height left top annotation, second controls relative size heatmap body width/height, third controls relative width/height right bottom annotation. default three rows/columns equal sizes.   way, heatmap body width/height specified quad_active() ggheatmap() won’t work.  default flank annotation fill whole stack flank, can still control size heatmap annotation quad_anno().  can also use npc unit.","code":"stack_alignv(small_mat) +     ggheatmap() +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     anno_left() +     align_dendro(aes(color = .panel), k = 3L) +     anno_right() +     ggalign(data = rowSums) +     geom_bar(aes(value, fill = .panel), orientation = \"y\", stat = \"identity\") +     ggheatmap() +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) #> → heatmap built with `geom_tile()` #> → heatmap built with `geom_tile()` # the left annotation, will have a relative size 1 # the heatmap body will have a relative width 2 # the right annotation will have a relative size 1 stack_alignv(small_mat, sizes = c(1, 2, 1)) +     ggheatmap() +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     anno_left() +     align_dendro(aes(color = .panel), k = 3L) +     anno_right() +     ggalign(data = rowSums) +     geom_bar(aes(value, fill = .panel), orientation = \"y\", stat = \"identity\") +     ggheatmap() +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) #> → heatmap built with `geom_tile()` #> → heatmap built with `geom_tile()` stack_alignv(small_mat) +     ggheatmap(width = unit(2, \"null\")) + # not work     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     anno_left() +     align_dendro(aes(color = .panel), k = 3L) +     anno_right() +     ggalign(data = rowSums) +     geom_bar(aes(value, fill = .panel), orientation = \"y\", stat = \"identity\") +     ggheatmap(width = unit(2, \"null\")) + # not work     theme(axis.text.x = element_text(angle = -60, hjust = 0)) #> → heatmap built with `geom_tile()` #> → heatmap built with `geom_tile()` stack_alignv(small_mat) +     ggheatmap() +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     # the left annotation will have a total size 2cm     anno_left(size = unit(2, \"cm\")) +     align_dendro(aes(color = .panel), k = 3L) +     anno_right() +     ggalign(data = rowSums) +     geom_bar(aes(value, fill = .panel), orientation = \"y\", stat = \"identity\") +     ggheatmap() +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) #> → heatmap built with `geom_tile()` #> → heatmap built with `geom_tile()` stack_alignv(small_mat) +     ggheatmap() +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) +     # the left annotation will have a total width 1/2 npc     anno_left(size = unit(0.5, \"npc\")) +     align_dendro(aes(color = .panel), k = 3L) +     anno_right() +     ggalign(data = rowSums) +     geom_bar(aes(value, fill = .panel), orientation = \"y\", stat = \"identity\") +     ggheatmap() +     theme(axis.text.x = element_text(angle = -60, hjust = 0)) #> → heatmap built with `geom_tile()` #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/articles/stack-layout.html","id":"session-information","dir":"Articles","previous_headings":"Control sizes","what":"Session information","title":"Stack Layout","text":"","code":"sessionInfo() #> R version 4.4.2 (2024-10-31) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.5 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggalign_0.0.5.9000 ggplot2_3.5.1      #>  #> loaded via a namespace (and not attached): #>  [1] gtable_0.3.6       jsonlite_1.8.9     dplyr_1.1.4        compiler_4.4.2     #>  [5] tidyselect_1.2.1   jquerylib_0.1.4    systemfonts_1.1.0  scales_1.3.0       #>  [9] textshaping_0.4.0  yaml_2.3.10        fastmap_1.2.0      R6_2.5.1           #> [13] labeling_0.4.3     generics_0.1.3     knitr_1.49         tibble_3.2.1       #> [17] desc_1.4.3         munsell_0.5.1      bslib_0.8.0        pillar_1.9.0       #> [21] RColorBrewer_1.1-3 rlang_1.1.4        utf8_1.2.4         cachem_1.1.0       #> [25] xfun_0.49          fs_1.6.5           sass_0.4.9         cli_3.6.3          #> [29] pkgdown_2.1.1      withr_3.0.2        magrittr_2.0.3     digest_0.6.37      #> [33] grid_4.4.2         lifecycle_1.0.4    vctrs_0.6.5        evaluate_1.0.1     #> [37] glue_1.8.0         farver_2.1.2       ragg_1.3.3         fansi_1.0.6        #> [41] colorspace_2.1-1   rmarkdown_2.29     tools_4.4.2        pkgconfig_2.0.3    #> [45] htmltools_0.5.8.1"},{"path":"https://yunuuuu.github.io/ggalign/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Yun Peng. Author, maintainer. Shixiang Wang. Author.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Peng Y, Wang S (2024). ggalign: 'ggplot2' Extension Consistent Axis Alignment. R package version 0.0.5.9000, https://yunuuuu.github.io/ggalign/, https://github.com/Yunuuuu/ggalign.","code":"@Manual{,   title = {ggalign: A 'ggplot2' Extension for Consistent Axis Alignment},   author = {Yun Peng and Shixiang Wang},   year = {2024},   note = {R package version 0.0.5.9000, https://yunuuuu.github.io/ggalign/},   url = {https://github.com/Yunuuuu/ggalign}, }"},{"path":"https://yunuuuu.github.io/ggalign/dev/index.html","id":"ggalign-","dir":"","previous_headings":"","what":"A ggplot2 Extension for Consistent Axis Alignment","title":"A ggplot2 Extension for Consistent Axis Alignment","text":"package extends ggplot2 providing advanced tools aligning organizing multiple plots, particularly automatically reorder observations, dendrogram. offers fine control layout adjustment plot annotations, enabling create complex, publication-quality visualizations still using familiar grammar ggplot2.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/index.html","id":"why-use-ggalign","dir":"","previous_headings":"","what":"Why use ggalign?","title":"A ggplot2 Extension for Consistent Axis Alignment","text":"ggalign focuses aligning observations across multiple plots. leverages \"number observations\" vctrs package NROW() function maintain consistency plot organization. ’ve ever struggled aligning plots self-contained ordering (like dendrogram), applying consistent grouping ordering across multiple plots (e.g., k-means clustering), ggalign designed make easier. package integrates seamlessly ggplot2, providing flexibility use geoms, scales, components complex visualizations.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A ggplot2 Extension for Consistent Axis Alignment","text":"can install ggalign CRAN using: Alternatively, install development version r-universe : GitHub :","code":"install.packages(\"ggalign\") install.packages(\"ggalign\",     repos = c(\"https://yunuuuu.r-universe.dev\", \"https://cloud.r-project.org\") ) # install.packages(\"remotes\") remotes::install_github(\"Yunuuuu/ggalign\")"},{"path":"https://yunuuuu.github.io/ggalign/dev/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"A ggplot2 Extension for Consistent Axis Alignment","text":"usage ggalign simple ’re familiar ggplot2 syntax, typical workflow includes: Initialize layout using quad_layout() (ggside()/ggheatmap()/ggoncoplot()), stack_layout() (ggstack()/cross_align()). align_group(): Group observations panel group variable. align_kmeans(): Group observations panel kmeans. align_order(): Reorder layout observations based statistical weights manually specifying observation index. align_dendro(): Reorder Group layout based hierarchical clustering. Adding plots ggalign() ggfree(), layer additional ggplot2 elements geoms, stats, scales. documents release version, please see https://yunuuuu.github.io/ggalign/, documents development version, please see https://yunuuuu.github.io/ggalign/dev/.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/index.html","id":"basic-example","dir":"","previous_headings":"","what":"Basic example","title":"A ggplot2 Extension for Consistent Axis Alignment","text":", ’ll walk basic example using ggalign create heatmap dendrogram.  Marginal plots can also created similar syntax:  tanglegram can created cross_layout():  Reveal relationships two heatmap different ordering index:","code":"library(ggalign) #> Loading required package: ggplot2 set.seed(123) small_mat <- matrix(rnorm(72), nrow = 9) rownames(small_mat) <- paste0(\"row\", seq_len(nrow(small_mat))) colnames(small_mat) <- paste0(\"column\", seq_len(ncol(small_mat)))  # initialize the heatmap layout, we can regard it as a normal ggplot object ggheatmap(small_mat) +     # we can directly modify geoms, scales and other ggplot2 components     scale_fill_viridis_c() +     # add annotation in the top     anno_top() +     # in the top annotation, we add a dendrogram, and split observations into 3 groups     align_dendro(aes(color = branch), k = 3) +     # in the dendrogram we add a point geom     geom_point(aes(color = branch, y = y)) +     # change color mapping for the dendrogram     scale_color_brewer(palette = \"Dark2\") #> → heatmap built with `geom_tile()` ggside(mpg, aes(displ, hwy, colour = class)) -     # set default theme for all plots in the layout     plot_theme(theme_bw()) +     geom_point(size = 2) +     # add top annotation     anno_top(size = 0.3) -     # set default theme for the top annotation     plot_theme(theme_no_axes(\"tb\")) +     # add a plot in the top annotation     ggfree() +     geom_density(aes(displ, y = after_stat(density), colour = class), position = \"stack\") +     anno_right(size = 0.3) -     # set default theme for the right annotation     plot_theme(theme_no_axes(\"lr\")) +     # add a plot in the right annotation     ggfree() +     geom_density(aes(x = after_stat(density), hwy, colour = class),         position = \"stack\"     ) +     theme(axis.text.x = element_text(angle = 90, vjust = .5)) &     scale_color_brewer(palette = \"Dark2\") set.seed(1234) big_mat <- matrix(rnorm(200), nrow = 20) cross_alignh(big_mat) +     # group the observations based on kmeans clustering     align_kmeans(3L) +     # add a dendrogram     align_dendro(aes(color = branch), merge_dendrogram = TRUE) +     # reverse the x-axis of the dendrogram     scale_x_reverse() +     # reset the ordering index by original dendrogram, and add a plot to     # indicate the transition from the old layout ordering index # to the new     # ordering index     cross_link() +     # add connection line     geom_line(aes(x = hand, group = index)) +     # remove x labels and title     scale_x_discrete(breaks = NULL, name = NULL) +     # add another dendrogram based different method     align_dendro(aes(color = branch), method = \"ward.D2\", merge_dendrogram = TRUE) cross_alignh(big_mat) +     # group the observations based on kmeans clustering     align_kmeans(2L) +     # add a new heatmap     ggheatmap() +     # initialize the left annotation     anno_left() +     # add a dendrogram in the left annotation     align_dendro(aes(color = branch), merge_dendrogram = TRUE) +     # move to the cross layout      stack_active() +     # reset the ordering index by original dendrogram, and add a plot to     # indicate the transition from the old layout ordering index # to the new     # ordering index     cross_link() +     # add connection line     geom_line(aes(x = hand, group = index)) +     # remove x labels and title     scale_x_discrete(breaks = NULL, name = NULL) +     # add another heatmap     ggheatmap() +     # initialize the right annotation     anno_right() +     # add a dendrogram in the right annotation     align_dendro(aes(color = branch), method = \"ward.D2\", merge_dendrogram = TRUE) #> → heatmap built with `geom_tile()` #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/index.html","id":"compare-with-other-ggplot2-heatmap-extension","dir":"","previous_headings":"","what":"Compare with other ggplot2 heatmap extension","title":"A ggplot2 Extension for Consistent Axis Alignment","text":"ggalign offers advantages extensions like ggheatmap providing full compatibility ggplot2. ggalign, can: Seamlessly integrate ggplot2 geoms, stats, scales et al. layouts. Align dendrograms even facetted plots. Easily create complex layouts, including multiple heatmaps arranged vertically horizontally.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/index.html","id":"pros","dir":"","previous_headings":"Compare with ComplexHeatmap","what":"Pros","title":"A ggplot2 Extension for Consistent Axis Alignment","text":"Full integration ggplot2 ecosystem. Heatmap annotation axes legends automatically generated. Dendrogram can easily customized colored. Flexible control plot size spacing. Can easily align ggplot2 plots panel area. Can easily extend clustering algorithm, annotation plot.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/index.html","id":"cons","dir":"","previous_headings":"Compare with ComplexHeatmap","what":"Cons","title":"A ggplot2 Extension for Consistent Axis Alignment","text":"Fewer Built-Annotations: May require additional coding specific annotations customization compared extensive built-annotation function ComplexHeatmap.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/index.html","id":"more-complex-examples","dir":"","previous_headings":"","what":"More Complex Examples","title":"A ggplot2 Extension for Consistent Axis Alignment","text":"advanced visualizations using ggalign:","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/Layout-class.html","id":null,"dir":"Reference","previous_headings":"","what":"A Layout object — Layout-class","title":"A Layout object — Layout-class","text":"Layout object defines place plots.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/active.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Adding Context Settings — active","title":"Plot Adding Context Settings — active","text":"settings control behavior plot added layout, well arrangement individual plot areas within layout.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/active.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Adding Context Settings — active","text":"","code":"active(order = waiver(), use = waiver(), name = waiver())"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/active.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Adding Context Settings — active","text":"order integer specifying order plot area within layout. use logical (TRUE/FALSE) indicating whether set active context current plot added layout. TRUE, subsequent ggplot elements applied plot. name string specifying plot's name, useful switching active contexts argument functions like quad_anno()/stack_switch().","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/active.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Adding Context Settings — active","text":"default, active context set functions add plot areas. allows ggplot2 elements-geoms, stats, scales, themes- seamlessly added current plot area. default ordering plot areas top bottom left right, depending layout orientation. However, users can customize order using order argument.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a New align Object — align","title":"Create a New align Object — align","text":"align object interacts layout object reorder split observations , cases, add plot components layout.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a New align Object — align","text":"","code":"align(   align_class,   params,   data,   size = NULL,   controls = NULL,   limits = TRUE,   facet = TRUE,   no_axes = NULL,   active = NULL,   free_guides = deprecated(),   free_spaces = deprecated(),   plot_data = deprecated(),   theme = deprecated(),   free_labs = deprecated(),   check.param = TRUE,   call = caller_call() )"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a New align Object — align","text":"align_class Align object. params list parameters align_class. data Options data: matrix, data frame, atomic vector. waiver(): Uses layout matrix. NULL: data set. function (including purrr-like lambda syntax) applied layout matrix. size relative size plot, can specified unit. controls Options controls: NULL: Used align_*() functions add plot. waiver(): Try infer controls based data. limits Logical; TRUE, sets layout limits plot. facet Logical; TRUE, applies facets layout. FALSE, limits also set FALSE. no_axes Logical; TRUE, removes axes elements alignment axis using theme_no_axes(). default, controled option- \"ggalign.align_no_axes\". active active() object defines context settings added layout. free_guides Please use plot_align() function instead. free_spaces Please use plot_align() function instead. plot_data Please use plot_data() function instead. theme Please use plot_theme() function instead. free_labs Please use plot_align() function instead. check.param Logical; TRUE, checks parameters provides warnings necessary. call call used construct Align object, reporting messages.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a New align Object — align","text":"new align object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a New align Object — align","text":"Align* objects just ggproto() object, descended top-level Align, implements various methods fields. create new type Align* object, typically want override one following: setup_params: Prepare parameter check parameters used plot. setup_data: Prepare data used plot. compute: method used compute statistics. layout: method used group observations panel reorder observations. draw: method used draw plot. Must return ggplot object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align.html","id":"axis-alignment-for-observations","dir":"Reference","previous_headings":"","what":"Axis Alignment for Observations","title":"Create a New align Object — align","text":"important note consider rows observations, meaning vec_size(data)/NROW(data) must match number observations along axis used alignment (x-axis vertical stack layout, y-axis horizontal stack layout). quad_layout()/ggheatmap(): column annotation, layout matrix transposed use (data function, applied transposed matrix), column annotation uses columns observations alignment requires rows. stack_layout(): layout matrix used , aligning plots along single axis.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a New align Object — align","text":"","code":"align_gg() #> $workflow #> <ggproto object: Class AlignGG, Align, AlignProto, gg> #>     build: function #>     call: call #>     compute: function #>     data: NULL #>     direction: NULL #>     draw: function #>     extra_params:  #>     facet: TRUE #>     finish: function #>     ggplot: function #>     initialize: function #>     input_data: waiver #>     input_params: list #>     labels: NULL #>     layout: function #>     limits: TRUE #>     lock: function #>     nobs: function #>     parameters: function #>     params: NULL #>     position: NULL #>     setup_data: function #>     setup_params: function #>     statistics: NULL #>     unlock: function #>     super:  <ggproto object: Class AlignGG, Align, AlignProto, gg> #>  #> $no_axes #> [1] TRUE #>  #> $controls #> $controls$plot_data #> $data #> list() #> attr(,\"class\") #> [1] \"waiver\" #>  #> $inherit #> [1] FALSE #>  #> attr(,\"__ggalign.option_name__\") #> [1] \"plot_data\" #> attr(,\"class\") #> [1] \"plot_data\"      \"ggalign_option\" #>  #> $controls$plot_theme #>  Named list() #>  - attr(*, \"class\")= chr [1:4] \"plot_theme\" \"theme\" \"gg\" \"ggalign_option\" #>  - attr(*, \"complete\")= logi FALSE #>  - attr(*, \"validate\")= logi TRUE #>  - attr(*, \"__ggalign.option_name__\")= chr \"plot_theme\" #>  #> $controls$plot_align #> $free_spaces #> list() #> attr(,\"class\") #> [1] \"waiver\" #>  #> $free_labs #> list() #> attr(,\"class\") #> [1] \"waiver\" #>  #> $guides #> list() #> attr(,\"class\") #> [1] \"waiver\" #>  #> attr(,\"__ggalign.option_name__\") #> [1] \"plot_align\" #> attr(,\"class\") #> [1] \"plot_align\"     \"ggalign_option\" #>  #>  #> $plot #> NULL #>  #> $active #> $order #> [1] NA #>  #> $use #> [1] TRUE #>  #> $name #> [1] NA #>  #> attr(,\"class\") #> [1] \"ggalign_active\" #>  #> $size #> [1] NAnull #>  #> attr(,\"class\") #> [1] \"ggalign_align_align\" \"ggalign_align_plot\"  \"ggalign_plot\"        align_dendro() #> $workflow #> <ggproto object: Class AlignDendro, Align, AlignProto, gg> #>     build: function #>     call: call #>     compute: function #>     data: NULL #>     direction: NULL #>     draw: function #>     extra_params:  #>     facet: TRUE #>     finish: function #>     ggplot: function #>     initialize: function #>     input_data: waiver #>     input_params: list #>     labels: NULL #>     layout: function #>     limits: TRUE #>     lock: function #>     nobs: function #>     parameters: function #>     params: NULL #>     position: NULL #>     setup_data: function #>     setup_params: function #>     statistics: NULL #>     unlock: function #>     super:  <ggproto object: Class AlignDendro, Align, AlignProto, gg> #>  #> $no_axes #> [1] TRUE #>  #> $controls #> $controls$plot_data #> $data #> NULL #>  #> $inherit #> [1] FALSE #>  #> attr(,\"__ggalign.option_name__\") #> [1] \"plot_data\" #> attr(,\"class\") #> [1] \"plot_data\"      \"ggalign_option\" #>  #> $controls$plot_theme #>  Named list() #>  - attr(*, \"class\")= chr [1:4] \"plot_theme\" \"theme\" \"gg\" \"ggalign_option\" #>  - attr(*, \"complete\")= logi FALSE #>  - attr(*, \"validate\")= logi TRUE #>  - attr(*, \"__ggalign.option_name__\")= chr \"plot_theme\" #>  #> $controls$plot_align #> $free_spaces #> list() #> attr(,\"class\") #> [1] \"waiver\" #>  #> $free_labs #> list() #> attr(,\"class\") #> [1] \"waiver\" #>  #> $guides #> list() #> attr(,\"class\") #> [1] \"waiver\" #>  #> attr(,\"__ggalign.option_name__\") #> [1] \"plot_align\" #> attr(,\"class\") #> [1] \"plot_align\"     \"ggalign_option\" #>  #>  #> $plot #> NULL #>  #> $active #> $order #> [1] NA #>  #> $use #> [1] TRUE #>  #> $name #> [1] NA #>  #> attr(,\"class\") #> [1] \"ggalign_active\" #>  #> $size #> [1] NAnull #>  #> attr(,\"class\") #> [1] \"ggalign_align_align\" \"ggalign_align_plot\"  \"ggalign_plot\""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align_dendro.html","id":null,"dir":"Reference","previous_headings":"","what":"Reorder or Group observations based on hierarchical clustering — align_dendro","title":"Reorder or Group observations based on hierarchical clustering — align_dendro","text":"function aligns observations within layout according hierarchical clustering tree, enabling reordering grouping elements based clustering results. align_dendro differs align_hclust add plot area.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align_dendro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reorder or Group observations based on hierarchical clustering — align_dendro","text":"","code":"align_dendro(   mapping = aes(),   ...,   distance = \"euclidean\",   method = \"complete\",   use_missing = \"pairwise.complete.obs\",   reorder_dendrogram = FALSE,   merge_dendrogram = FALSE,   reorder_group = FALSE,   k = NULL,   h = NULL,   cutree = NULL,   plot_dendrogram = TRUE,   plot_cut_height = NULL,   root = NULL,   center = FALSE,   type = \"rectangle\",   size = NULL,   data = NULL,   no_axes = NULL,   active = NULL,   free_guides = deprecated(),   free_spaces = deprecated(),   plot_data = deprecated(),   theme = deprecated(),   free_labs = deprecated(),   set_context = deprecated(),   order = deprecated(),   name = deprecated() )  align_hclust(   distance = \"euclidean\",   method = \"complete\",   use_missing = \"pairwise.complete.obs\",   reorder_dendrogram = FALSE,   merge_dendrogram = FALSE,   reorder_group = FALSE,   k = NULL,   h = NULL,   cutree = NULL,   root = NULL,   data = NULL,   active = NULL )"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align_dendro.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reorder or Group observations based on hierarchical clustering — align_dendro","text":"mapping Default list aesthetic mappings use plot. specified, must supplied layer added plot. ... <dyn-dots> Additional arguments passed geom_segment(). distance string distance measure used. must one \"euclidean\", \"maximum\", \"manhattan\", \"canberra\", \"binary\" \"minkowski\".  Correlation coefficient can also used, including \"pearson\", \"spearman\" \"kendall\". way, 1 - cor used distance. addition, can also provide dist object directly function return dist object. Use NULL, want calculate distance. method string agglomeration method used. (unambiguous abbreviation ) one \"ward.D\", \"ward.D2\", \"single\", \"complete\", \"average\" (= UPGMA), \"mcquitty\" (= WPGMA), \"median\" (= WPGMC) \"centroid\" (= UPGMC). can also provide function accepts calculated distance (input matrix distance NULL) returns hclust object. Alternative, can supply object can coerced hclust. use_missing optional character string giving method computing covariances presence missing values. must (abbreviation ) one strings \"everything\", \".obs\", \"complete.obs\", \"na..complete\", \"pairwise.complete.obs\". used distance correlation coefficient string. reorder_dendrogram single boolean value indicating whether reorder dendrogram based means. Alternatively, can provide custom function accepts hclust object data used generate tree, returning either hclust dendrogram object. Default FALSE. merge_dendrogram single boolean value, indicates whether merge multiple dendrograms, used previous groups established. Default: FALSE. reorder_group single boolean value, indicates whether Hierarchical Clustering groups, used previous groups established. Default: FALSE. k integer scalar indicates desired number groups. h numeric scalar indicates heights tree cut. cutree function used cut hclust tree. accept four arguments: hclust tree object, distance (applicable method string function performing hierarchical clustering), k (number clusters), h (height cut tree). default, cutree() used. plot_dendrogram boolean value indicates whether plot dendrogram tree. plot_cut_height boolean value indicates whether plot cut height. root length one string numeric indicates root branch. center boolean value. TRUE, nodes plotted centered respect leaves branch. Otherwise (default), plot middle direct child nodes. type string indicates plot type, \"rectangle\" \"triangle\". size relative size plot, can specified unit. data matrix-like object. default, inherits layout matrix. no_axes Logical; TRUE, removes axes elements alignment axis using theme_no_axes(). default, controled option- \"ggalign.align_no_axes\". active active() object defines context settings added layout. free_guides Please use plot_align() function instead. free_spaces Please use plot_align() function instead. plot_data Please use plot_data() function instead. theme Please use plot_theme() function instead. free_labs Please use plot_align() function instead. set_context Please use active argument instead. order Please use active argument instead. name Please use active argument instead.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align_dendro.html","id":"ggplot-specification","dir":"Reference","previous_headings":"","what":"ggplot2 specification","title":"Reorder or Group observations based on hierarchical clustering — align_dendro","text":"align_dendro initializes ggplot data mapping. internal always use default mapping aes(x = .data$x, y = .data$y). default ggplot data node coordinates edge data attached ggalign attribute, addition, geom_segment layer data edge coordinates added. node tree segments edge coordinates contains following columns: index: original index tree current node label: node label text x y: x-axis y-axis coordinates current node start node current edge. xend yend: x-axis y-axis coordinates terminal node current edge. branch: branch current node edge . can use column color different groups. panel: panel current node , split plot panel using facet_grid, column show panel current node edge . Note: nodes may fall outside panel (two panel), possible NA values column. .panel: Similar panel column, always give correct branch usage ggplot facet. panel1 panel2: panel1 panel2 variables functionality panel, specifically edge data correspond nodes edge. leaf: logical value indicates whether current node leaf.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align_dendro.html","id":"axis-alignment-for-observations","dir":"Reference","previous_headings":"","what":"Axis Alignment for Observations","title":"Reorder or Group observations based on hierarchical clustering — align_dendro","text":"important note consider rows observations, meaning vec_size(data)/NROW(data) must match number observations along axis used alignment (x-axis vertical stack layout, y-axis horizontal stack layout). quad_layout()/ggheatmap(): column annotation, layout matrix transposed use (data function, applied transposed matrix), column annotation uses columns observations alignment requires rows. stack_layout(): layout matrix used , aligning plots along single axis.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align_dendro.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reorder or Group observations based on hierarchical clustering — align_dendro","text":"","code":"# align_dendro will always add a plot area ggheatmap(matrix(rnorm(81), nrow = 9)) +     anno_top() +     align_dendro() #> → heatmap built with `geom_tile()`  ggheatmap(matrix(rnorm(81), nrow = 9)) +     anno_top() +     align_dendro(k = 3L) #> → heatmap built with `geom_tile()`   # align_hclust won't add a dendrogram ggheatmap(matrix(rnorm(81), nrow = 9)) +     anno_top() +     align_dendro(k = 3L) #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align_gg.html","id":null,"dir":"Reference","previous_headings":"","what":"Create ggplot object — align_gg","title":"Create ggplot object — align_gg","text":"align_gg() similar ggplot initializes ggplot data mapping. align_* functions. align_gg() allowing provide data various formats, including matrices, data frames, simple vectors. default, inherit layout. function, apply layout matrix.  ggalign alias align_gg.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align_gg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create ggplot object — align_gg","text":"","code":"align_gg(   mapping = aes(),   size = NULL,   data = waiver(),   limits = TRUE,   facet = TRUE,   no_axes = NULL,   active = NULL,   set_context = deprecated(),   order = deprecated(),   name = deprecated(),   free_guides = deprecated(),   free_spaces = deprecated(),   plot_data = deprecated(),   theme = deprecated(),   free_labs = deprecated() )"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align_gg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create ggplot object — align_gg","text":"mapping Default list aesthetic mappings use plot. specified, must supplied layer added plot. size relative size plot, can specified unit. data flexible input specifies data used NULL: data set. waiver(): Uses layout matrix. function (including purrr-like lambda syntax) applied layout matrix, must return matrix. want transform final plot data, please use plot_data(). matrix, data frame, atomic vector. limits Logical; TRUE, sets layout limits plot. facet Logical; TRUE, applies facets layout. FALSE, limits also set FALSE. no_axes Logical; TRUE, removes axes elements alignment axis using theme_no_axes(). default, controled option- \"ggalign.align_no_axes\". active active() object defines context settings added layout. set_context Please use active argument instead. order Please use active argument instead. name Please use active argument instead. free_guides Please use plot_align() function instead. free_spaces Please use plot_align() function instead. plot_data Please use plot_data() function instead. theme Please use plot_theme() function instead. free_labs Please use plot_align() function instead.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align_gg.html","id":"ggplot-specification","dir":"Reference","previous_headings":"","what":"ggplot2 specification","title":"Create ggplot object — align_gg","text":"align_gg initializes ggplot data mapping. align_gg() always applies default mapping axis data index layout. mapping aes(y = .data$.y) horizontal stack layout (including left right annotation) aes(x = .data$.x) vertical stack layout (including top bottom annotation). matrix input automatically melted long foramted data frame. Atomic vector put value column data frame. case input data already data frame, 4 additional columns (.x/.y, .names, .index, .panel) added data frame. data underlying ggplot object contain following columns: .panel: panel aligned axis. means x-axis vertical stack layout (including top bottom annotation), y-axis horizontal stack layout (including left right annotation). .x .y: x y coordinates .names (vec_names()) .index (vec_size()/NROW()): factor names (applicable names exists) integer index original data. .row_names .row_index: row names integer row index original matrix (applicable data matrix). .column_names .column_index: column names column index original matrix (applicable data matrix). value: actual value (applicable data matrix atomic vector). recommended use .x/.y, .names x/y mapping. data inherits quad_layout()/ggheatmap(), additional column added. .extra_panel: panel information column (left right annotation) row (top bottom annotation).","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align_gg.html","id":"axis-alignment-for-observations","dir":"Reference","previous_headings":"","what":"Axis Alignment for Observations","title":"Create ggplot object — align_gg","text":"important note consider rows observations, meaning vec_size(data)/NROW(data) must match number observations along axis used alignment (x-axis vertical stack layout, y-axis horizontal stack layout). quad_layout()/ggheatmap(): column annotation, layout matrix transposed use (data function, applied transposed matrix), column annotation uses columns observations alignment requires rows. stack_layout(): layout matrix used , aligning plots along single axis.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align_gg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create ggplot object — align_gg","text":"","code":"ggheatmap(matrix(rnorm(81), nrow = 9)) +     anno_top() +     ggalign() +     geom_point(aes(y = value)) #> → heatmap built with `geom_tile()`   # if data is `NULL`, a three column data frame will be created # (`.panel`, `.index`, `.x`/`.y`) ggheatmap(matrix(rnorm(81), nrow = 9)) +     anno_top(size = 0.5) +     align_dendro(k = 3L) +     ggalign(data = NULL, size = 0.2) +     geom_tile(aes(y = 1L, fill = .panel)) #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Group and align observations based on a group vector — align_group","title":"Group and align observations based on a group vector — align_group","text":"Splits observations groups, slice ordering based group levels.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group and align observations based on a group vector — align_group","text":"","code":"align_group(   group,   active = NULL,   set_context = deprecated(),   name = deprecated() )"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group and align observations based on a group vector — align_group","text":"group character define groups observations. active active() object defines context settings added layout. set_context Please use active argument instead. name Please use active argument instead.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align_group.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group and align observations based on a group vector — align_group","text":"","code":"set.seed(1L) small_mat <- matrix(rnorm(81), nrow = 9) ggheatmap(small_mat) +     anno_top() +     align_group(sample(letters[1:4], ncol(small_mat), replace = TRUE)) #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align_kmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Split observations by k-means clustering groups. — align_kmeans","title":"Split observations by k-means clustering groups. — align_kmeans","text":"Aligns groups observations based k-means clustering, enabling observation splits cluster groups.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align_kmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split observations by k-means clustering groups. — align_kmeans","text":"","code":"align_kmeans(   centers,   ...,   data = NULL,   active = NULL,   set_context = deprecated(),   name = deprecated() )"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align_kmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split observations by k-means clustering groups. — align_kmeans","text":"centers either number clusters, say \\(k\\), set     initial (distinct) cluster centres.  number, random set     (distinct) rows x chosen initial centres. ... Arguments passed stats::kmeans iter.max maximum number iterations allowed. nstart centers number, many random sets     chosen? algorithm character: may abbreviated.  Note     \"Lloyd\" \"Forgy\" alternative names one     algorithm. trace logical integer number, currently used     default method (\"Hartigan-Wong\"): positive (true),     tracing information progress algorithm     produced.  Higher values may produce tracing information. data matrix-like object. default, inherits layout matrix. active active() object defines context settings added layout. set_context Please use active argument instead. name Please use active argument instead.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align_kmeans.html","id":"axis-alignment-for-observations","dir":"Reference","previous_headings":"","what":"Axis Alignment for Observations","title":"Split observations by k-means clustering groups. — align_kmeans","text":"important note consider rows observations, meaning vec_size(data)/NROW(data) must match number observations along axis used alignment (x-axis vertical stack layout, y-axis horizontal stack layout). quad_layout()/ggheatmap(): column annotation, layout matrix transposed use (data function, applied transposed matrix), column annotation uses columns observations alignment requires rows. stack_layout(): layout matrix used , aligning plots along single axis.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align_kmeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split observations by k-means clustering groups. — align_kmeans","text":"","code":"ggheatmap(matrix(rnorm(81), nrow = 9)) +     anno_top() +     align_kmeans(3L) #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Order observations based on weights — align_order","title":"Order observations based on weights — align_order","text":"Ordering observations based summary weights specified ordering character integer index.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Order observations based on weights — align_order","text":"","code":"align_order(   weights = rowMeans,   ...,   reverse = FALSE,   strict = TRUE,   data = NULL,   active = NULL,   set_context = deprecated(),   name = deprecated() )"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Order observations based on weights — align_order","text":"weights summary function accepts data returns weights observations. Alternatively, can provide ordering index either integer character. Since characters designated character indices, wish specify function name string, must enclose (). ... <dyn-dots> Additional arguments passed function provided weights argument. reverse boolean value. sort order reverse? strict boolean value indicates whether order strict. previous groups established, strict FALSE, reorder observations group. data matrix, data frame, atomic vector used input weights function. Alternatively, can specify function (including purrr-like lambda syntax) applied layout matrix, transforming necessary weight calculations. default, inherit layout matrix. active active() object defines context settings added layout. set_context Please use active argument instead. name Please use active argument instead.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align_order.html","id":"axis-alignment-for-observations","dir":"Reference","previous_headings":"","what":"Axis Alignment for Observations","title":"Order observations based on weights — align_order","text":"important note consider rows observations, meaning vec_size(data)/NROW(data) must match number observations along axis used alignment (x-axis vertical stack layout, y-axis horizontal stack layout). quad_layout()/ggheatmap(): column annotation, layout matrix transposed use (data function, applied transposed matrix), column annotation uses columns observations alignment requires rows. stack_layout(): layout matrix used , aligning plots along single axis.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align_order.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Order observations based on weights — align_order","text":"","code":"ggheatmap(matrix(rnorm(81), nrow = 9)) +     anno_left() +     align_order(I(\"rowMeans\")) #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create ggplot object with layout panel data — align_panel","title":"Create ggplot object with layout panel data — align_panel","text":"function deprecated realised special case ggalian() function. Please use ggalign(data = NULL) instead.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create ggplot object with layout panel data — align_panel","text":"","code":"align_panel(...)  ggpanel(...)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrange multiple plots into a grid — align_plots","title":"Arrange multiple plots into a grid — align_plots","text":"Arrange multiple plots grid","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrange multiple plots into a grid — align_plots","text":"","code":"align_plots(   ...,   ncol = NULL,   nrow = NULL,   byrow = TRUE,   widths = NA,   heights = NA,   design = NULL,   guides = waiver(),   theme = NULL )"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrange multiple plots into a grid — align_plots","text":"... <dyn-dots> list plots, ususally ggplot object. Use NULL indicate empty spacer. ncol, nrow dimensions grid create - NULL use logic facet_wrap() set dimensions byrow FALSE plots filled column-major order. widths, heights relative widths heights column row grid. get repeated match dimensions grid. special value NA behave 1null unit unless fixed aspect plot inserted case allow dimension expand contract match aspect ratio content. design Specification location areas layout. Can either specified text string concatenating calls area() together. guides string one \"t\", \"l\", \"b\", \"r\" indicating side guide legends collected. Defaults waiver(), inherits parent layout. parent layout, NULL provided, guides collected. theme theme() used render guides, title, subtitle, caption, margins, patch.title, panel.border, background. NULL (default), inherit parent layout.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align_plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Arrange multiple plots into a grid — align_plots","text":"alignpatches object.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align_plots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arrange multiple plots into a grid — align_plots","text":"","code":"# directly copied from patchwork p1 <- ggplot(mtcars) +     geom_point(aes(mpg, disp)) p2 <- ggplot(mtcars) +     geom_boxplot(aes(gear, disp, group = gear)) p3 <- ggplot(mtcars) +     geom_bar(aes(gear)) +     facet_wrap(~cyl) p4 <- ggplot(mtcars) +     geom_bar(aes(carb)) p5 <- ggplot(mtcars) +     geom_violin(aes(cyl, mpg, group = cyl))  # Either add the plots as single arguments align_plots(p1, p2, p3, p4, p5)   # Or use bang-bang-bang to add a list align_plots(!!!list(p1, p2, p3), p4, p5)   # Match plots to areas by name design <- \"#BB            AA#\" align_plots(B = p1, A = p2, design = design)   # Compare to not using named plot arguments align_plots(p1, p2, design = design)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align_reorder.html","id":null,"dir":"Reference","previous_headings":"","what":"Reorders layout observations based on specific statistics. — align_reorder","title":"Reorders layout observations based on specific statistics. — align_reorder","text":"Reorders layout observations based specific statistics.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align_reorder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reorders layout observations based on specific statistics. — align_reorder","text":"","code":"align_reorder(   stat,   ...,   reverse = FALSE,   strict = TRUE,   data = NULL,   active = NULL,   set_context = deprecated(),   name = deprecated() )"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align_reorder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reorders layout observations based on specific statistics. — align_reorder","text":"stat summary function accepts data returns statistic, call order2() extract ordering information. ... <dyn-dots> Additional arguments passed function provided stat argument. reverse boolean value. sort order reverse? strict boolean value indicates whether order strict. previous groups established, strict FALSE, reorder observations group. data matrix, data frame, atomic vector used input stat function. Alternatively, can specify function (including purrr-like lambda syntax) applied layout matrix, transforming necessary statistic calculations. default, inherit layout matrix. active active() object defines context settings added layout. set_context Please use active argument instead. name Please use active argument instead.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align_reorder.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reorders layout observations based on specific statistics. — align_reorder","text":"align_reorder() function differs align_order() wts argument align_order() must return atomic weights observation. contrast, stat argument align_reorder() can return complex structures, hclust dendrogram, among others. Typically, can achieve functionality align_reorder() using align_order() manually extracting ordering information statistic.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align_reorder.html","id":"axis-alignment-for-observations","dir":"Reference","previous_headings":"","what":"Axis Alignment for Observations","title":"Reorders layout observations based on specific statistics. — align_reorder","text":"important note consider rows observations, meaning vec_size(data)/NROW(data) must match number observations along axis used alignment (x-axis vertical stack layout, y-axis horizontal stack layout). quad_layout()/ggheatmap(): column annotation, layout matrix transposed use (data function, applied transposed matrix), column annotation uses columns observations alignment requires rows. stack_layout(): layout matrix used , aligning plots along single axis.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/align_reorder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reorders layout observations based on specific statistics. — align_reorder","text":"","code":"ggheatmap(matrix(rnorm(81), nrow = 9)) +     anno_left() +     align_reorder(hclust2) #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/alignpatch.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare plots to be aligned with align_plots — alignpatch","title":"Prepare plots to be aligned with align_plots — alignpatch","text":"Prepare plots aligned align_plots","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/alignpatch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare plots to be aligned with align_plots — alignpatch","text":"","code":"alignpatch(x)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/alignpatch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare plots to be aligned with align_plots — alignpatch","text":"x plot object prepared alignment.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/alignpatch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare plots to be aligned with align_plots — alignpatch","text":"Patch object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/alignpatch.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare plots to be aligned with align_plots — alignpatch","text":"ggalign implement alignpatch method following objects: ggplot alignpatches wrapped_plot patch wrapped_patch spacer","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/alignpatch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare plots to be aligned with align_plots — alignpatch","text":"","code":"alignpatch(ggplot()) #> <ggproto object: Class PatchGgplot, Patch, ggalign, gg> #>     align_border: function #>     align_free_border: function #>     align_panel_sizes: function #>     collect_guides: function #>     free_border: function #>     free_lab: function #>     get_sizes: function #>     patch_gtable: function #>     plot: gg, ggplot #>     respect: function #>     set_guides: function #>     set_theme: function #>     split_gt: function #>     super:  <ggproto object: Class PatchGgplot, Patch, ggalign, gg>"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/area.html","id":null,"dir":"Reference","previous_headings":"","what":"Define the plotting areas in align_plots — area","title":"Define the plotting areas in align_plots — area","text":"small helper used specify single area rectangular grid contain plot. Objects constructed area() can concatenated together c() order specify multiple areas.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define the plotting areas in align_plots — area","text":"","code":"area(t, l, b = t, r = l)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define the plotting areas in align_plots — area","text":"t, b top bottom bounds area grid l, r left right bounds area int grid","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define the plotting areas in align_plots — area","text":"ggalign_area object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/area.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define the plotting areas in align_plots — area","text":"grid areas specified reference enumerate rows top bottom, coloumns left right. means t l always less equal b r respectively. Instead specifying area placement combination area() calls, possible instead pass single string   equivalent ","code":"areas <- c(area(1, 1, 2, 1),            area(2, 3, 3, 3)) areas < -\"A##           A#B           ##B\""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/area.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define the plotting areas in align_plots — area","text":"","code":"p1 <- ggplot(mtcars) +     geom_point(aes(mpg, disp)) p2 <- ggplot(mtcars) +     geom_boxplot(aes(gear, disp, group = gear)) p3 <- ggplot(mtcars) +     geom_bar(aes(gear)) +     facet_wrap(~cyl)  layout <- c(     area(1, 1),     area(1, 3, 3),     area(3, 1, 3, 2) ) #> Error in vec_slice(vec_data(x), i): Can't use character names to index an unnamed vector.  # Show the layout to make sure it looks as it should plot(layout) #> Error in curve(expr = x, from = from, to = to, xlim = xlim, ylab = ylab,     ...): 'expr' did not evaluate to an object of length 'n'  # Apply it to a alignpatches align_plots(p1, p2, p3, design = layout) #> Error in as_areas(design): Cannot convert a function into a design area"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/cash-Layout-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset a Layout object — $,Layout-method","title":"Subset a Layout object — $,Layout-method","text":"Used ggplot_build ggsave","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/cash-Layout-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset a Layout object — $,Layout-method","text":"","code":"# S4 method for class 'Layout' x$name"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/cash-Layout-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset a Layout object — $,Layout-method","text":"x Layout object name string slot name Layout object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/cash-Layout-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset a Layout object — $,Layout-method","text":"slot value.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/cross_align.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrange Plots Horizontally or Vertically — cross_align","title":"Arrange Plots Horizontally or Vertically — cross_align","text":"cross_align function aligns observations, allow different layout ordering index single layout. ggcross cross_layout alias cross_align. Two aliases provided convenience: cross_alignv: special case cross_align sets direction = \"vertical\". cross_alignh: special case cross_align sets direction = \"horizontal\".","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/cross_align.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrange Plots Horizontally or Vertically — cross_align","text":"","code":"cross_align(data = NULL, direction, ..., theme = NULL, sizes = NA)  cross_alignv(data = NULL, ...)  cross_alignh(data = NULL, ...)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/cross_align.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrange Plots Horizontally or Vertically — cross_align","text":"data Default dataset use layout. specified, must supplied plot added layout: stack_free, fortify_data_frame() used convert data data frame. stack_align, fortify_matrix() used convert data matrix. direction string indicating direction stack layout, either \"horizontal\" \"vertical\". ... Additional arguments passed fortify_data_frame() fortify_matrix(). theme theme() used render guides, title, subtitle, caption, margins, patch.title, panel.border, background. NULL (default), inherit parent layout. sizes numeric unit object length 3 indicating relative heights (direction = \"horizontal\") widths (direction = \"vertical\"). used include nested quad_layout() layout.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/cross_link.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect two layout crosswise — cross_link","title":"Connect two layout crosswise — cross_link","text":"cross_link resets layout ordering index cross_align(). allows add align_* objects define new layout ordering index. objects added cross_link use updated layout ordering index. feature particularly useful creating tanglegram visualizations.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/cross_link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect two layout crosswise — cross_link","text":"","code":"cross_link(mapping = aes(), size = NULL, no_axes = NULL, active = NULL)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/cross_link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect two layout crosswise — cross_link","text":"mapping Default list aesthetic mappings use plot. specified, must supplied layer added plot. size relative size plot, can specified unit. no_axes Logical; TRUE, removes axes elements alignment axis using theme_no_axes(). default, controled option- \"ggalign.align_no_axes\". active active() object defines context settings added layout.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/cross_link.html","id":"ggplot-specification","dir":"Reference","previous_headings":"","what":"ggplot2 specification","title":"Connect two layout crosswise — cross_link","text":"cross_link initializes ggplot data mapping. cross_link() always applies default mapping axis data index layout. mapping aes(y = .data$y) horizontal stack layout (including left right annotation) aes(x = .data$x) vertical stack layout (including top bottom annotation). data underlying ggplot object contain following columns: panel: panel aligned axis. means x-axis vertical stack layout (including top bottom annotation), y-axis horizontal stack layout (including left right annotation). index: integer data index. hand: factor indicates index groups. x y: x y coordinates. recommended use x/y x/y mapping.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/dendrogram_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Dengrogram x and y coordinates — dendrogram_data","title":"Dengrogram x and y coordinates — dendrogram_data","text":"Dengrogram x y coordinates","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/dendrogram_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dengrogram x and y coordinates — dendrogram_data","text":"","code":"dendrogram_data(   tree,   priority = \"right\",   center = FALSE,   type = \"rectangle\",   leaf_pos = NULL,   leaf_braches = NULL,   reorder_branches = TRUE,   branch_gap = NULL,   root = NULL )"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/dendrogram_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dengrogram x and y coordinates — dendrogram_data","text":"tree hclust dendrogram object. priority string \"left\" \"right\". draw right left, left override right, take \"left\" priority. draw left right, right override left, take \"right\" priority. used align_dendro() provide support facet operation ggplot2. center boolean value. TRUE, nodes plotted centered respect leaves branch. Otherwise (default), plot middle direct child nodes. type string indicates plot type, \"rectangle\" \"triangle\". leaf_pos x-coordinates leaf node. Must length number observations tree. leaf_braches Branches leaf node. Must length number observations tree. Usually come cutree. reorder_branches single boolean value, indicates whether reorder provided leaf_braches based actual index. branch_gap single numeric value indicates gap different branches. root length one string numeric indicates root branch.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/dendrogram_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dengrogram x and y coordinates — dendrogram_data","text":"list 2 data.frame. One node coordinates, another edge coordinates. node tree segments edge coordinates contains following columns: index: original index tree current node label: node label text x y: x-axis y-axis coordinates current node start node current edge. xend yend: x-axis y-axis coordinates terminal node current edge. branch: branch current node edge . can use column color different groups. panel: panel current node , split plot panel using facet_grid, column show panel current node edge . Note: nodes may fall outside panel (two panels), possible NA values column. .panel: Similar panel column, always give correct branch usage ggplot facet. panel1 panel2: panel1 panel2 variables functionality panel, specifically edge data correspond nodes edge. leaf: logical value indicates whether current node leaf.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/dendrogram_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dengrogram x and y coordinates — dendrogram_data","text":"","code":"dendrogram_data(hclust(dist(USArrests), \"ave\")) #> $node #>    index          label         x         y branch  leaf panel .panel #> 1      9        Florida  1.000000  0.000000   root  TRUE  <NA>   <NA> #> 2     33 North Carolina  2.000000  0.000000   root  TRUE  <NA>   <NA> #> 3     NA           <NA>  1.500000 38.527912   root FALSE  <NA>   <NA> #> 4      5     California  3.000000  0.000000   root  TRUE  <NA>   <NA> #> 5     20       Maryland  4.000000  0.000000   root  TRUE  <NA>   <NA> #> 6      3        Arizona  5.000000  0.000000   root  TRUE  <NA>   <NA> #> 7     31     New Mexico  6.000000  0.000000   root  TRUE  <NA>   <NA> #> 8     NA           <NA>  5.500000 13.896043   root FALSE  <NA>   <NA> #> 9     NA           <NA>  4.750000 15.453120   root FALSE  <NA>   <NA> #> 10    NA           <NA>  3.875000 28.012211   root FALSE  <NA>   <NA> #> 11     8       Delaware  7.000000  0.000000   root  TRUE  <NA>   <NA> #> 12     1        Alabama  8.000000  0.000000   root  TRUE  <NA>   <NA> #> 13    18      Louisiana  9.000000  0.000000   root  TRUE  <NA>   <NA> #> 14    NA           <NA>  8.500000 15.454449   root FALSE  <NA>   <NA> #> 15    NA           <NA>  7.750000 16.891499   root FALSE  <NA>   <NA> #> 16    13       Illinois 10.000000  0.000000   root  TRUE  <NA>   <NA> #> 17    32       New York 11.000000  0.000000   root  TRUE  <NA>   <NA> #> 18    NA           <NA> 10.500000  6.236986   root FALSE  <NA>   <NA> #> 19    22       Michigan 12.000000  0.000000   root  TRUE  <NA>   <NA> #> 20    28         Nevada 13.000000  0.000000   root  TRUE  <NA>   <NA> #> 21    NA           <NA> 12.500000 13.297368   root FALSE  <NA>   <NA> #> 22    NA           <NA> 11.500000 18.417331   root FALSE  <NA>   <NA> #> 23    NA           <NA>  9.625000 26.363428   root FALSE  <NA>   <NA> #> 24     2         Alaska 14.000000  0.000000   root  TRUE  <NA>   <NA> #> 25    24    Mississippi 15.000000  0.000000   root  TRUE  <NA>   <NA> #> 26    40 South Carolina 16.000000  0.000000   root  TRUE  <NA>   <NA> #> 27    NA           <NA> 15.500000 21.167192   root FALSE  <NA>   <NA> #> 28    NA           <NA> 14.750000 28.095803   root FALSE  <NA>   <NA> #> 29    NA           <NA> 12.187500 39.394633   root FALSE  <NA>   <NA> #> 30    NA           <NA>  8.031250 44.283922   root FALSE  <NA>   <NA> #> 31    NA           <NA>  4.765625 77.605024   root FALSE  <NA>   <NA> #> 32    47     Washington 17.000000  0.000000   root  TRUE  <NA>   <NA> #> 33    37         Oregon 18.000000  0.000000   root  TRUE  <NA>   <NA> #> 34    50        Wyoming 19.000000  0.000000   root  TRUE  <NA>   <NA> #> 35    36       Oklahoma 20.000000  0.000000   root  TRUE  <NA>   <NA> #> 36    46       Virginia 21.000000  0.000000   root  TRUE  <NA>   <NA> #> 37    NA           <NA> 20.500000  7.355270   root FALSE  <NA>   <NA> #> 38    NA           <NA> 19.750000 10.736739   root FALSE  <NA>   <NA> #> 39    NA           <NA> 18.875000 12.878100   root FALSE  <NA>   <NA> #> 40    NA           <NA> 17.937500 16.425489   root FALSE  <NA>   <NA> #> 41    39   Rhode Island 22.000000  0.000000   root  TRUE  <NA>   <NA> #> 42    21  Massachusetts 23.000000  0.000000   root  TRUE  <NA>   <NA> #> 43    30     New Jersey 24.000000  0.000000   root  TRUE  <NA>   <NA> #> 44    NA           <NA> 23.500000 11.456439   root FALSE  <NA>   <NA> #> 45    NA           <NA> 22.750000 22.595978   root FALSE  <NA>   <NA> #> 46    NA           <NA> 20.343750 26.713777   root FALSE  <NA>   <NA> #> 47    25       Missouri 25.000000  0.000000   root  TRUE  <NA>   <NA> #> 48     4       Arkansas 26.000000  0.000000   root  TRUE  <NA>   <NA> #> 49    42      Tennessee 27.000000  0.000000   root  TRUE  <NA>   <NA> #> 50    NA           <NA> 26.500000 12.614278   root FALSE  <NA>   <NA> #> 51    NA           <NA> 25.750000 20.198479   root FALSE  <NA>   <NA> #> 52    10        Georgia 28.000000  0.000000   root  TRUE  <NA>   <NA> #> 53     6       Colorado 29.000000  0.000000   root  TRUE  <NA>   <NA> #> 54    43          Texas 30.000000  0.000000   root  TRUE  <NA>   <NA> #> 55    NA           <NA> 29.500000 14.501034   root FALSE  <NA>   <NA> #> 56    NA           <NA> 28.750000 23.972143   root FALSE  <NA>   <NA> #> 57    NA           <NA> 27.250000 29.054195   root FALSE  <NA>   <NA> #> 58    NA           <NA> 23.796875 44.837933   root FALSE  <NA>   <NA> #> 59    12          Idaho 31.000000  0.000000   root  TRUE  <NA>   <NA> #> 60    27       Nebraska 32.000000  0.000000   root  TRUE  <NA>   <NA> #> 61    17       Kentucky 33.000000  0.000000   root  TRUE  <NA>   <NA> #> 62    26        Montana 34.000000  0.000000   root  TRUE  <NA>   <NA> #> 63    NA           <NA> 33.500000  3.834058   root FALSE  <NA>   <NA> #> 64    NA           <NA> 32.750000 12.438692   root FALSE  <NA>   <NA> #> 65    NA           <NA> 31.875000 15.026107   root FALSE  <NA>   <NA> #> 66    35           Ohio 35.000000  0.000000   root  TRUE  <NA>   <NA> #> 67    44           Utah 36.000000  0.000000   root  TRUE  <NA>   <NA> #> 68    NA           <NA> 35.500000  6.637771   root FALSE  <NA>   <NA> #> 69    14        Indiana 37.000000  0.000000   root  TRUE  <NA>   <NA> #> 70    16         Kansas 38.000000  0.000000   root  TRUE  <NA>   <NA> #> 71    NA           <NA> 37.500000  3.929377   root FALSE  <NA>   <NA> #> 72     7    Connecticut 39.000000  0.000000   root  TRUE  <NA>   <NA> #> 73    38   Pennsylvania 40.000000  0.000000   root  TRUE  <NA>   <NA> #> 74    NA           <NA> 39.500000  8.027453   root FALSE  <NA>   <NA> #> 75    NA           <NA> 38.500000 13.352260   root FALSE  <NA>   <NA> #> 76    NA           <NA> 37.000000 15.122897   root FALSE  <NA>   <NA> #> 77    NA           <NA> 34.437500 20.598507   root FALSE  <NA>   <NA> #> 78    11         Hawaii 41.000000  0.000000   root  TRUE  <NA>   <NA> #> 79    48  West Virginia 42.000000  0.000000   root  TRUE  <NA>   <NA> #> 80    19          Maine 43.000000  0.000000   root  TRUE  <NA>   <NA> #> 81    41   South Dakota 44.000000  0.000000   root  TRUE  <NA>   <NA> #> 82    NA           <NA> 43.500000  8.537564   root FALSE  <NA>   <NA> #> 83    NA           <NA> 42.750000 10.771175   root FALSE  <NA>   <NA> #> 84    34   North Dakota 45.000000  0.000000   root  TRUE  <NA>   <NA> #> 85    45        Vermont 46.000000  0.000000   root  TRUE  <NA>   <NA> #> 86    NA           <NA> 45.500000 13.044922   root FALSE  <NA>   <NA> #> 87    23      Minnesota 47.000000  0.000000   root  TRUE  <NA>   <NA> #> 88    49      Wisconsin 48.000000  0.000000   root  TRUE  <NA>   <NA> #> 89    15           Iowa 49.000000  0.000000   root  TRUE  <NA>   <NA> #> 90    29  New Hampshire 50.000000  0.000000   root  TRUE  <NA>   <NA> #> 91    NA           <NA> 49.500000  2.291288   root FALSE  <NA>   <NA> #> 92    NA           <NA> 48.750000 10.184218   root FALSE  <NA>   <NA> #> 93    NA           <NA> 47.875000 18.993398   root FALSE  <NA>   <NA> #> 94    NA           <NA> 46.687500 27.779904   root FALSE  <NA>   <NA> #> 95    NA           <NA> 44.718750 33.117815   root FALSE  <NA>   <NA> #> 96    NA           <NA> 42.859375 41.094765   root FALSE  <NA>   <NA> #> 97    NA           <NA> 38.648438 54.746831   root FALSE  <NA>   <NA> #> 98    NA           <NA> 31.222656 89.232093   root FALSE  <NA>   <NA> #>  #> $edge #>             x      xend          y       yend branch panel1 panel2 .panel #> 1    1.000000  1.000000   0.000000  38.527912   root   <NA>   <NA>   <NA> #> 2    2.000000  2.000000   0.000000  38.527912   root   <NA>   <NA>   <NA> #> 3    1.500000  1.000000  38.527912  38.527912   root   <NA>   <NA>   <NA> #> 4    1.500000  2.000000  38.527912  38.527912   root   <NA>   <NA>   <NA> #> 5    5.000000  5.000000   0.000000  13.896043   root   <NA>   <NA>   <NA> #> 6    6.000000  6.000000   0.000000  13.896043   root   <NA>   <NA>   <NA> #> 7    5.500000  5.000000  13.896043  13.896043   root   <NA>   <NA>   <NA> #> 8    5.500000  6.000000  13.896043  13.896043   root   <NA>   <NA>   <NA> #> 9    4.000000  4.000000   0.000000  15.453120   root   <NA>   <NA>   <NA> #> 10   5.500000  5.500000  13.896043  15.453120   root   <NA>   <NA>   <NA> #> 11   4.750000  4.000000  15.453120  15.453120   root   <NA>   <NA>   <NA> #> 12   4.750000  5.500000  15.453120  15.453120   root   <NA>   <NA>   <NA> #> 13   3.000000  3.000000   0.000000  28.012211   root   <NA>   <NA>   <NA> #> 14   4.750000  4.750000  15.453120  28.012211   root   <NA>   <NA>   <NA> #> 15   3.875000  3.000000  28.012211  28.012211   root   <NA>   <NA>   <NA> #> 16   3.875000  4.750000  28.012211  28.012211   root   <NA>   <NA>   <NA> #> 17   8.000000  8.000000   0.000000  15.454449   root   <NA>   <NA>   <NA> #> 18   9.000000  9.000000   0.000000  15.454449   root   <NA>   <NA>   <NA> #> 19   8.500000  8.000000  15.454449  15.454449   root   <NA>   <NA>   <NA> #> 20   8.500000  9.000000  15.454449  15.454449   root   <NA>   <NA>   <NA> #> 21   7.000000  7.000000   0.000000  16.891499   root   <NA>   <NA>   <NA> #> 22   8.500000  8.500000  15.454449  16.891499   root   <NA>   <NA>   <NA> #> 23   7.750000  7.000000  16.891499  16.891499   root   <NA>   <NA>   <NA> #> 24   7.750000  8.500000  16.891499  16.891499   root   <NA>   <NA>   <NA> #> 25  10.000000 10.000000   0.000000   6.236986   root   <NA>   <NA>   <NA> #> 26  11.000000 11.000000   0.000000   6.236986   root   <NA>   <NA>   <NA> #> 27  10.500000 10.000000   6.236986   6.236986   root   <NA>   <NA>   <NA> #> 28  10.500000 11.000000   6.236986   6.236986   root   <NA>   <NA>   <NA> #> 29  12.000000 12.000000   0.000000  13.297368   root   <NA>   <NA>   <NA> #> 30  13.000000 13.000000   0.000000  13.297368   root   <NA>   <NA>   <NA> #> 31  12.500000 12.000000  13.297368  13.297368   root   <NA>   <NA>   <NA> #> 32  12.500000 13.000000  13.297368  13.297368   root   <NA>   <NA>   <NA> #> 33  10.500000 10.500000   6.236986  18.417331   root   <NA>   <NA>   <NA> #> 34  12.500000 12.500000  13.297368  18.417331   root   <NA>   <NA>   <NA> #> 35  11.500000 10.500000  18.417331  18.417331   root   <NA>   <NA>   <NA> #> 36  11.500000 12.500000  18.417331  18.417331   root   <NA>   <NA>   <NA> #> 37   7.750000  7.750000  16.891499  26.363428   root   <NA>   <NA>   <NA> #> 38  11.500000 11.500000  18.417331  26.363428   root   <NA>   <NA>   <NA> #> 39   9.625000  7.750000  26.363428  26.363428   root   <NA>   <NA>   <NA> #> 40   9.625000 11.500000  26.363428  26.363428   root   <NA>   <NA>   <NA> #> 41  15.000000 15.000000   0.000000  21.167192   root   <NA>   <NA>   <NA> #> 42  16.000000 16.000000   0.000000  21.167192   root   <NA>   <NA>   <NA> #> 43  15.500000 15.000000  21.167192  21.167192   root   <NA>   <NA>   <NA> #> 44  15.500000 16.000000  21.167192  21.167192   root   <NA>   <NA>   <NA> #> 45  14.000000 14.000000   0.000000  28.095803   root   <NA>   <NA>   <NA> #> 46  15.500000 15.500000  21.167192  28.095803   root   <NA>   <NA>   <NA> #> 47  14.750000 14.000000  28.095803  28.095803   root   <NA>   <NA>   <NA> #> 48  14.750000 15.500000  28.095803  28.095803   root   <NA>   <NA>   <NA> #> 49   9.625000  9.625000  26.363428  39.394633   root   <NA>   <NA>   <NA> #> 50  14.750000 14.750000  28.095803  39.394633   root   <NA>   <NA>   <NA> #> 51  12.187500  9.625000  39.394633  39.394633   root   <NA>   <NA>   <NA> #> 52  12.187500 14.750000  39.394633  39.394633   root   <NA>   <NA>   <NA> #> 53   3.875000  3.875000  28.012211  44.283922   root   <NA>   <NA>   <NA> #> 54  12.187500 12.187500  39.394633  44.283922   root   <NA>   <NA>   <NA> #> 55   8.031250  3.875000  44.283922  44.283922   root   <NA>   <NA>   <NA> #> 56   8.031250 12.187500  44.283922  44.283922   root   <NA>   <NA>   <NA> #> 57   1.500000  1.500000  38.527912  77.605024   root   <NA>   <NA>   <NA> #> 58   8.031250  8.031250  44.283922  77.605024   root   <NA>   <NA>   <NA> #> 59   4.765625  1.500000  77.605024  77.605024   root   <NA>   <NA>   <NA> #> 60   4.765625  8.031250  77.605024  77.605024   root   <NA>   <NA>   <NA> #> 61  20.000000 20.000000   0.000000   7.355270   root   <NA>   <NA>   <NA> #> 62  21.000000 21.000000   0.000000   7.355270   root   <NA>   <NA>   <NA> #> 63  20.500000 20.000000   7.355270   7.355270   root   <NA>   <NA>   <NA> #> 64  20.500000 21.000000   7.355270   7.355270   root   <NA>   <NA>   <NA> #> 65  19.000000 19.000000   0.000000  10.736739   root   <NA>   <NA>   <NA> #> 66  20.500000 20.500000   7.355270  10.736739   root   <NA>   <NA>   <NA> #> 67  19.750000 19.000000  10.736739  10.736739   root   <NA>   <NA>   <NA> #> 68  19.750000 20.500000  10.736739  10.736739   root   <NA>   <NA>   <NA> #> 69  18.000000 18.000000   0.000000  12.878100   root   <NA>   <NA>   <NA> #> 70  19.750000 19.750000  10.736739  12.878100   root   <NA>   <NA>   <NA> #> 71  18.875000 18.000000  12.878100  12.878100   root   <NA>   <NA>   <NA> #> 72  18.875000 19.750000  12.878100  12.878100   root   <NA>   <NA>   <NA> #> 73  17.000000 17.000000   0.000000  16.425489   root   <NA>   <NA>   <NA> #> 74  18.875000 18.875000  12.878100  16.425489   root   <NA>   <NA>   <NA> #> 75  17.937500 17.000000  16.425489  16.425489   root   <NA>   <NA>   <NA> #> 76  17.937500 18.875000  16.425489  16.425489   root   <NA>   <NA>   <NA> #> 77  23.000000 23.000000   0.000000  11.456439   root   <NA>   <NA>   <NA> #> 78  24.000000 24.000000   0.000000  11.456439   root   <NA>   <NA>   <NA> #> 79  23.500000 23.000000  11.456439  11.456439   root   <NA>   <NA>   <NA> #> 80  23.500000 24.000000  11.456439  11.456439   root   <NA>   <NA>   <NA> #> 81  22.000000 22.000000   0.000000  22.595978   root   <NA>   <NA>   <NA> #> 82  23.500000 23.500000  11.456439  22.595978   root   <NA>   <NA>   <NA> #> 83  22.750000 22.000000  22.595978  22.595978   root   <NA>   <NA>   <NA> #> 84  22.750000 23.500000  22.595978  22.595978   root   <NA>   <NA>   <NA> #> 85  17.937500 17.937500  16.425489  26.713777   root   <NA>   <NA>   <NA> #> 86  22.750000 22.750000  22.595978  26.713777   root   <NA>   <NA>   <NA> #> 87  20.343750 17.937500  26.713777  26.713777   root   <NA>   <NA>   <NA> #> 88  20.343750 22.750000  26.713777  26.713777   root   <NA>   <NA>   <NA> #> 89  26.000000 26.000000   0.000000  12.614278   root   <NA>   <NA>   <NA> #> 90  27.000000 27.000000   0.000000  12.614278   root   <NA>   <NA>   <NA> #> 91  26.500000 26.000000  12.614278  12.614278   root   <NA>   <NA>   <NA> #> 92  26.500000 27.000000  12.614278  12.614278   root   <NA>   <NA>   <NA> #> 93  25.000000 25.000000   0.000000  20.198479   root   <NA>   <NA>   <NA> #> 94  26.500000 26.500000  12.614278  20.198479   root   <NA>   <NA>   <NA> #> 95  25.750000 25.000000  20.198479  20.198479   root   <NA>   <NA>   <NA> #> 96  25.750000 26.500000  20.198479  20.198479   root   <NA>   <NA>   <NA> #> 97  29.000000 29.000000   0.000000  14.501034   root   <NA>   <NA>   <NA> #> 98  30.000000 30.000000   0.000000  14.501034   root   <NA>   <NA>   <NA> #> 99  29.500000 29.000000  14.501034  14.501034   root   <NA>   <NA>   <NA> #> 100 29.500000 30.000000  14.501034  14.501034   root   <NA>   <NA>   <NA> #> 101 28.000000 28.000000   0.000000  23.972143   root   <NA>   <NA>   <NA> #> 102 29.500000 29.500000  14.501034  23.972143   root   <NA>   <NA>   <NA> #> 103 28.750000 28.000000  23.972143  23.972143   root   <NA>   <NA>   <NA> #> 104 28.750000 29.500000  23.972143  23.972143   root   <NA>   <NA>   <NA> #> 105 25.750000 25.750000  20.198479  29.054195   root   <NA>   <NA>   <NA> #> 106 28.750000 28.750000  23.972143  29.054195   root   <NA>   <NA>   <NA> #> 107 27.250000 25.750000  29.054195  29.054195   root   <NA>   <NA>   <NA> #> 108 27.250000 28.750000  29.054195  29.054195   root   <NA>   <NA>   <NA> #> 109 20.343750 20.343750  26.713777  44.837933   root   <NA>   <NA>   <NA> #> 110 27.250000 27.250000  29.054195  44.837933   root   <NA>   <NA>   <NA> #> 111 23.796875 20.343750  44.837933  44.837933   root   <NA>   <NA>   <NA> #> 112 23.796875 27.250000  44.837933  44.837933   root   <NA>   <NA>   <NA> #> 113 33.000000 33.000000   0.000000   3.834058   root   <NA>   <NA>   <NA> #> 114 34.000000 34.000000   0.000000   3.834058   root   <NA>   <NA>   <NA> #> 115 33.500000 33.000000   3.834058   3.834058   root   <NA>   <NA>   <NA> #> 116 33.500000 34.000000   3.834058   3.834058   root   <NA>   <NA>   <NA> #> 117 32.000000 32.000000   0.000000  12.438692   root   <NA>   <NA>   <NA> #> 118 33.500000 33.500000   3.834058  12.438692   root   <NA>   <NA>   <NA> #> 119 32.750000 32.000000  12.438692  12.438692   root   <NA>   <NA>   <NA> #> 120 32.750000 33.500000  12.438692  12.438692   root   <NA>   <NA>   <NA> #> 121 31.000000 31.000000   0.000000  15.026107   root   <NA>   <NA>   <NA> #> 122 32.750000 32.750000  12.438692  15.026107   root   <NA>   <NA>   <NA> #> 123 31.875000 31.000000  15.026107  15.026107   root   <NA>   <NA>   <NA> #> 124 31.875000 32.750000  15.026107  15.026107   root   <NA>   <NA>   <NA> #> 125 35.000000 35.000000   0.000000   6.637771   root   <NA>   <NA>   <NA> #> 126 36.000000 36.000000   0.000000   6.637771   root   <NA>   <NA>   <NA> #> 127 35.500000 35.000000   6.637771   6.637771   root   <NA>   <NA>   <NA> #> 128 35.500000 36.000000   6.637771   6.637771   root   <NA>   <NA>   <NA> #> 129 37.000000 37.000000   0.000000   3.929377   root   <NA>   <NA>   <NA> #> 130 38.000000 38.000000   0.000000   3.929377   root   <NA>   <NA>   <NA> #> 131 37.500000 37.000000   3.929377   3.929377   root   <NA>   <NA>   <NA> #> 132 37.500000 38.000000   3.929377   3.929377   root   <NA>   <NA>   <NA> #> 133 39.000000 39.000000   0.000000   8.027453   root   <NA>   <NA>   <NA> #> 134 40.000000 40.000000   0.000000   8.027453   root   <NA>   <NA>   <NA> #> 135 39.500000 39.000000   8.027453   8.027453   root   <NA>   <NA>   <NA> #> 136 39.500000 40.000000   8.027453   8.027453   root   <NA>   <NA>   <NA> #> 137 37.500000 37.500000   3.929377  13.352260   root   <NA>   <NA>   <NA> #> 138 39.500000 39.500000   8.027453  13.352260   root   <NA>   <NA>   <NA> #> 139 38.500000 37.500000  13.352260  13.352260   root   <NA>   <NA>   <NA> #> 140 38.500000 39.500000  13.352260  13.352260   root   <NA>   <NA>   <NA> #> 141 35.500000 35.500000   6.637771  15.122897   root   <NA>   <NA>   <NA> #> 142 38.500000 38.500000  13.352260  15.122897   root   <NA>   <NA>   <NA> #> 143 37.000000 35.500000  15.122897  15.122897   root   <NA>   <NA>   <NA> #> 144 37.000000 38.500000  15.122897  15.122897   root   <NA>   <NA>   <NA> #> 145 31.875000 31.875000  15.026107  20.598507   root   <NA>   <NA>   <NA> #> 146 37.000000 37.000000  15.122897  20.598507   root   <NA>   <NA>   <NA> #> 147 34.437500 31.875000  20.598507  20.598507   root   <NA>   <NA>   <NA> #> 148 34.437500 37.000000  20.598507  20.598507   root   <NA>   <NA>   <NA> #> 149 43.000000 43.000000   0.000000   8.537564   root   <NA>   <NA>   <NA> #> 150 44.000000 44.000000   0.000000   8.537564   root   <NA>   <NA>   <NA> #> 151 43.500000 43.000000   8.537564   8.537564   root   <NA>   <NA>   <NA> #> 152 43.500000 44.000000   8.537564   8.537564   root   <NA>   <NA>   <NA> #> 153 42.000000 42.000000   0.000000  10.771175   root   <NA>   <NA>   <NA> #> 154 43.500000 43.500000   8.537564  10.771175   root   <NA>   <NA>   <NA> #> 155 42.750000 42.000000  10.771175  10.771175   root   <NA>   <NA>   <NA> #> 156 42.750000 43.500000  10.771175  10.771175   root   <NA>   <NA>   <NA> #> 157 45.000000 45.000000   0.000000  13.044922   root   <NA>   <NA>   <NA> #> 158 46.000000 46.000000   0.000000  13.044922   root   <NA>   <NA>   <NA> #> 159 45.500000 45.000000  13.044922  13.044922   root   <NA>   <NA>   <NA> #> 160 45.500000 46.000000  13.044922  13.044922   root   <NA>   <NA>   <NA> #> 161 49.000000 49.000000   0.000000   2.291288   root   <NA>   <NA>   <NA> #> 162 50.000000 50.000000   0.000000   2.291288   root   <NA>   <NA>   <NA> #> 163 49.500000 49.000000   2.291288   2.291288   root   <NA>   <NA>   <NA> #> 164 49.500000 50.000000   2.291288   2.291288   root   <NA>   <NA>   <NA> #> 165 48.000000 48.000000   0.000000  10.184218   root   <NA>   <NA>   <NA> #> 166 49.500000 49.500000   2.291288  10.184218   root   <NA>   <NA>   <NA> #> 167 48.750000 48.000000  10.184218  10.184218   root   <NA>   <NA>   <NA> #> 168 48.750000 49.500000  10.184218  10.184218   root   <NA>   <NA>   <NA> #> 169 47.000000 47.000000   0.000000  18.993398   root   <NA>   <NA>   <NA> #> 170 48.750000 48.750000  10.184218  18.993398   root   <NA>   <NA>   <NA> #> 171 47.875000 47.000000  18.993398  18.993398   root   <NA>   <NA>   <NA> #> 172 47.875000 48.750000  18.993398  18.993398   root   <NA>   <NA>   <NA> #> 173 45.500000 45.500000  13.044922  27.779904   root   <NA>   <NA>   <NA> #> 174 47.875000 47.875000  18.993398  27.779904   root   <NA>   <NA>   <NA> #> 175 46.687500 45.500000  27.779904  27.779904   root   <NA>   <NA>   <NA> #> 176 46.687500 47.875000  27.779904  27.779904   root   <NA>   <NA>   <NA> #> 177 42.750000 42.750000  10.771175  33.117815   root   <NA>   <NA>   <NA> #> 178 46.687500 46.687500  27.779904  33.117815   root   <NA>   <NA>   <NA> #> 179 44.718750 42.750000  33.117815  33.117815   root   <NA>   <NA>   <NA> #> 180 44.718750 46.687500  33.117815  33.117815   root   <NA>   <NA>   <NA> #> 181 41.000000 41.000000   0.000000  41.094765   root   <NA>   <NA>   <NA> #> 182 44.718750 44.718750  33.117815  41.094765   root   <NA>   <NA>   <NA> #> 183 42.859375 41.000000  41.094765  41.094765   root   <NA>   <NA>   <NA> #> 184 42.859375 44.718750  41.094765  41.094765   root   <NA>   <NA>   <NA> #> 185 34.437500 34.437500  20.598507  54.746831   root   <NA>   <NA>   <NA> #> 186 42.859375 42.859375  41.094765  54.746831   root   <NA>   <NA>   <NA> #> 187 38.648438 34.437500  54.746831  54.746831   root   <NA>   <NA>   <NA> #> 188 38.648438 42.859375  54.746831  54.746831   root   <NA>   <NA>   <NA> #> 189 23.796875 23.796875  44.837933  89.232093   root   <NA>   <NA>   <NA> #> 190 38.648438 38.648438  54.746831  89.232093   root   <NA>   <NA>   <NA> #> 191 31.222656 23.796875  89.232093  89.232093   root   <NA>   <NA>   <NA> #> 192 31.222656 38.648438  89.232093  89.232093   root   <NA>   <NA>   <NA> #> 193  4.765625  4.765625  77.605024 152.313999   root   <NA>   <NA>   <NA> #> 194 31.222656 31.222656  89.232093 152.313999   root   <NA>   <NA>   <NA> #> 195 17.994141  4.765625 152.313999 152.313999   root   <NA>   <NA>   <NA> #> 196 17.994141 31.222656 152.313999 152.313999   root   <NA>   <NA>   <NA> #>"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/dot-raster_magick.html","id":null,"dir":"Reference","previous_headings":"","what":"Rasterize the input object — .raster_magick","title":"Rasterize the input object — .raster_magick","text":"internal function designed implement functionality raster_magick(). assumes input arguments valid perform additional checks.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/dot-raster_magick.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rasterize the input object — .raster_magick","text":"","code":".raster_magick(x, magick = NULL, ...)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/dot-raster_magick.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rasterize the input object — .raster_magick","text":"x object rasterize, can grob(), layer(), ggplot(), list objects. magick function (purrr-style formula accepted) takes image_read() object input returns object compatible .raster(). can use image_*() functions magick package process raster image. ... used currently.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/dot-raster_magick.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rasterize the input object — .raster_magick","text":"object class input.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/draw_key_draw.html","id":null,"dir":"Reference","previous_headings":"","what":"Key glyphs for legends — draw_key_draw","title":"Key glyphs for legends — draw_key_draw","text":"geom associated function draws key geom needs displayed legend. functions called draw_key_*(), * stands name respective key glyph. key glyphs can customized individual geoms providing geom key_glyph argument. draw_key_draw function provides interface custom key glyphs used geom_draw().","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/draw_key_draw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Key glyphs for legends — draw_key_draw","text":"","code":"draw_key_draw(data, params, size)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/draw_key_draw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Key glyphs for legends — draw_key_draw","text":"data single row data frame containing scaled aesthetics display key params list additional parameters supplied geom. size Width height key mm.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/draw_key_draw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Key glyphs for legends — draw_key_draw","text":"grid grob.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/draw_key_draw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Key glyphs for legends — draw_key_draw","text":"","code":"p <- ggplot(economics, aes(date, psavert, color = \"savings rate\")) # key glyphs can be specified by their name p + geom_line(key_glyph = \"timeseries\")   # key glyphs can be specified via their drawing function p + geom_line(key_glyph = draw_key_rect)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_data_frame.character.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a data frame — fortify_data_frame.character","title":"Build a data frame — fortify_data_frame.character","text":"data atomic vector, 'll converted data frame following columns: .names: names vector (applicable names exist). value: actual value vector.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_data_frame.character.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a data frame — fortify_data_frame.character","text":"","code":"# S3 method for class 'character' fortify_data_frame(data, ...)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_data_frame.character.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a data frame — fortify_data_frame.character","text":"data object converted data frame. ... Arguments passed methods.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_data_frame.character.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a data frame — fortify_data_frame.character","text":"data frame.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_data_frame.complex.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a data frame — fortify_data_frame.complex","title":"Build a data frame — fortify_data_frame.complex","text":"data atomic vector, 'll converted data frame following columns: .names: names vector (applicable names exist). value: actual value vector.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_data_frame.complex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a data frame — fortify_data_frame.complex","text":"","code":"# S3 method for class 'complex' fortify_data_frame(data, ...)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_data_frame.complex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a data frame — fortify_data_frame.complex","text":"data object converted data frame. ... Arguments passed methods.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_data_frame.complex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a data frame — fortify_data_frame.complex","text":"data frame.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_data_frame.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a data frame — fortify_data_frame.default","title":"Build a data frame — fortify_data_frame.default","text":"default, calls fortify() build data frame.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_data_frame.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a data frame — fortify_data_frame.default","text":"","code":"# Default S3 method fortify_data_frame(data, ...)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_data_frame.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a data frame — fortify_data_frame.default","text":"data object converted data frame. ... Arguments passed methods.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_data_frame.default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a data frame — fortify_data_frame.default","text":"data frame.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a data frame — fortify_data_frame","title":"Build a data frame — fortify_data_frame","text":"function converts various objects data frame.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a data frame — fortify_data_frame","text":"","code":"fortify_data_frame(data, ...)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a data frame — fortify_data_frame","text":"data object converted data frame. ... Arguments passed methods.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_data_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a data frame — fortify_data_frame","text":"data frame.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_data_frame.logical.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a data frame — fortify_data_frame.logical","title":"Build a data frame — fortify_data_frame.logical","text":"data atomic vector, 'll converted data frame following columns: .names: names vector (applicable names exist). value: actual value vector.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_data_frame.logical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a data frame — fortify_data_frame.logical","text":"","code":"# S3 method for class 'logical' fortify_data_frame(data, ...)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_data_frame.logical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a data frame — fortify_data_frame.logical","text":"data object converted data frame. ... Arguments passed methods.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_data_frame.logical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a data frame — fortify_data_frame.logical","text":"data frame.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_data_frame.matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a data frame — fortify_data_frame.matrix","title":"Build a data frame — fortify_data_frame.matrix","text":"data matrix, automatically transformed long-form data frame, row represents unique combination matrix indices corresponding values.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_data_frame.matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a data frame — fortify_data_frame.matrix","text":"","code":"# S3 method for class 'matrix' fortify_data_frame(data, ...)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_data_frame.matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a data frame — fortify_data_frame.matrix","text":"data object converted data frame. ... Arguments passed methods.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_data_frame.matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a data frame — fortify_data_frame.matrix","text":"data frame.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_data_frame.numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a data frame — fortify_data_frame.numeric","title":"Build a data frame — fortify_data_frame.numeric","text":"data atomic vector, 'll converted data frame following columns: .names: names vector (applicable names exist). value: actual value vector.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_data_frame.numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a data frame — fortify_data_frame.numeric","text":"","code":"# S3 method for class 'numeric' fortify_data_frame(data, ...)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_data_frame.numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a data frame — fortify_data_frame.numeric","text":"data object converted data frame. ... Arguments passed methods.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_data_frame.numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a data frame — fortify_data_frame.numeric","text":"data frame.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_matrix.GISTIC.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a Matrix — fortify_matrix.GISTIC","title":"Build a Matrix — fortify_matrix.GISTIC","text":"function converts various objects matrix format.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_matrix.GISTIC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a Matrix — fortify_matrix.GISTIC","text":"","code":"# S3 method for class 'GISTIC' fortify_matrix(   data,   ...,   n_top = NULL,   bands = NULL,   ignored_bands = NULL,   sample_anno = NULL,   remove_empty_samples = TRUE )"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_matrix.GISTIC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a Matrix — fortify_matrix.GISTIC","text":"data object converted matrix. ... used currently. n_top single number indicates many top bands drawn. bands atomic character defines bands draw. ignored_bands atomic character defines bands ignored. sample_anno data frame sample clinical features added. remove_empty_samples single boolean value indicating whether drop samples without genomic alterations.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_matrix.GISTIC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a Matrix — fortify_matrix.GISTIC","text":"matrix.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_matrix.GISTIC.html","id":"ggalign-attributes","dir":"Reference","previous_headings":"","what":"ggalign attributes","title":"Build a Matrix — fortify_matrix.GISTIC","text":"sample_anno: sample clinical informations provided sample_anno. sample_summary: sample copy number summary informations. See data@cnv.summary details. cytoband_summary: cytoband summary informations. See data@cytoband.summary details. gene_summary: gene summary informations. See data@gene.summary details. summary: data frame summary information. See data@summary details.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_matrix.MAF.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a Matrix — fortify_matrix.MAF","title":"Build a Matrix — fortify_matrix.MAF","text":"function converts various objects matrix format.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_matrix.MAF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a Matrix — fortify_matrix.MAF","text":"","code":"# S3 method for class 'MAF' fortify_matrix(   data,   ...,   genes = NULL,   n_top = NULL,   remove_empty_samples = TRUE,   collapse_vars = TRUE,   use_syn = TRUE )"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_matrix.MAF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a Matrix — fortify_matrix.MAF","text":"data object converted matrix. ... used currently. genes atomic character defines genes draw. n_top single number indicates many top genes drawn. remove_empty_samples single boolean value indicating whether drop samples without genomic alterations. collapse_vars single boolean value indicating whether collapse multiple alterations sample gene single value \"Multi_Hit\". Alternatively, can provide single string indicates collapsed values. use_syn single boolean value indicates whether include synonymous variants Classifies SNPs transitions transversions.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_matrix.MAF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a Matrix — fortify_matrix.MAF","text":"matrix.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_matrix.MAF.html","id":"ggalign-attributes","dir":"Reference","previous_headings":"","what":"ggalign attributes","title":"Build a Matrix — fortify_matrix.MAF","text":"gene_summary: gene summary informations. See maftools::getGeneSummary() details. sample_summary: sample summary informations. See maftools::getSampleSummary() details. sample_anno: sample clinical informations. See maftools::getClinicalData() details. n_genes: Total genes. n_samples: Total samples. titv: list data.frames Transitions Transversions summary. See maftools::titv() details.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_matrix.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a Matrix — fortify_matrix.default","title":"Build a Matrix — fortify_matrix.default","text":"default, calls .matrix() build matrix.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_matrix.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a Matrix — fortify_matrix.default","text":"","code":"# Default S3 method fortify_matrix(data, ...)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_matrix.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a Matrix — fortify_matrix.default","text":"data object converted matrix. ... Arguments passed methods.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_matrix.default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a Matrix — fortify_matrix.default","text":"matrix.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a Matrix — fortify_matrix","title":"Build a Matrix — fortify_matrix","text":"function converts various objects matrix format.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a Matrix — fortify_matrix","text":"","code":"fortify_matrix(data, ...)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a Matrix — fortify_matrix","text":"data object converted matrix. ... Arguments passed methods.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/fortify_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a Matrix — fortify_matrix","text":"matrix.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/free.html","id":null,"dir":"Reference","previous_headings":"","what":"Free from alignment — free_align","title":"Free from alignment — free_align","text":"align_plots try align plot panels, every elements plot, following functions romove restrictions: free_align: want compose plots without alignment panel axes (panel aligned). can wrap plot free_align. free_border: want compose plots without alignment panel borders (still align panels ), can wrap plot free_border. free_lab: want compose plots without alignment axis title, can wrap plot free_lab. free_space: Removing ggplot element sizes aligning. free_vp: Customize viewport aligning. free_guide: want override behaviour overall guides behaviour, can wrap plot free_guide.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/free.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Free from alignment — free_align","text":"","code":"free_align(plot, axes = \"tlbr\")  free_border(plot, borders = \"tlbr\")  free_guide(plot, guides = \"tlbr\")  free_lab(plot, labs = \"tlbr\")  free_space(plot, spaces = \"tlbr\")  free_vp(plot, x = 0.5, y = 0.5, width = NA, height = NA, ...)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/free.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Free from alignment — free_align","text":"plot ggplot alignpatches object. axes axes aligned? string containing one \"t\", \"l\", \"b\", \"r\". borders border aligned? string containing one \"t\", \"l\", \"b\", \"r\". guides string containing one \"t\", \"l\", \"b\", \"r\" indicates side guide legends collected plot. NULL, guide legends collected. labs axis labs free? string containing one \"t\", \"l\", \"b\", \"r\". spaces border spaces removed? string containing one \"t\", \"l\", \"b\", \"r\". x numeric vector unit object specifying x-location. y numeric vector unit object specifying y-location. width numeric vector unit object specifying width. height numeric vector unit object specifying height. ... Arguments passed grid::viewport default.units string indicating default units use     x, y, width, height     given numeric vectors. just string numeric     vector specifying justification viewport     relative (x, y) location.  two values, first     value specifies horizontal justification second value specifies     vertical justification.  Possible string values : \"left\",     \"right\", \"centre\", \"center\", \"bottom\",     \"top\".  numeric values, 0 means left alignment     1 means right alignment. gp object class \"gpar\", typically output     call function gpar.  basically     list graphical parameter settings. clip One \"\", \"inherit\",     \"\", indicating whether     clip extent viewport, inherit clipping region     parent viewport, turn clipping altogether.     back-compatibility, logical value TRUE corresponds     \"\" FALSE corresponds \"inherit\". May also grob (gTree) describes clipping path     result call .path. mask One \"none\" (FALSE)     \"inherit\" (TRUE)     grob (gTree) result call     .mask.  specifies viewport     mask, inherit mask parent,     mask, described grob. xscale numeric vector length two indicating minimum     maximum x-scale.  limits may identical. yscale numeric vector length two indicating minimum     maximum y-scale. limits may identical. angle numeric value indicating angle rotation     viewport.  Positive values indicate amount rotation,     degrees, anticlockwise positive x-axis. layout Grid layout object splits viewport     subregions. layout.pos.row numeric vector giving     rows occupied viewport     parent's layout. layout.pos.col numeric vector giving     columns occupied viewport     parent's layout. name character value uniquely identify viewport     pushed onto viewport tree.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/free.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Free from alignment — free_align","text":"free_align: modified version plot free_align class. free_border: modified version plot free_border class. free_guide: modified version plot free_guide class. free_lab: modified version plot free_lab class. free_space: modified version plot free_space class. free_vp: modified version plot free_vp class.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/free.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Free from alignment — free_align","text":"","code":"# directly copied from `patchwork` # Sometimes you have a plot that defies good composition alginment, e.g. due # to long axis labels p1 <- ggplot(mtcars) +     geom_bar(aes(y = factor(gear), fill = factor(gear))) +     scale_y_discrete(         \"\",         labels = c(             \"3 gears are often enough\",             \"But, you know, 4 is a nice number\",             \"I would def go with 5 gears in a modern car\"         )     )  # When combined with other plots it ends up looking bad p2 <- ggplot(mtcars) +     geom_point(aes(mpg, disp))  align_plots(p1, p2, ncol = 1L)   # We can fix this be using `free_align` align_plots(free_align(p1), p2, ncol = 1L)   # If we still want the panels to be aligned to the right, we can choose to # free only the left side align_plots(free_align(p1, axes = \"l\"), p2, ncol = 1L)   # We could use `free_lab` to fix the layout in a different way align_plots(p1, free_lab(p2), ncol = 1L)   # `free_border` is similar with `free_lab`, they have a distinction in terms # of placement on either the top or bottom side of the panel. Specifically, # the top side contains the `title` and `subtitle`, while the bottom side # contains the `caption`. free_lab() does not attach these elements in the # panel area. p3 <- ggplot(mtcars) +     geom_point(aes(hp, wt, colour = mpg)) +     ggtitle(\"Plot 3\") p_axis_top <- ggplot(mtcars) +     geom_point(aes(mpg, disp)) +     ggtitle(\"Plot axis in top\") +     scale_x_continuous(position = \"top\") align_plots(p_axis_top, free_lab(p3))  align_plots(p_axis_top, free_border(p3))   # Another issue is that long labels can occupy much spaces align_plots(NULL, p1, p2, p2)   # This can be fixed with `free_space` align_plots(NULL, free_space(p1, \"l\"), p2, p2)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/free_gg.html","id":null,"dir":"Reference","previous_headings":"","what":"Add ggplot to layout — free_gg","title":"Add ggplot to layout — free_gg","text":"free_gg() function allows incorporate ggplot object layout. Unlike align_gg(), aligns every axis value precisely, free_gg() focuses layout integration without enforcing strict axis alignment. ggfree() alias free_gg.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/free_gg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add ggplot to layout — free_gg","text":"","code":"free_gg(..., data = waiver(), size = NULL, active = NULL)  # Default S3 method free_gg(mapping = aes(), ..., data = waiver(), size = NULL, active = NULL)  # S3 method for class 'ggplot' free_gg(..., data = waiver(), size = NULL, active = NULL)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/free_gg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add ggplot to layout — free_gg","text":"... Additional arguments passed fortify_data_frame(). data dataset used initialize ggplot object. default, inherit parent layout applicable. Alternatively, pre-defined ggplot object can provided directly. size relative size plot, can specified unit. active active() object defines context settings added layout. mapping Default list aesthetic mappings use plot. specified, must supplied layer added plot.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/free_gg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add ggplot to layout — free_gg","text":"ggalign_free_gg object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/free_gg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add ggplot to layout — free_gg","text":"","code":"ggheatmap(matrix(rnorm(56), nrow = 7)) +     anno_top() +     align_dendro() +     ggfree(aes(wt, mpg), data = mtcars) +     geom_point() #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/geom_draw.html","id":null,"dir":"Reference","previous_headings":"","what":"Layer with customized draw function — geom_draw","title":"Layer with customized draw function — geom_draw","text":"Layer customized draw function","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/geom_draw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layer with customized draw function — geom_draw","text":"","code":"geom_draw(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   lineend = \"butt\",   linejoin = \"mitre\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/geom_draw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layer with customized draw function — geom_draw","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. lineend Line end style (round, butt, square). linejoin Line join style (round, mitre, bevel). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/geom_draw.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Layer with customized draw function — geom_draw","text":"geom_draw depends new aesthetics draw, always provided scale_draw_manual(), , can provide list functions define cell's grob (graphical object) drawn. aesthetic allows replace default rendering cells custom behavior, making possible tailor plot specific requirements.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/geom_draw.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Layer with customized draw function — geom_draw","text":"geom_draw() understands following aesthetics (required aesthetics bold): x y draw alpha colour fill group linetype linewidth shape size stroke Learn setting aesthetics vignette(\"ggplot2-specs\", package = \"ggplot2\").","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/geom_draw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Layer with customized draw function — geom_draw","text":"","code":"library(grid) ggplot(data.frame(value = letters[seq_len(5)], y = seq_len(5))) +     geom_draw(aes(x = 1, y = y, draw = value, fill = value)) +     scale_draw_manual(values = list(         a = function(x, y, width, height, fill) {             rectGrob(x, y,                 width = width, height = height,                 gp = gpar(fill = fill),                 default.units = \"native\"             )         },         b = function(x, y, width, height, fill) {             rectGrob(x, y,                 width = width, height = height,                 gp = gpar(fill = fill),                 default.units = \"native\"             )         },         c = function(x, y, width, height, fill) {             rectGrob(x, y,                 width = width, height = height,                 gp = gpar(fill = fill),                 default.units = \"native\"             )         },         d = function(x, y, width, height, shape) {             gList(                 pointsGrob(x, y, pch = shape),                 # To ensure the rectangle color is shown in the legends, you                 # must explicitly provide a color argument and include it in                 # the `gpar()` of the graphical object                 rectGrob(x, y, width, height,                     gp = gpar(col = \"black\", fill = NA)                 )             )         },         e = function(xmin, xmax, ymin, ymax) {             segmentsGrob(                 xmin, ymin,                 xmax, ymax,                 gp = gpar(lwd = 2)             )         }     )) +     scale_fill_brewer(palette = \"Dark2\") +     theme_void()"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/geom_pie.html","id":null,"dir":"Reference","previous_headings":"","what":"Pie charts — geom_pie","title":"Pie charts — geom_pie","text":"Pie charts","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/geom_pie.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pie charts — geom_pie","text":"","code":"geom_pie(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   clockwise = TRUE,   steps = 100,   lineend = \"butt\",   linejoin = \"round\",   linemitre = 10,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/geom_pie.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pie charts — geom_pie","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. clockwise single boolean value indicates clockwise . steps integer indicating number steps generate pie chart radian. Increasing value results smoother pie circular. lineend Line end style (round, butt, square). linejoin Line join style (round, mitre, bevel). linemitre Line mitre limit (number greater 1). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/geom_pie.html","id":"new-aesthetics","dir":"Reference","previous_headings":"","what":"new aesthetics","title":"Pie charts — geom_pie","text":"angle: pie circle angle. angle0: initial pie circle angle. radius: circle radius.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/geom_pie.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Pie charts — geom_pie","text":"geom_pie() understands following aesthetics (required aesthetics bold): x y angle alpha angle0 colour fill group linetype linewidth radius Learn setting aesthetics vignette(\"ggplot2-specs\", package = \"ggplot2\").","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/geom_pie.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pie charts — geom_pie","text":"","code":"ggplot(data.frame(x = 1:10, y = 1:10, value = 1:10 / sum(1:10))) +     geom_pie(aes(x, y, angle = value * 360))"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/geom_rect3d.html","id":null,"dir":"Reference","previous_headings":"","what":"Add z-aesthetic for geom_tile — geom_rect3d","title":"Add z-aesthetic for geom_tile — geom_rect3d","text":"Add z-aesthetic geom_tile","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/geom_rect3d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add z-aesthetic for geom_tile — geom_rect3d","text":"","code":"geom_rect3d(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   lineend = \"butt\",   linejoin = \"round\",   linemitre = 10,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  geom_tile3d(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   lineend = \"butt\",   linejoin = \"round\",   linemitre = 10,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/geom_rect3d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add z-aesthetic for geom_tile — geom_rect3d","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. lineend Line end style (round, butt, square). linejoin Line join style (round, mitre, bevel). linemitre Line mitre limit (number greater 1). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/geom_rect3d.html","id":"new-aesthetics","dir":"Reference","previous_headings":"","what":"new aesthetics","title":"Add z-aesthetic for geom_tile — geom_rect3d","text":"z: third dimention (z direction). theta: Angle x-axis z-axis.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/geom_rect3d.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Add z-aesthetic for geom_tile — geom_rect3d","text":"geom_rect3d() understands following aesthetics (required aesthetics bold): xmin xmax ymin ymax z alpha colour fill group linetype linewidth Learn setting aesthetics vignette(\"ggplot2-specs\", package = \"ggplot2\"). geom_tile3d() understands following aesthetics (required aesthetics bold): x y z alpha colour fill group height linetype linewidth width Learn setting aesthetics vignette(\"ggplot2-specs\", package = \"ggplot2\").","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/geom_subrect.html","id":null,"dir":"Reference","previous_headings":"","what":"Subdivide Rectangles — geom_subrect","title":"Subdivide Rectangles — geom_subrect","text":"geoms subdivide rectangles shared borders grid. geoms achieve result differ rectangles parameterized: geom_subrect(): Defines rectangles using four corners (xmin, xmax, ymin, ymax). geom_subtile(): Defines rectangles using center (x, y) dimensions (width, height).","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/geom_subrect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subdivide Rectangles — geom_subrect","text":"","code":"geom_subrect(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   byrow = TRUE,   direction = NULL,   lineend = \"butt\",   linejoin = \"mitre\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  geom_subtile(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   byrow = TRUE,   direction = NULL,   lineend = \"butt\",   linejoin = \"mitre\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/geom_subrect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subdivide Rectangles — geom_subrect","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. byrow single boolean value indicates whether arrange divided rectangles row-major order. direction string specifying arrangement direction: \"horizontal\": Creates single row (one-row layout). \"vertical\": Creates single column (one-column layout). NULL: Automatically determines layout dimensions using logic similar facet_wrap(). lineend Line end style (round, butt, square). linejoin Line join style (round, mitre, bevel). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/geom_subrect.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Subdivide Rectangles — geom_subrect","text":"geom_subrect() understands following aesthetics (required aesthetics bold): xmin xmax ymin ymax alpha colour fill group linetype linewidth Learn setting aesthetics vignette(\"ggplot2-specs\", package = \"ggplot2\"). geom_subtile() understands following aesthetics (required aesthetics bold): x y alpha colour fill group height linetype linewidth width Learn setting aesthetics vignette(\"ggplot2-specs\", package = \"ggplot2\").","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/geom_subrect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subdivide Rectangles — geom_subrect","text":"","code":"# arranges by row ggplot(data.frame(value = letters[seq_len(5)])) +     geom_subtile(aes(x = 1, y = 1, fill = value)) #> `geom_subtile()` subdivide tile into a maximal of 5 rectangles   # arranges by column ggplot(data.frame(value = letters[seq_len(9)])) +     geom_subtile(aes(x = 1, y = 1, fill = value), byrow = FALSE) #> `geom_subtile()` subdivide tile into a maximal of 9 rectangles   # one-row ggplot(data.frame(value = letters[seq_len(4)])) +     geom_subtile(aes(x = 1, y = 1, fill = value), direction = \"h\") #> `geom_subtile()` subdivide tile into a maximal of 4 rectangles   # one-column ggplot(data.frame(value = letters[seq_len(4)])) +     geom_subtile(aes(x = 1, y = 1, fill = value), direction = \"v\") #> `geom_subtile()` subdivide tile into a maximal of 4 rectangles"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/ggalign-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ggalign: A 'ggplot2' Extension for Consistent Axis Alignment — ggalign-package","title":"ggalign: A 'ggplot2' Extension for Consistent Axis Alignment — ggalign-package","text":"'ggplot2' extension offers various tools organizing arranging plots. designed consistently align specific axis across multiple 'ggplot' objects, making especially useful plots requiring data order manipulation. typical use case includes organizing combinations like dendrogram heatmap.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/ggalign-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ggalign: A 'ggplot2' Extension for Consistent Axis Alignment — ggalign-package","text":"Maintainer: Yun Peng yunyunp96@163.com (ORCID) Authors: Shixiang Wang w_shixiang@163.com (ORCID)","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/ggalignGrob.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a plot grob. — ggalignGrob","title":"Generate a plot grob. — ggalignGrob","text":"Generate plot grob.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/ggalignGrob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a plot grob. — ggalignGrob","text":"","code":"ggalignGrob(x)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/ggalignGrob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a plot grob. — ggalignGrob","text":"x object converted grob.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/ggalignGrob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a plot grob. — ggalignGrob","text":"grob() object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/ggalignGrob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a plot grob. — ggalignGrob","text":"","code":"ggalignGrob(ggplot()) #> TableGrob (20 x 17) \"layout\": 26 grobs #>     z         cells               name                                   grob #> 1   0 ( 1-20, 1-17)         background       rect[plot.background..rect.2930] #> 2   5 ( 9- 9, 7- 7)             spacer                         zeroGrob[NULL] #> 3   7 (11-11, 7- 7)             axis-l                         zeroGrob[NULL] #> 4   3 (13-13, 7- 7)             spacer                         zeroGrob[NULL] #> 5   6 ( 9- 9, 9- 9)             axis-t                         zeroGrob[NULL] #> 6   1 (11-11, 9- 9)              panel              gTree[panel-1.gTree.2925] #> 7   9 (13-13, 9- 9)             axis-b                         zeroGrob[NULL] #> 8   4 ( 9- 9,11-11)             spacer                         zeroGrob[NULL] #> 9   8 (11-11,11-11)             axis-r                         zeroGrob[NULL] #> 10  2 (13-13,11-11)             spacer                         zeroGrob[NULL] #> 11 10 ( 8- 8, 9- 9)             xlab-t                         zeroGrob[NULL] #> 12 11 (14-14, 9- 9)             xlab-b                         zeroGrob[NULL] #> 13 12 (11-11, 6- 6)             ylab-l                         zeroGrob[NULL] #> 14 13 (11-11,12-12)             ylab-r                         zeroGrob[NULL] #> 15 14 (11-11,15-15)    guide-box-right                         zeroGrob[NULL] #> 16 15 (11-11, 3- 3)     guide-box-left                         zeroGrob[NULL] #> 17 16 (17-17, 9- 9)   guide-box-bottom                         zeroGrob[NULL] #> 18 17 ( 5- 5, 9- 9)      guide-box-top                         zeroGrob[NULL] #> 19 18 (11-11, 9- 9)   guide-box-inside                         zeroGrob[NULL] #> 20 19 ( 4- 4, 9- 9)           subtitle zeroGrob[plot.subtitle..zeroGrob.2927] #> 21 20 ( 3- 3, 9- 9)              title    zeroGrob[plot.title..zeroGrob.2926] #> 22 21 (18-18, 9- 9)            caption  zeroGrob[plot.caption..zeroGrob.2928] #> 23 22 ( 7- 7, 9- 9)    patch-title-top                         zeroGrob[NULL] #> 24 23 (11-11, 5- 5)   patch-title-left                         zeroGrob[NULL] #> 25 24 (15-15, 9- 9) patch-title-bottom                         zeroGrob[NULL] #> 26 25 (11-11,13-13)  patch-title-right                         zeroGrob[NULL]"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/ggalign_attr.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Data from the Attached Attribute in the Rendering Process — ggalign_attr","title":"Get Data from the Attached Attribute in the Rendering Process — ggalign_attr","text":"ggalign_attr provides access supplementary information stored attributes layout rendering process quad_layout()/ggheatmap() stack_layout() object. attributes, commonly attached data transformation functions like fortify_matrix() fortify_data_frame(), can include essential details filtered supplementary data inform downstream operations.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/ggalign_attr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Data from the Attached Attribute in the Rendering Process — ggalign_attr","text":"","code":"ggalign_attr(x, field = NULL)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/ggalign_attr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Data from the Attached Attribute in the Rendering Process — ggalign_attr","text":"x Data used, typically inherited layout quad_layout()/ggheatmap() stack_layout() object. field string specifying particular data retrieve attached attribute. NULL, entire attached attribute list returned.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/ggalign_attr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Data from the Attached Attribute in the Rendering Process — ggalign_attr","text":"specified data attached attribute NULL unavailable.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/ggalign_attr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Data from the Attached Attribute in the Rendering Process — ggalign_attr","text":"Attributes attached data particularly useful input data transformed ways restrict access complete dataset. instance, fortify_matrix.MAF() might filter mutation data adding attributes retain essential context, total number observations, detailed aggregated analyses.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/ggalign_attr_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Set or get the Attached Attribute across the Rendering Process — ggalign_attr_set","title":"Set or get the Attached Attribute across the Rendering Process — ggalign_attr_set","text":"ggalign_attr_set: Attaches supplementary data input, facilitating downstream use. ggalign_attr_get: Extracts previously attached supplementary data transformation process.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/ggalign_attr_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set or get the Attached Attribute across the Rendering Process — ggalign_attr_set","text":"","code":"ggalign_attr_set(x, values)  ggalign_attr_get(x)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/ggalign_attr_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set or get the Attached Attribute across the Rendering Process — ggalign_attr_set","text":"x Input data layout. values list attached.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/ggalign_attr_set.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set or get the Attached Attribute across the Rendering Process — ggalign_attr_set","text":"Attributes attached data particularly useful input data transformed ways restrict access complete dataset. instance, fortify_matrix.MAF() might filter mutation data adding attributes retain essential context, total number observations, detailed aggregated analyses.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/ggalign_stat.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the statistics from the layout — ggalign_stat","title":"Get the statistics from the layout — ggalign_stat","text":"Get statistics layout","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/ggalign_stat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the statistics from the layout — ggalign_stat","text":"","code":"ggalign_stat(x, ...)  # S3 method for class 'QuadLayout' ggalign_stat(x, position, ...)  # S3 method for class 'StackLayout' ggalign_stat(x, what, ...)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/ggalign_stat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the statistics from the layout — ggalign_stat","text":"x quad_layout()/ggheatmap() stack_layout() object. ... Arguments passed methods. position string \"top\", \"left\", \"bottom\", \"right\". single number string plot elements stack layout.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/ggalign_stat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the statistics from the layout — ggalign_stat","text":"statistics","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/ggoncoplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create OncoPrint Visualizations from Genetic Alteration Data — ggoncoplot","title":"Create OncoPrint Visualizations from Genetic Alteration Data — ggoncoplot","text":"ggoncoplot() function generates oncoPrint visualizations display genetic alterations matrix format. function especially useful visualizing complex genomic data, mutations, copy number variations, genomic alterations cancer research.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/ggoncoplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create OncoPrint Visualizations from Genetic Alteration Data — ggoncoplot","text":"","code":"ggoncoplot(   data = NULL,   mapping = aes(),   ...,   map_width = NULL,   map_height = NULL,   reorder_row = reorder_column,   reorder_column = TRUE,   width = NA,   height = NA,   filling = waiver(),   theme = NULL,   active = NULL )  # Default S3 method ggoncoplot(   data = NULL,   mapping = aes(),   ...,   map_width = NULL,   map_height = NULL,   reorder_row = reorder_column,   reorder_column = TRUE,   width = NA,   height = NA,   filling = waiver(),   theme = NULL,   active = NULL )"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/ggoncoplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create OncoPrint Visualizations from Genetic Alteration Data — ggoncoplot","text":"data character matrix encodes alterations, can use \";\", \":\", \",\", \"|\" separate multiple alterations. mapping Default list aesthetic mappings use main plot layout. specified, must supplied layer added main plot. ... Additional arguments passed fortify_matrix(). map_width, map_height named numeric value defines width/height alterations. reorder_row, reorder_column boolean value indicating whether reorder rows/columns based frequency characteristics alterations. width, height relative width/height main plot, can unit object. filling ggheatmap(), \"tile\" can used. theme theme() used render guides, title, subtitle, caption, margins, patch.title, panel.border, background. NULL (default), inherit parent layout. active active() object defines context settings added layout.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/ggoncoplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create OncoPrint Visualizations from Genetic Alteration Data — ggoncoplot","text":"HeatmapLayout object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/ggoncoplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create OncoPrint Visualizations from Genetic Alteration Data — ggoncoplot","text":"ggoncoplot() wrapper around ggheatmap() function, designed simplify creation OncoPrint-style visualizations. function automatically processes input character matrix splitting encoded alterations (delimited \";\", \":\", \",\", \"|\") individual genomic events unnesting columns visualization. Additionally, predefined reordering function, adapted https://gist.github.com/armish/564a65ab874a770e2c26, included enhance organization alterations.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/ggoncoplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create OncoPrint Visualizations from Genetic Alteration Data — ggoncoplot","text":"","code":"# A simple example from `ComplexHeatmap` mat <- read.table(textConnection(     \"s1,s2,s3 g1,snv;indel,snv,indel g2,,snv;indel,snv g3,snv,,indel;snv\" ), row.names = 1, header = TRUE, sep = \",\", stringsAsFactors = FALSE)  ggoncoplot(mat, map_width = c(snv = 0.5), map_height = c(indel = 0.9)) +     # Note that guide legends from `geom_tile` and `geom_bar` are different.     # Although they appear similar, the internal mechanisms won't collapse     # the guide legends. Therefore, we remove the guide legends from     # `geom_tile`.     guides(fill = \"none\") +     anno_top(size = 0.5) +     ggalign() +     geom_bar(aes(fill = value), data = function(x) {         subset(x, !is.na(value))     }) +     anno_right(size = 0.5) +     ggalign() +     geom_bar(aes(fill = value), orientation = \"y\", data = function(x) {         subset(x, !is.na(value))     }) &     scale_fill_brewer(palette = \"Dark2\", na.translate = FALSE)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/ggwrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrap Arbitrary Graphics to ggplot — ggwrap","title":"Wrap Arbitrary Graphics to ggplot — ggwrap","text":"ggwrap() function allows non-ggplot2 elements converted compliant representation use align_plots(). useful adding graphics can converted grob patch() method.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/ggwrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrap Arbitrary Graphics to ggplot — ggwrap","text":"","code":"ggwrap(plot, ..., align = \"panel\", on_top = FALSE, clip = TRUE, vp = NULL)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/ggwrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrap Arbitrary Graphics to ggplot — ggwrap","text":"plot graphic can converted grob using patch(). ... Additional arguments passed patch() method. align string specifying area place plot: \"full\" full area, \"plot\" full plotting area (including axis label), \"panel\" actual area data drawn. on_top single boolean value indicates whether graphic plot put frontmost. Note: graphic plot always put background. clip single boolean value indicating whether grob clipped expand outside designated area. vp viewport object, can use define plot area.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/ggwrap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrap Arbitrary Graphics to ggplot — ggwrap","text":"wrapped_plot object can directly placed align_plots().","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/ggwrap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrap Arbitrary Graphics to ggplot — ggwrap","text":"","code":"library(grid) ggwrap(rectGrob(gp = gpar(fill = \"goldenrod\")), align = \"full\") +     inset(rectGrob(gp = gpar(fill = \"steelblue\")), align = \"panel\") +     inset(textGrob(\"Here are some text\", gp = gpar(color = \"black\")),         align = \"panel\"     )  p1 <- ggplot(mtcars) +     geom_point(aes(mpg, disp)) +     ggtitle(\"Plot 1\") align_plots(p1, ggwrap(     ~ plot(mtcars$mpg, mtcars$disp),     mar = c(0, 2, 0, 0), bg = NA ))"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/hclust2.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Tree Structures with Hierarchical Clustering — hclust2","title":"Generate Tree Structures with Hierarchical Clustering — hclust2","text":"Generate Tree Structures Hierarchical Clustering","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/hclust2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Tree Structures with Hierarchical Clustering — hclust2","text":"","code":"hclust2(   matrix,   distance = \"euclidean\",   method = \"complete\",   use_missing = \"pairwise.complete.obs\" )"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/hclust2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Tree Structures with Hierarchical Clustering — hclust2","text":"matrix numeric matrix, data frame. distance string distance measure used. must one \"euclidean\", \"maximum\", \"manhattan\", \"canberra\", \"binary\" \"minkowski\".  Correlation coefficient can also used, including \"pearson\", \"spearman\" \"kendall\". way, 1 - cor used distance. addition, can also provide dist object directly function return dist object. Use NULL, want calculate distance. method string agglomeration method used. (unambiguous abbreviation ) one \"ward.D\", \"ward.D2\", \"single\", \"complete\", \"average\" (= UPGMA), \"mcquitty\" (= WPGMA), \"median\" (= WPGMC) \"centroid\" (= UPGMC). can also provide function accepts calculated distance (input matrix distance NULL) returns hclust object. Alternative, can supply object can coerced hclust. use_missing optional character string giving method computing covariances presence missing values. must (abbreviation ) one strings \"everything\", \".obs\", \"complete.obs\", \"na..complete\", \"pairwise.complete.obs\". used distance correlation coefficient string.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/hclust2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Tree Structures with Hierarchical Clustering — hclust2","text":"hclust object.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/hclust2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Tree Structures with Hierarchical Clustering — hclust2","text":"","code":"hclust2(dist(USArrests), method = \"ward.D\") #>  #> Call: #> stats::hclust(d = d, method = method) #>  #> Cluster method   : ward.D  #> Distance         : euclidean  #> Number of objects: 50  #>"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/heatmap_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrange Plots in a Heatmap — heatmap_layout","title":"Arrange Plots in a Heatmap — heatmap_layout","text":"heatmap_layout specialized version quad_alignb(), simplifies creation heatmap plots integrating essential elements standard heatmap layout, ensuring appropriate data mapping visualization layers automatically applied. ggheatmap alias heatmap_layout.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/heatmap_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrange Plots in a Heatmap — heatmap_layout","text":"","code":"heatmap_layout(   data = NULL,   mapping = aes(),   ...,   width = NA,   height = NA,   filling = waiver(),   theme = NULL,   active = NULL,   set_context = deprecated(),   order = deprecated(),   name = deprecated(),   guides = deprecated() )"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/heatmap_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrange Plots in a Heatmap — heatmap_layout","text":"data Default dataset use layout. specified, must supplied plot added layout. default, try inherit parent layout. already matrix, converted one fortify_matrix(). mapping Default list aesthetic mappings use main plot layout. specified, must supplied layer added main plot. ... Additional arguments passed fortify_matrix(). width, height relative width/height main plot, can unit object. filling single string \"raster\" \"tile\" indicate filling style. default, waiver() used, means input matrix 20,000 cells (nrow * ncol > 20000), geom_raster() used performance efficiency; smaller matrices, geom_tile() used. customize filling style, set NULL. backward compatibility, single boolean value acceptable: TRUE means waiver(), FALSE means NULL. default, classic heatmap color scheme scale_fill_gradient2(low = \"blue\", high = \"red\") utilized continuous values. can use options \"ggalign.heatmap_continuous_fill\" \"ggalign.heatmap_discrete_fill\" modify default heatmap body filling color scale. See scale_fill_continuous() scale_fill_discrete() details option settings. theme theme() used render guides, title, subtitle, caption, margins, patch.title, panel.border, background. NULL (default), inherit parent layout. active active() object defines context settings added layout. set_context Please use active argument instead. order Please use active argument instead. name Please use active argument instead. guides Please use plot_align() function instead.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/heatmap_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Arrange Plots in a Heatmap — heatmap_layout","text":"HeatmapLayout object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/heatmap_layout.html","id":"ggplot-specification","dir":"Reference","previous_headings":"","what":"ggplot2 specification","title":"Arrange Plots in a Heatmap — heatmap_layout","text":"data input ggheatmap converted long formated data frame drawing. default mapping use aes(.data$.x, .data$.y), can use mapping argument control . data underlying ggplot object contains following columns: .xpanel .ypanel: column row panel .x .y: x y coordinates .row_names .column_names: factor row column names original matrix (applicable names exist). .row_index .column_index: row column index original matrix. value: actual matrix value.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/heatmap_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arrange Plots in a Heatmap — heatmap_layout","text":"","code":"ggheatmap(1:10) #> → heatmap built with `geom_tile()`  ggheatmap(letters) #> → heatmap built with `geom_tile()`  ggheatmap(matrix(rnorm(81), nrow = 9L)) #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/inset.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a ggplot inset — inset","title":"Create a ggplot inset — inset","text":"Create ggplot inset","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/inset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a ggplot inset — inset","text":"","code":"inset(plot, ..., align = \"panel\", on_top = TRUE, clip = TRUE, vp = NULL)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/inset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a ggplot inset — inset","text":"plot graphic can converted grob using patch(). ... Additional arguments passed patch() method. align string specifying area place plot: \"full\" full area, \"plot\" full plotting area (including axis label), \"panel\" actual area data drawn. on_top single boolean value indicates whether graphic plot put frontmost. Note: graphic plot always put background. clip single boolean value indicating whether grob clipped expand outside designated area. vp viewport object, can use define plot area.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/inset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a ggplot inset — inset","text":"patch_inset object, can added ggplot.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/inset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a ggplot inset — inset","text":"","code":"library(grid) p1 <- ggplot(mtcars) +     geom_point(aes(mpg, disp)) p2 <- ggplot(mtcars) +     geom_boxplot(aes(gear, disp, group = gear)) p1 + inset(p2, vp = viewport(0.6, 0.6,     just = c(0, 0), width = 0.4, height = 0.4 ))"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/is_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Reports whether x is layout object — is_layout","title":"Reports whether x is layout object — is_layout","text":"Reports whether x layout object","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/is_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reports whether x is layout object — is_layout","text":"","code":"is_layout(x)  is_quad_layout(x)  is_stack_layout(x)  is_cross_layout(x)  is_heatmap_layout(x)  is_ggheatmap(x)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/is_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reports whether x is layout object — is_layout","text":"x object test.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/is_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reports whether x is layout object — is_layout","text":"single boolean value.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/is_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reports whether x is layout object — is_layout","text":"","code":"is_layout(ggheatmap(1:10)) #> [1] TRUE  # for quad_layout() is_quad_layout(quad_alignb(1:10)) #> [1] TRUE is_quad_layout(quad_alignh(1:10)) #> [1] TRUE is_quad_layout(quad_alignv(1:10)) #> [1] TRUE is_quad_layout(quad_free(mtcars)) #> [1] TRUE  # for stack_layout() is_stack_layout(stack_align(1:10)) #> Warning: The `direction` argument of `stack_align()` must be provided as of ggalign #> 0.0.5. #> ℹ no default value of 'direction' argument in the next release #> ℹ The deprecated feature was likely used in the ggalign package. #>   Please report the issue at <https://github.com/Yunuuuu/ggalign/issues>. #> [1] TRUE is_stack_layout(stack_free(1:10)) #> Warning: The `direction` argument of `stack_free()` must be provided as of ggalign #> 0.0.5. #> ℹ no default value of 'direction' argument in the next release #> ℹ The deprecated feature was likely used in the ggalign package. #>   Please report the issue at <https://github.com/Yunuuuu/ggalign/issues>. #> [1] TRUE  # for heatmap_layout() is_heatmap_layout(ggheatmap(1:10)) #> [1] TRUE is_ggheatmap(ggheatmap(1:10)) #> [1] TRUE"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/layer_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Change the layer adding order — layer_order","title":"Change the layer adding order — layer_order","text":"function allows change order layers added ggplot.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/layer_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change the layer adding order — layer_order","text":"","code":"layer_order(layer, order = 0)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/layer_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change the layer adding order — layer_order","text":"layer layer geometry object added. order integer indicating position layer added. <= 0, layer added beginning. greater number plot layers, added end.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/layer_order.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change the layer adding order — layer_order","text":"layer_order object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/layer_order.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change the layer adding order — layer_order","text":"","code":"ggplot(faithfuld, aes(waiting, eruptions)) +     geom_raster(aes(fill = density)) +     geom_point(color = \"red\", size = 1)  ggplot(faithfuld, aes(waiting, eruptions)) +     geom_raster(aes(fill = density)) +     layer_order(geom_point(color = \"red\", size = 1))"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/layout-operator.html","id":null,"dir":"Reference","previous_headings":"","what":"Layout operator — layout-operator","title":"Layout operator — layout-operator","text":"+: Adds elements active plot active layout. &: Applies elements plots layout. -: Adds elements multiple plots layout.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/layout-operator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layout operator — layout-operator","text":"e1 quad_layout()/ggheatmap() stack_layout() object. e2 object added plot.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/layout-operator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Layout operator — layout-operator","text":"modified Layout object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/layout-operator.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Layout operator — layout-operator","text":"+ operator straightforward used needed. order reduce code repetition ggalign provides two operators adding ggplot elements (geoms, themes, facets, etc.) multiple/plots quad_layout()/ggheatmap() stack_layout() object: - &. See vignette(\"operator\") details.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/layout-operator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Layout operator — layout-operator","text":"","code":"set.seed(123) small_mat <- matrix(rnorm(56), nrow = 7) ggheatmap(small_mat) +     anno_top() +     ggalign() +     geom_point(aes(y = value)) #> → heatmap built with `geom_tile()`   # `&` operator apply it to all plots ggheatmap(small_mat) +     anno_top() +     align_dendro() &     theme(panel.border = element_rect(         colour = \"red\", fill = NA, linewidth = unit(2, \"mm\")     )) #> → heatmap built with `geom_tile()`   # If the active layout is the annotation stack, the `-` operator will only # add the elements to all plots in the active annotation stack: ggheatmap(small_mat) +     anno_left(size = 0.2) +     align_dendro(aes(color = branch), k = 3L) +     align_dendro(aes(color = branch), k = 3L) -     # Modify the the color scales of all plots in the left annotation     scale_color_brewer(palette = \"Dark2\") #> → heatmap built with `geom_tile()`   # If the active layout is the `ggstack()`/`stack_layout()` itself, `-` # applies the elements to all plots in the layout except the nested # `ggheatmap()`/`quad_layout()`. stack_alignv(small_mat) +     align_dendro() +     ggtitle(\"I'm from the parent stack\") +     ggheatmap() +     # remove any active context     stack_active() +     align_dendro() +     ggtitle(\"I'm from the parent stack\") -     # Modify the the color scales of all plots in the stack layout except the     # heatmap layout     scale_color_brewer(palette = \"Dark2\") -     # set the background of all plots in the stack layout except the heatmap     # layout     theme(plot.background = element_rect(fill = \"red\")) #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/layout_annotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify components of the layout — layout_annotation","title":"Modify components of the layout — layout_annotation","text":"modify theme layout","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/layout_annotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify components of the layout — layout_annotation","text":"","code":"layout_annotation(theme = waiver(), ...)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/layout_annotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify components of the layout — layout_annotation","text":"theme theme() used render guides, title, subtitle, caption, margins, patch.title, panel.border, background. NULL (default), inherit parent layout. ... dots future extensions must empty.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/layout_annotation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Modify components of the layout — layout_annotation","text":"guides, patch.title, panel.border, background always added even nested alignpatches object. title, subtitle, caption, margins added top-level alignpatches object .","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/layout_annotation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modify components of the layout — layout_annotation","text":"","code":"p1 <- ggplot(mtcars) +     geom_point(aes(mpg, disp)) p2 <- ggplot(mtcars) +     geom_boxplot(aes(gear, disp, group = gear)) p3 <- ggplot(mtcars) +     geom_bar(aes(gear)) +     facet_wrap(~cyl) align_plots(     p1 + theme(plot.background = element_blank()),     p2 + theme(plot.background = element_blank()),     p3 + theme(plot.background = element_blank()) ) +     layout_annotation(         theme = theme(plot.background = element_rect(fill = \"red\"))     )"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/layout_design.html","id":null,"dir":"Reference","previous_headings":"","what":"Define the grid to compose plots in — layout_design","title":"Define the grid to compose plots in — layout_design","text":"control different plots laid , need add layout design specification. nesting grids, layout scoped current nesting level.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/layout_design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define the grid to compose plots in — layout_design","text":"","code":"layout_design(   ncol = waiver(),   nrow = waiver(),   byrow = waiver(),   widths = waiver(),   heights = waiver(),   design = waiver(),   guides = NA )"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/layout_design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define the grid to compose plots in — layout_design","text":"ncol, nrow dimensions grid create - NULL use logic facet_wrap() set dimensions byrow FALSE plots filled column-major order. widths, heights relative widths heights column row grid. get repeated match dimensions grid. special value NA behave 1null unit unless fixed aspect plot inserted case allow dimension expand contract match aspect ratio content. design Specification location areas layout. Can either specified text string concatenating calls area() together. guides string one \"t\", \"l\", \"b\", \"r\" indicating side guide legends collected. Defaults waiver(), inherits parent layout. parent layout, NULL provided, guides collected.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/layout_design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define the grid to compose plots in — layout_design","text":"layout_design object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/layout_design.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define the grid to compose plots in — layout_design","text":"","code":"p1 <- ggplot(mtcars) +     geom_point(aes(mpg, disp)) p2 <- ggplot(mtcars) +     geom_boxplot(aes(gear, disp, group = gear)) p3 <- ggplot(mtcars) +     geom_bar(aes(gear)) +     facet_wrap(~cyl) align_plots(p1, p2, p3) +     layout_design(nrow = 1L)  align_plots(p1, p2, p3) +     layout_design(ncol = 1L)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/layout_title.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate the whole layout — layout_title","title":"Annotate the whole layout — layout_title","text":"Annotate whole layout","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/layout_title.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate the whole layout — layout_title","text":"","code":"layout_title(title = waiver(), subtitle = waiver(), caption = waiver())"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/layout_title.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate the whole layout — layout_title","text":"title text title. subtitle text subtitle plot displayed title. caption text caption displayed bottom-right plot default.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/layout_title.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate the whole layout — layout_title","text":"layout_title object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/layout_title.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotate the whole layout — layout_title","text":"","code":"p1 <- ggplot(mtcars) +     geom_point(aes(mpg, disp)) p2 <- ggplot(mtcars) +     geom_boxplot(aes(gear, disp, group = gear)) p3 <- ggplot(mtcars) +     geom_bar(aes(gear)) +     facet_wrap(~cyl) align_plots(p1, p2, p3) +     layout_title(title = \"I'm title\")"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/order2.html","id":null,"dir":"Reference","previous_headings":"","what":"Ordering Permutation — order2","title":"Ordering Permutation — order2","text":"order2 returns permutation rearranges first argument ascending order.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/order2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ordering Permutation — order2","text":"","code":"order2(x)  # S3 method for class 'hclust' order2(x)  # S3 method for class 'dendrogram' order2(x)  # S3 method for class 'ser_permutation_vector' order2(x)  # S3 method for class 'ser_permutation' order2(x)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/order2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ordering Permutation — order2","text":"x objects can extracting ordering.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/order2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ordering Permutation — order2","text":"integer vector unless inputs 2^31 elements, double vector.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/order2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ordering Permutation — order2","text":"","code":"order2(hclust2(matrix(rnorm(100L), nrow = 10L))) #>  [1]  5  6  2  3  9  1  4  8  7 10"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.Heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Object into a Grob — patch.Heatmap","title":"Convert Object into a Grob — patch.Heatmap","text":"patch() function used ggwrap() inset() convert objects grob.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.Heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Object into a Grob — patch.Heatmap","text":"","code":"# S3 method for class 'Heatmap' patch(x, ..., device = NULL)  # S3 method for class 'HeatmapList' patch(x, ..., device = NULL)  # S3 method for class 'HeatmapAnnotation' patch(x, ..., device = NULL)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.Heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Object into a Grob — patch.Heatmap","text":"x object converted grob. ... Additional arguments passed draw(). device function opens graphics device temporary     rendering. default -screen, -memory device     based pdf device, default device may     satisfactory using custom fonts.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.Heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Object into a Grob — patch.Heatmap","text":"grob object.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.alignpatches.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Object into a Grob — patch.alignpatches","title":"Convert Object into a Grob — patch.alignpatches","text":"patch() function used ggwrap() inset() convert objects grob.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.alignpatches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Object into a Grob — patch.alignpatches","text":"","code":"# S3 method for class 'alignpatches' patch(x, ...)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.alignpatches.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Object into a Grob — patch.alignpatches","text":"x object converted grob. ... used currently.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.alignpatches.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Object into a Grob — patch.alignpatches","text":"grob object.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Object into a Grob — patch.formula","title":"Convert Object into a Grob — patch.formula","text":"patch() function used ggwrap() inset() convert objects grob.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Object into a Grob — patch.formula","text":"","code":"# S3 method for class 'formula' patch(x, ..., device = NULL, name = NULL)  # S3 method for class '`function`' patch(x, ..., device = NULL, name = NULL)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Object into a Grob — patch.formula","text":"x object converted grob. ... Graphical Parameters passed par(). device function opens graphics device grid.echo()     work .  default -screen, -memory device     based pdf device.  default device may     satisfactory using custom fonts. name character identifier.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Object into a Grob — patch.formula","text":"grob object.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.ggplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Object into a Grob — patch.ggplot","title":"Convert Object into a Grob — patch.ggplot","text":"patch() function used ggwrap() inset() convert objects grob.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.ggplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Object into a Grob — patch.ggplot","text":"","code":"# S3 method for class 'ggplot' patch(x, ...)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.ggplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Object into a Grob — patch.ggplot","text":"x object converted grob. ... used currently.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.ggplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Object into a Grob — patch.ggplot","text":"grob object.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.grob.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Object into a Grob — patch.grob","title":"Convert Object into a Grob — patch.grob","text":"patch() function used ggwrap() inset() convert objects grob.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.grob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Object into a Grob — patch.grob","text":"","code":"# S3 method for class 'grob' patch(x, ...)  # S3 method for class 'gList' patch(x, ...)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.grob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Object into a Grob — patch.grob","text":"x object converted grob. ... used currently.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.grob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Object into a Grob — patch.grob","text":"grob object.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Object into a Grob — patch","title":"Convert Object into a Grob — patch","text":"patch() function used ggwrap() inset() convert objects grob.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Object into a Grob — patch","text":"","code":"patch(x, ...)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Object into a Grob — patch","text":"x object converted grob. ... Additional arguments passed specific methods.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Object into a Grob — patch","text":"grob object.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.patch.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Object into a Grob — patch.patch","title":"Convert Object into a Grob — patch.patch","text":"patch() function used ggwrap() inset() convert objects grob.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.patch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Object into a Grob — patch.patch","text":"","code":"# S3 method for class 'patch' patch(x, ...)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.patch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Object into a Grob — patch.patch","text":"x object converted grob. ... used currently.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.patch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Object into a Grob — patch.patch","text":"grob object.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.patch_ggplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Object into a Grob — patch.patch_ggplot","title":"Convert Object into a Grob — patch.patch_ggplot","text":"patch() function used ggwrap() inset() convert objects grob.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.patch_ggplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Object into a Grob — patch.patch_ggplot","text":"","code":"# S3 method for class 'patch_ggplot' patch(x, ...)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.patch_ggplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Object into a Grob — patch.patch_ggplot","text":"x object converted grob. ... used currently.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.patch_ggplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Object into a Grob — patch.patch_ggplot","text":"grob object.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.patchwork.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Object into a Grob — patch.patchwork","title":"Convert Object into a Grob — patch.patchwork","text":"patch() function used ggwrap() inset() convert objects grob.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.patchwork.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Object into a Grob — patch.patchwork","text":"","code":"# S3 method for class 'patchwork' patch(x, ...)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.patchwork.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Object into a Grob — patch.patchwork","text":"x object converted grob. ... used currently.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.patchwork.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Object into a Grob — patch.patchwork","text":"grob object.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.pheatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Object into a Grob — patch.pheatmap","title":"Convert Object into a Grob — patch.pheatmap","text":"patch() function used ggwrap() inset() convert objects grob.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.pheatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Object into a Grob — patch.pheatmap","text":"","code":"# S3 method for class 'pheatmap' patch(x, ...)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.pheatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Object into a Grob — patch.pheatmap","text":"x object converted grob. ... used currently.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.pheatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Object into a Grob — patch.pheatmap","text":"grob object.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.recordedplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Object into a Grob — patch.recordedplot","title":"Convert Object into a Grob — patch.recordedplot","text":"patch() function used ggwrap() inset() convert objects grob.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.recordedplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Object into a Grob — patch.recordedplot","text":"","code":"# S3 method for class 'recordedplot' patch(x, ..., device = NULL)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.recordedplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Object into a Grob — patch.recordedplot","text":"x object converted grob. ... used currently. device function opens graphics device grid.echo()     work .  default -screen, -memory device     based pdf device.  default device may     satisfactory using custom fonts.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.recordedplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Object into a Grob — patch.recordedplot","text":"grob object.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.trellis.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Object into a Grob — patch.trellis","title":"Convert Object into a Grob — patch.trellis","text":"patch() function used ggwrap() inset() convert objects grob.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.trellis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Object into a Grob — patch.trellis","text":"","code":"# S3 method for class 'trellis' patch(x, ..., device = NULL)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.trellis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Object into a Grob — patch.trellis","text":"x object converted grob. ... Arguments passed grid::grid.grabExpr warn integer specifying amount warnings     emit.  0 means warnings, 1 means warn     certain grab faithfully represent     original scene. 2 means warn possibility     grab faithfully represent     original scene. wrap logical indicating output     captured. TRUE, non-grob element     display list captured wrapping grob. wrap.grobs logical indicating whether, wrapping     elements (wrap=TRUE), wrap grobs (just     wrap viewports). width,height Size device used temporary     rendering. device function opens graphics device temporary     rendering. default -screen, -memory device     based pdf device, default device may     satisfactory using custom fonts.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch.trellis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Object into a Grob — patch.trellis","text":"grob object.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch_titles.html","id":null,"dir":"Reference","previous_headings":"","what":"Add patch titles to plot borders — patch_titles","title":"Add patch titles to plot borders — patch_titles","text":"function extends ggplot2's title functionality, allowing add titles border plot: top, left, bottom, right.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch_titles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add patch titles to plot borders — patch_titles","text":"","code":"patch_titles(   top = waiver(),   left = waiver(),   bottom = waiver(),   right = waiver() )"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch_titles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add patch titles to plot borders — patch_titles","text":"top, left, bottom, right string specifying title added top, left, bottom, right border plot.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch_titles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add patch titles to plot borders — patch_titles","text":"labels object added ggplot.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch_titles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add patch titles to plot borders — patch_titles","text":"can also use labs() specify titles (use arguments \"top\", \"left\", \"bottom\", \"right\") top, left, bottom, right borders plot. appearance alignment patch titles can customized using theme(): plot.patch_title/plot.patch_title.*: Controls text appearance patch titles. default, plot.patch_title inherit plot.title, settings border inherit plot.patch_title, exception angle property, inherited. plot.patch_title.position/plot.patch_title.position.*: Determines alignment patch titles. default, plot.patch_title.position inherit plot.title.position, settings border inherit plot.patch_title. value \"panel\" aligns patch titles plot panels. Setting \"plot\" aligns patch title entire plot (excluding margins plot tags).","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/patch_titles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add patch titles to plot borders — patch_titles","text":"","code":"ggplot(mtcars) +     geom_point(aes(mpg, disp)) +     patch_titles(         top = \"I'm top patch title\",         left = \"I'm left patch title\",         bottom = \"I'm bottom patch title\",         right = \"I'm right patch title\"     )"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/plot_align.html","id":null,"dir":"Reference","previous_headings":"","what":"Align Specifications in the Layout — plot_align","title":"Align Specifications in the Layout — plot_align","text":"plot_align() function defines align Specifications plots.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/plot_align.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Align Specifications in the Layout — plot_align","text":"","code":"plot_align(guides = NA, free_spaces = NA, free_labs = NA)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/plot_align.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Align Specifications in the Layout — plot_align","text":"guides string one \"t\", \"l\", \"b\", \"r\" indicating side guide legends collected. Defaults waiver(), inherits parent layout. parent layout, guides collected. NULL, guides collected. free_spaces string one \"t\", \"l\", \"b\", \"r\" indicating border spaces removed. Defaults waiver(), inherits parent layout. parent, default NULL, meaning spaces removed. Usually want apply whole layout, instead individual plots. free_labs string one \"t\", \"l\", \"b\", \"r\" indicating axis titles free alignment. Defaults waiver(), inherits parent layout. parent layout, axis titles aligned. NULL, axis titles aligned.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/plot_align.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Align Specifications in the Layout — plot_align","text":"plot_align object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/plot_align.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Align Specifications in the Layout — plot_align","text":"","code":"set.seed(123) mat <- matrix(rnorm(72), nrow = 8) # used in the layout, define the default action for all plots in the layout ggheatmap(mat) -     plot_align(guides = NULL) +     anno_right() +     align_dendro(aes(color = branch), k = 3) #> → heatmap built with `geom_tile()`   # You can also add it for a single plot ggheatmap(mat) -     # for all plots in the layout, we default won't collect any guide legends     plot_align(guides = NULL) +     # for the heatmap body, we collect guide legends in the right     # note, the guide legends will be collected to the right side of the     # layout which will overlap the legends in the right annotation     plot_align(guides = \"r\") +     anno_right() +     align_dendro(aes(color = branch), k = 3) #> → heatmap built with `geom_tile()`   # to avoid overlapping, we can also collect the guide legends in the # right annotation ggheatmap(mat) -     plot_align(guides = NULL) +     plot_align(guides = \"r\") +     anno_right() +     align_dendro(aes(color = branch), k = 3) +     plot_align(guides = \"r\") #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/plot_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot data Specifications — plot_data","title":"Plot data Specifications — plot_data","text":"Transforms plot data. Many functions package require specific data format align observations, plot_data() helps reformat data frames needed.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/plot_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot data Specifications — plot_data","text":"","code":"plot_data(data, inherit = FALSE)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/plot_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot data Specifications — plot_data","text":"data function transform plot data rendering, referred plot_data. Acceptable values include: NULL: action taken. waiver(): Inherits parent layout. function purrr-style formula: Used transform plot data, accept data frame return data frame. can apply parent layout plot_data function, using inherit argument. Use hook modify data geoms layout created (matrix data, melted long format data frame) rendering ggplot2. returned data must data frame ggplot. inherit single boolean value indicates whether apply parent plot_data first apply specified plot_data plot. Defaults FALSE.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/plot_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot data Specifications — plot_data","text":"Defaults attempt inherit parent layout actual data inherited parent layout, one exception: align_dendro(), inherit plot_data default.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/plot_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot default theme — plot_theme","title":"Plot default theme — plot_theme","text":"plot_theme() serves default theme always overridden theme() settings applied directly plot. default theme (plot_theme()) applied first, followed specific theme() settings, even theme() added plot_theme().","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/plot_theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot default theme — plot_theme","text":"","code":"plot_theme(   ...,   line,   rect,   text,   title,   aspect.ratio,   axis.title,   axis.title.x,   axis.title.x.top,   axis.title.x.bottom,   axis.title.y,   axis.title.y.left,   axis.title.y.right,   axis.text,   axis.text.x,   axis.text.x.top,   axis.text.x.bottom,   axis.text.y,   axis.text.y.left,   axis.text.y.right,   axis.text.theta,   axis.text.r,   axis.ticks,   axis.ticks.x,   axis.ticks.x.top,   axis.ticks.x.bottom,   axis.ticks.y,   axis.ticks.y.left,   axis.ticks.y.right,   axis.ticks.theta,   axis.ticks.r,   axis.minor.ticks.x.top,   axis.minor.ticks.x.bottom,   axis.minor.ticks.y.left,   axis.minor.ticks.y.right,   axis.minor.ticks.theta,   axis.minor.ticks.r,   axis.ticks.length,   axis.ticks.length.x,   axis.ticks.length.x.top,   axis.ticks.length.x.bottom,   axis.ticks.length.y,   axis.ticks.length.y.left,   axis.ticks.length.y.right,   axis.ticks.length.theta,   axis.ticks.length.r,   axis.minor.ticks.length,   axis.minor.ticks.length.x,   axis.minor.ticks.length.x.top,   axis.minor.ticks.length.x.bottom,   axis.minor.ticks.length.y,   axis.minor.ticks.length.y.left,   axis.minor.ticks.length.y.right,   axis.minor.ticks.length.theta,   axis.minor.ticks.length.r,   axis.line,   axis.line.x,   axis.line.x.top,   axis.line.x.bottom,   axis.line.y,   axis.line.y.left,   axis.line.y.right,   axis.line.theta,   axis.line.r,   legend.background,   legend.margin,   legend.spacing,   legend.spacing.x,   legend.spacing.y,   legend.key,   legend.key.size,   legend.key.height,   legend.key.width,   legend.key.spacing,   legend.key.spacing.x,   legend.key.spacing.y,   legend.frame,   legend.ticks,   legend.ticks.length,   legend.axis.line,   legend.text,   legend.text.position,   legend.title,   legend.title.position,   legend.position,   legend.position.inside,   legend.direction,   legend.byrow,   legend.justification,   legend.justification.top,   legend.justification.bottom,   legend.justification.left,   legend.justification.right,   legend.justification.inside,   legend.location,   legend.box,   legend.box.just,   legend.box.margin,   legend.box.background,   legend.box.spacing,   panel.background,   panel.border,   panel.spacing,   panel.spacing.x,   panel.spacing.y,   panel.grid,   panel.grid.major,   panel.grid.minor,   panel.grid.major.x,   panel.grid.major.y,   panel.grid.minor.x,   panel.grid.minor.y,   panel.ontop,   plot.background,   plot.title,   plot.title.position,   plot.subtitle,   plot.caption,   plot.caption.position,   plot.tag,   plot.tag.position,   plot.tag.location,   plot.margin,   strip.background,   strip.background.x,   strip.background.y,   strip.clip,   strip.placement,   strip.text,   strip.text.x,   strip.text.x.bottom,   strip.text.x.top,   strip.text.y,   strip.text.y.left,   strip.text.y.right,   strip.switch.pad.grid,   strip.switch.pad.wrap,   complete = FALSE,   validate = TRUE )"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/plot_theme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot default theme — plot_theme","text":"... theme() object additional element specifications part base ggplot2. general, also defined element tree argument. Splicing list also supported. line line elements (element_line()) rect rectangular elements (element_rect()) text text elements (element_text()) title title elements: plot, axes, legends (element_text(); inherits text) aspect.ratio aspect ratio panel axis.title, axis.title.x, axis.title.y, axis.title.x.top, axis.title.x.bottom, axis.title.y.left, axis.title.y.right labels axes (element_text()). Specify axes' labels (axis.title), labels plane (using axis.title.x axis.title.y), individually axis (using axis.title.x.bottom, axis.title.x.top, axis.title.y.left, axis.title.y.right). axis.title.*.* inherits axis.title.* inherits axis.title, turn inherits text axis.text, axis.text.x, axis.text.y, axis.text.x.top, axis.text.x.bottom, axis.text.y.left, axis.text.y.right, axis.text.theta, axis.text.r tick labels along axes (element_text()). Specify axis tick labels (axis.text), tick labels plane (using axis.text.x axis.text.y), individually axis (using axis.text.x.bottom, axis.text.x.top, axis.text.y.left, axis.text.y.right). axis.text.*.* inherits axis.text.* inherits axis.text, turn inherits text axis.ticks, axis.ticks.x, axis.ticks.x.top, axis.ticks.x.bottom, axis.ticks.y, axis.ticks.y.left, axis.ticks.y.right, axis.ticks.theta, axis.ticks.r tick marks along axes (element_line()). Specify tick marks (axis.ticks), ticks plane (using axis.ticks.x axis.ticks.y), individually axis (using axis.ticks.x.bottom, axis.ticks.x.top, axis.ticks.y.left, axis.ticks.y.right). axis.ticks.*.* inherits axis.ticks.* inherits axis.ticks, turn inherits line axis.minor.ticks.x.top, axis.minor.ticks.x.bottom, axis.minor.ticks.y.left, axis.minor.ticks.y.right, axis.minor.ticks.theta, axis.minor.ticks.r minor tick marks along axes (element_line()). axis.minor.ticks.*.* inherit corresponding major ticks axis.ticks.*.*. axis.ticks.length, axis.ticks.length.x, axis.ticks.length.x.top, axis.ticks.length.x.bottom, axis.ticks.length.y, axis.ticks.length.y.left, axis.ticks.length.y.right, axis.ticks.length.theta, axis.ticks.length.r length tick marks (unit) axis.minor.ticks.length, axis.minor.ticks.length.x, axis.minor.ticks.length.x.top, axis.minor.ticks.length.x.bottom, axis.minor.ticks.length.y, axis.minor.ticks.length.y.left, axis.minor.ticks.length.y.right, axis.minor.ticks.length.theta, axis.minor.ticks.length.r length minor tick marks (unit), relative axis.ticks.length provided rel(). axis.line, axis.line.x, axis.line.x.top, axis.line.x.bottom, axis.line.y, axis.line.y.left, axis.line.y.right, axis.line.theta, axis.line.r lines along axes (element_line()). Specify lines along axes (axis.line), lines plane (using axis.line.x axis.line.y), individually axis (using axis.line.x.bottom, axis.line.x.top, axis.line.y.left, axis.line.y.right). axis.line.*.* inherits axis.line.* inherits axis.line, turn inherits line legend.background background legend (element_rect(); inherits rect) legend.margin margin around legend (margin()) legend.spacing, legend.spacing.x, legend.spacing.y spacing legends (unit). legend.spacing.x & legend.spacing.y inherit legend.spacing can specified separately legend.key background underneath legend keys (element_rect(); inherits rect) legend.key.size, legend.key.height, legend.key.width size legend keys (unit); key background height & width inherit legend.key.size can specified separately legend.key.spacing, legend.key.spacing.x, legend.key.spacing.y spacing legend keys given unit. Spacing horizontal (x) vertical (y) direction inherit legend.key.spacing can specified separately. legend.frame frame drawn around bar (element_rect()). legend.ticks tick marks shown along bars axes (element_line()) legend.ticks.length length tick marks legend (unit) legend.axis.line lines along axes legends (element_line()) legend.text legend item labels (element_text(); inherits text) legend.text.position placement legend text relative legend keys bars (\"top\", \"right\", \"bottom\" \"left\"). legend text placement might incompatible legend's direction guides. legend.title title legend (element_text(); inherits title) legend.title.position placement legend title relative main legend (\"top\", \"right\", \"bottom\" \"left\"). legend.position default position legends (\"none\", \"left\", \"right\", \"bottom\", \"top\", \"inside\") legend.position.inside numeric vector length two setting placement legends \"inside\" position. legend.direction layout items legends (\"horizontal\" \"vertical\") legend.byrow whether legend-matrix filled columns (FALSE, default) rows (TRUE). legend.justification anchor point positioning legend inside plot (\"center\" two-element numeric vector) justification according plot area positioned outside plot legend.justification.top, legend.justification.bottom, legend.justification.left, legend.justification.right, legend.justification.inside legend.justification specified per legend.position option. legend.location Relative placement legends outside plot string. Can \"panel\" (default) align legends panels \"plot\" align legends plot whole. legend.box arrangement multiple legends (\"horizontal\" \"vertical\") legend.box.just justification legend within overall bounding box, multiple legends (\"top\", \"bottom\", \"left\", \"right\") legend.box.margin margins around full legend area, specified using margin() legend.box.background background legend area (element_rect(); inherits rect) legend.box.spacing spacing plotting area legend box (unit) panel.background background plotting area, drawn underneath plot (element_rect(); inherits rect) panel.border border around plotting area, drawn top plot covers tick marks grid lines. used fill = NA (element_rect(); inherits rect) panel.spacing, panel.spacing.x, panel.spacing.y spacing facet panels (unit). panel.spacing.x & panel.spacing.y inherit panel.spacing can specified separately. panel.grid, panel.grid.major, panel.grid.minor, panel.grid.major.x, panel.grid.major.y, panel.grid.minor.x, panel.grid.minor.y grid lines (element_line()). Specify major grid lines, minor grid lines separately (using panel.grid.major panel.grid.minor) individually axis (using panel.grid.major.x, panel.grid.minor.x, panel.grid.major.y, panel.grid.minor.y).  Y axis grid lines horizontal x axis grid lines vertical. panel.grid.*.* inherits panel.grid.* inherits panel.grid, turn inherits line panel.ontop option place panel (background, gridlines) data layers (logical). Usually used transparent blank panel.background. plot.background background entire plot (element_rect(); inherits rect) plot.title plot title (text appearance) (element_text(); inherits title) left-aligned default plot.title.position, plot.caption.position Alignment plot title/subtitle caption.  setting plot.title.position applies title subtitle. value \"panel\" (default) means titles /caption aligned plot panels. value \"plot\" means titles /caption aligned entire plot (minus space margins plot tag). plot.subtitle plot subtitle (text appearance) (element_text(); inherits title) left-aligned default plot.caption caption plot (text appearance) (element_text(); inherits title) right-aligned default plot.tag upper-left label identify plot (text appearance) (element_text(); inherits title) left-aligned default plot.tag.position position tag string (\"topleft\", \"top\", \"topright\", \"left\", \"right\", \"bottomleft\", \"bottom\", \"bottomright\") coordinate. coordinate, can numeric vector length 2 set x,y-coordinate relative whole plot. coordinate option unavailable plot.tag.location = \"margin\". plot.tag.location placement tag string, one \"panel\", \"plot\" \"margin\". Respectively, place tag inside panel space, anywhere plot whole, margin around panel space. plot.margin margin around entire plot (unit sizes top, right, bottom, left margins) strip.background, strip.background.x, strip.background.y background facet labels (element_rect(); inherits rect). Horizontal facet background (strip.background.x) & vertical facet background (strip.background.y) inherit strip.background can specified separately strip.clip strip background edges strip labels clipped extend strip background? Options \"\" clip, \"\" disable clipping \"inherit\" (default) take clipping setting parent viewport. strip.placement placement strip respect axes, either \"inside\" \"outside\". important axes strips side plot. strip.text, strip.text.x, strip.text.y, strip.text.x.top, strip.text.x.bottom, strip.text.y.left, strip.text.y.right facet labels (element_text(); inherits  text). Horizontal facet labels (strip.text.x) & vertical facet labels (strip.text.y) inherit strip.text can specified separately. Facet strips dedicated position-dependent theme elements (strip.text.x.top, strip.text.x.bottom, strip.text.y.left, strip.text.y.right) inherit strip.text.x strip.text.y, respectively. consequence, theme stylings need applied position-dependent elements rather parent elements strip.switch.pad.grid space strips axes strips switched (unit) strip.switch.pad.wrap space strips axes strips switched (unit) complete set TRUE complete theme, one returned theme_grey(). Complete themes behave differently added ggplot object. Also, setting complete = TRUE elements set inherit blank elements. validate TRUE run validate_element(), FALSE bypass checks.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/plot_theme.html","id":"theme-inheritance","dir":"Reference","previous_headings":"","what":"Theme inheritance","title":"Plot default theme — plot_theme","text":"Theme elements inherit properties theme elements hierarchically. example, axis.title.x.bottom inherits axis.title.x inherits axis.title, turn inherits text. text elements inherit directly indirectly text; lines inherit line, rectangular objects inherit rect. means can modify appearance multiple elements setting single high-level component. Learn setting aesthetics vignette(\"ggplot2-specs\").","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/plot_theme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot default theme — plot_theme","text":"","code":"set.seed(123) small_mat <- matrix(rnorm(56), nrow = 8) ggheatmap(small_mat) +     plot_theme(plot.background = element_rect(fill = \"red\")) #> → heatmap built with `geom_tile()`   # `plot_theme()` serves as the default theme and will always be # overridden by any `theme()` settings applied directly to the plot ggheatmap(small_mat) +     theme(plot.background = element_rect(fill = \"blue\")) +     plot_theme(plot.background = element_rect(fill = \"red\")) #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/quad_active.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine the Active Context of Quad-Layout — quad_active","title":"Determine the Active Context of Quad-Layout — quad_active","text":"quad_active: Sets active context quad_layout()/ggheatmap() . quad_anno: Sets active context specified annotation stack based position argument. anno_top: special case quad_anno position = \"top\". anno_left: special case quad_anno position = \"left\". anno_bottom: special case quad_anno position = \"bottom\". anno_right: special case quad_anno position = \"right\".","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/quad_active.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine the Active Context of Quad-Layout — quad_active","text":"","code":"quad_active(width = NULL, height = NULL)  quad_anno(   position,   size = NULL,   free_guides = waiver(),   initialize = NULL,   what = waiver() )  anno_top(   size = NULL,   free_guides = waiver(),   initialize = NULL,   what = waiver() )  anno_left(   size = NULL,   free_guides = waiver(),   initialize = NULL,   what = waiver() )  anno_bottom(   size = NULL,   free_guides = waiver(),   initialize = NULL,   what = waiver() )  anno_right(   size = NULL,   free_guides = waiver(),   initialize = NULL,   what = waiver() )"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/quad_active.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine the Active Context of Quad-Layout — quad_active","text":"width, height relative width/height main plot, can unit object. position string \"top\", \"left\", \"bottom\", \"right\" indicates annotation stack activated. size numeric value unit object set total height/width annotation stack. position \"top\" \"bottom\", size sets total height annotation. position \"left\" \"right\", size sets total width annotation. free_guides Override guides collection behavior specified quad_layout()/ggheatmap() annotation stack. initialize boolean indicating whether annotation stack initialized already. default, annotation stack layout attempt initialize data compatible. set TRUE, data quad_layout()/ggheatmap() incompatible annotation stack, data used stack. get activated annotation stack? single number string plot elements stack layout. NULL, remove active context.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/quad_active.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine the Active Context of Quad-Layout — quad_active","text":"object can added quad_layout()/ggheatmap().","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/quad_active.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Determine the Active Context of Quad-Layout — quad_active","text":"default, quad_anno() attempts initialize annotation stack layout using data quad_layout()/ggheatmap(). However, situations want use different data annotation stack, can set initialize = FALSE provide custom stack_layout().","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/quad_free.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrange Plots in the Quad-Side of a main plot — quad_free","title":"Arrange Plots in the Quad-Side of a main plot — quad_free","text":"functions arrange plots around main plot, allowing flexible alignment observations different directions. ggside alias quad_free. quad_free/ggside: Never align observations. quad_alignh: Align observations horizontal direction. quad_alignv: Align observations vertical direction. quad_alignb: Align observations horizontal vertical directions.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/quad_free.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrange Plots in the Quad-Side of a main plot — quad_free","text":"","code":"quad_free(   data = NULL,   mapping = aes(),   ...,   theme = NULL,   active = NULL,   width = NA,   height = NA )  quad_alignh(   data = NULL,   mapping = aes(),   ...,   theme = NULL,   active = NULL,   width = NA,   height = NA )  quad_alignv(   data = NULL,   mapping = aes(),   ...,   theme = NULL,   active = NULL,   width = NA,   height = NA )  quad_alignb(   data = NULL,   mapping = aes(),   ...,   theme = NULL,   active = NULL,   width = NA,   height = NA )"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/quad_free.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrange Plots in the Quad-Side of a main plot — quad_free","text":"data Default dataset use layout. specified, must supplied plot added layout. default, try inherit parent layout. quad_free/ggside, function uses fortify_data_frame() convert data data frame. functions, employs fortify_matrix() convert data matrix. mapping Default list aesthetic mappings use main plot layout. specified, must supplied layer added main plot. ... Additional arguments passed fortify_matrix() fortify_data_frame(). theme theme() used render guides, title, subtitle, caption, margins, patch.title, panel.border, background. NULL (default), inherit parent layout. active active() object defines context settings added layout. width, height relative width/height main plot, can unit object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/quad_free.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Arrange Plots in the Quad-Side of a main plot — quad_free","text":"QuadLayout object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/quad_free.html","id":"ggplot-specification","dir":"Reference","previous_headings":"","what":"ggplot2 specification","title":"Arrange Plots in the Quad-Side of a main plot — quad_free","text":"quad_alignb, quad_alignh, quad_alignv, data input converted long formated data frame drawing. data underlying ggplot object contains following columns: .xpanel .ypanel: column row panel .x .y: x y coordinates .row_names .column_names: factor row column names original matrix (applicable names exist). .row_index .column_index: row column index original matrix. value: actual matrix value.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/quad_init.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize Quad-Layout Annotation — quad_init","title":"Initialize Quad-Layout Annotation — quad_init","text":"function deprecated, can add stack_layout() directly.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/quad_init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize Quad-Layout Annotation — quad_init","text":"","code":"quad_init(position, data = waiver(), ...)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/quad_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrange Plots in the Quad-Side of a main plot — quad_layout","title":"Arrange Plots in the Quad-Side of a main plot — quad_layout","text":"function integrates functionalities quad_free(), quad_alignh(), quad_alignv(), quad_alignb() single interface.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/quad_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrange Plots in the Quad-Side of a main plot — quad_layout","text":"","code":"quad_layout(   data = NULL,   align = NULL,   mapping = aes(),   ...,   theme = NULL,   active = NULL,   width = NA,   height = NA )"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/quad_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrange Plots in the Quad-Side of a main plot — quad_layout","text":"data Default dataset use layout. specified, must supplied plot added layout. default, try inherit parent layout. conversion data depends align argument use, fortify_data_frame() fortify_matrix(): align NULL, data frame required. inherited annotation stack, transposition applied. align string, matrix required. inherited column annotation stack, transposed. align string indicating alignment direction: \"horizontal\": Align plots horizontally. \"vertical\": Align plots vertically. \"\": Align plots directions. default, function align observations. mapping Default list aesthetic mappings use main plot layout. specified, must supplied layer added main plot. ... Additional arguments passed fortify_matrix() fortify_data_frame(). theme theme() used render guides, title, subtitle, caption, margins, patch.title, panel.border, background. NULL (default), inherit parent layout. active active() object defines context settings added layout. width, height relative width/height main plot, can unit object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/quad_switch.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine the Active Context of Quad-Layout — quad_switch","title":"Determine the Active Context of Quad-Layout — quad_switch","text":"quad_switch() integrates quad_active() quad_anno() one function ease use. function allows quickly change active context quad_layout() annotations. hmanno alias quad_switch, additional arguments backward compatibility","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/quad_switch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine the Active Context of Quad-Layout — quad_switch","text":"","code":"quad_switch(   position = NULL,   size = NULL,   width = NULL,   height = NULL,   free_guides = waiver(),   initialize = NULL,   what = waiver() )  hmanno(   position = NULL,   size = NULL,   width = NULL,   height = NULL,   free_guides = waiver(),   what = waiver(),   ...,   guides = deprecated(),   free_spaces = deprecated(),   plot_data = deprecated(),   theme = deprecated(),   free_labs = deprecated() )"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/quad_switch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine the Active Context of Quad-Layout — quad_switch","text":"position string \"top\", \"left\", \"bottom\", \"right\" indicates annotation stack activated. NULL, sets active context quad_layout()/ggheatmap() . size numeric value unit object set total height/width annotation stack. position \"top\" \"bottom\", size sets total height annotation. position \"left\" \"right\", size sets total width annotation. width, height relative width/height main plot, can unit object. free_guides Override guides collection behavior specified quad_layout()/ggheatmap() annotation stack. initialize boolean indicating whether annotation stack initialized already. default, annotation stack layout attempt initialize data compatible. set TRUE, data quad_layout()/ggheatmap() incompatible annotation stack, data used stack. get activated annotation stack? single number string plot elements stack layout. NULL, remove active context. ... dots future extensions must empty. guides Please use plot_align() function instead. free_spaces Please use plot_align() function instead. plot_data Please use plot_data() function instead. theme Please use plot_theme() function instead. free_labs Please use plot_align() function instead.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/quad_switch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine the Active Context of Quad-Layout — quad_switch","text":"object can added quad_layout()/ggheatmap().","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/quad_switch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine the Active Context of Quad-Layout — quad_switch","text":"","code":"ggheatmap(matrix(rnorm(81), nrow = 9)) +     anno_top() +     align_dendro() #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/raster_magick.html","id":null,"dir":"Reference","previous_headings":"","what":"Rasterize the input object — raster_magick","title":"Rasterize the input object — raster_magick","text":"function rasterizes input graphical objects (e.g., grob, layer, ggplot) optionally processes resulting raster using magick, powerful image manipulation library. allows advanced graphical transformations directly within plotting pipeline.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/raster_magick.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rasterize the input object — raster_magick","text":"","code":"raster_magick(x, magick = NULL, ..., res = NULL, interpolate = FALSE)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/raster_magick.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rasterize the input object — raster_magick","text":"x object rasterize, can grob(), layer(), ggplot(), list objects. magick function (purrr-style formula accepted) takes image_read() object input returns object compatible .raster(). can use image_*() functions magick package process raster image. ... used currently. res integer sets desired resolution pixels. interpolate logical value indicating whether linearly interpolate     image (alternative use nearest-neighbour interpolation,     gives blocky result).","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/raster_magick.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rasterize the input object — raster_magick","text":"object class input.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/raster_magick.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rasterize the input object — raster_magick","text":"","code":"# data generated code was copied from `ComplexHeatmap` set.seed(123) small_mat <- matrix(rnorm(56), nrow = 7) rownames(small_mat) <- paste0(\"row\", seq_len(nrow(small_mat))) colnames(small_mat) <- paste0(\"column\", seq_len(ncol(small_mat))) ggheatmap(small_mat, filling = NULL) +     raster_magick(geom_tile(aes(fill = value)), dpi = 20)   ggheatmap(small_mat, filling = NULL) +     # Use `magick::filter_types()` to check available `filter` arguments     raster_magick(geom_tile(aes(fill = value)),         magick = function(image) {             magick::image_resize(image,                 geometry = \"50%x\", filter = \"Lanczos\"             )         }     )"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/read_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Example Data — read_example","title":"Read Example Data — read_example","text":"function reads example data file. file specified, returns list available example files.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/read_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Example Data — read_example","text":"","code":"read_example(file = NULL)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/read_example.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Example Data — read_example","text":"file string representing name example file read. NULL, function return list available example file names.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/read_example.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Example Data — read_example","text":"file NULL, returns character vector available example file names. Otherwise, returns contents specified example file, read R object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/read_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Example Data — read_example","text":"","code":"read_example() #> [1] \"gene_expression.rds\" \"measles.rds\""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. grid gpar, unit","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/scale_draw_manual.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale for draw aesthetic — scale_draw_manual","title":"Scale for draw aesthetic — scale_draw_manual","text":"Scale draw aesthetic","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/scale_draw_manual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale for draw aesthetic — scale_draw_manual","text":"","code":"scale_draw_manual(   ...,   values,   aesthetics = \"draw\",   breaks = waiver(),   na.value = NA )"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/scale_draw_manual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale for draw aesthetic — scale_draw_manual","text":"... Arguments passed ggplot2::discrete_scale name name scale. Used axis legend title. waiver(), default, name scale taken first mapping used aesthetic. NULL, legend title omitted. labels One : NULL labels waiver() default labels computed transformation object character vector giving labels (must length breaks) expression vector (must length breaks). See ?plotmath details. function takes breaks input returns labels output. Also accepts rlang lambda function notation. limits One : NULL use default scale values character vector defines possible values scale order function accepts existing (automatic) values returns new ones. Also accepts rlang lambda function notation. na.translate Unlike continuous scales, discrete scales can easily show missing values, default. want remove missing values discrete scale, specify na.translate = FALSE. drop unused factor levels omitted scale? default, TRUE, uses levels appear data; FALSE includes levels factor. Please note display every level legend, layer use show.legend = TRUE. guide function used create guide name. See guides() information. call call used construct scale reporting messages. super super class use constructed scale values list functions (including purrr-like lambda syntax) define cell's grob (graphical object) drawn. aesthetics Character string vector character strings listing name(s) aesthetic(s) scale works . can useful, example, apply colour settings colour fill aesthetics time, via aesthetics = c(\"colour\", \"fill\"). breaks One : NULL breaks waiver() default breaks (scale limits) character vector breaks function takes limits input returns breaks output na.value aesthetic value use missing (NA) values","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/scale_draw_manual.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scale for draw aesthetic — scale_draw_manual","text":"geom_draw depends new aesthetics draw, always provided scale_draw_manual(), , can provide list functions define cell's grob (graphical object) drawn. aesthetic allows replace default rendering cells custom behavior, making possible tailor plot specific requirements.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/scale_draw_manual.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Scale for draw aesthetic — scale_draw_manual","text":"geom_draw() understands following aesthetics (required aesthetics bold): x y draw alpha colour fill group linetype linewidth shape size stroke Learn setting aesthetics vignette(\"ggplot2-specs\", package = \"ggplot2\").","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/scale_draw_manual.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scale for draw aesthetic — scale_draw_manual","text":"","code":"library(grid) ggplot(data.frame(value = letters[seq_len(5)], y = seq_len(5))) +     geom_draw(aes(x = 1, y = y, draw = value, fill = value)) +     scale_draw_manual(values = list(         a = function(x, y, width, height, fill) {             rectGrob(x, y,                 width = width, height = height,                 gp = gpar(fill = fill),                 default.units = \"native\"             )         },         b = function(x, y, width, height, fill) {             rectGrob(x, y,                 width = width, height = height,                 gp = gpar(fill = fill),                 default.units = \"native\"             )         },         c = function(x, y, width, height, fill) {             rectGrob(x, y,                 width = width, height = height,                 gp = gpar(fill = fill),                 default.units = \"native\"             )         },         d = function(x, y, width, height, shape) {             gList(                 pointsGrob(x, y, pch = shape),                 # To ensure the rectangle color is shown in the legends, you                 # must explicitly provide a color argument and include it in                 # the `gpar()` of the graphical object                 rectGrob(x, y, width, height,                     gp = gpar(col = \"black\", fill = NA)                 )             )         },         e = function(xmin, xmax, ymin, ymax) {             segmentsGrob(                 xmin, ymin,                 xmax, ymax,                 gp = gpar(lwd = 2)             )         }     )) +     scale_fill_brewer(palette = \"Dark2\") +     theme_void()"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/show-Layout-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Layout object — show,Layout-method","title":"Print Layout object — show,Layout-method","text":"Print Layout object","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/show-Layout-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Layout object — show,Layout-method","text":"","code":"# S4 method for class 'Layout' show(object)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/show-Layout-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Layout object — show,Layout-method","text":"object quad_layout()/ggheatmap() stack_layout() object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/show-Layout-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print Layout object — show,Layout-method","text":"input invisiblely.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/stack_align.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrange Plots Horizontally or Vertically — stack_align","title":"Arrange Plots Horizontally or Vertically — stack_align","text":"stack_align function aligns observations, stack_free . Several aliases provided convenience: stack_alignv: special case stack_align sets direction = \"vertical\". stack_alignh: special case stack_align sets direction = \"horizontal\". stack_freev: special case stack_free sets direction = \"vertical\". stack_freeh: special case stack_free sets direction = \"horizontal\".","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/stack_align.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrange Plots Horizontally or Vertically — stack_align","text":"","code":"stack_align(data = NULL, direction = NULL, ..., theme = NULL, sizes = NA)  stack_alignv(data = NULL, ...)  stack_alignh(data = NULL, ...)  stack_free(data = NULL, direction = NULL, ..., theme = NULL, sizes = NA)  stack_freev(data = NULL, ...)  stack_freeh(data = NULL, ...)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/stack_align.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrange Plots Horizontally or Vertically — stack_align","text":"data Default dataset use layout. specified, must supplied plot added layout: stack_free, fortify_data_frame() used convert data data frame. stack_align, fortify_matrix() used convert data matrix. direction string indicating direction stack layout, either \"horizontal\" \"vertical\". ... Additional arguments passed fortify_data_frame() fortify_matrix(). theme theme() used render guides, title, subtitle, caption, margins, patch.title, panel.border, background. NULL (default), inherit parent layout. sizes numeric unit object length 3 indicating relative heights (direction = \"horizontal\") widths (direction = \"vertical\"). used include nested quad_layout() layout.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/stack_align.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arrange Plots Horizontally or Vertically — stack_align","text":"","code":"set.seed(123) stack_align(matrix(rnorm(56), nrow = 7L), \"h\") +     align_dendro()"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/stack_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Put plots horizontally or vertically — stack_layout","title":"Put plots horizontally or vertically — stack_layout","text":"function integrates functionalities stack_free() stack_align() single interface. ggstack alias stack_layout.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/stack_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Put plots horizontally or vertically — stack_layout","text":"","code":"stack_layout(data = NULL, direction = NULL, type = NULL, ...)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/stack_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Put plots horizontally or vertically — stack_layout","text":"data Default dataset use layout. specified, must supplied plot added layout: type align, fortify_data_frame() used get data frame. type free, fortify_matrix() used get matrix. direction string indicating direction stack layout, either \"horizontal\" \"vertical\". type string indicating stack layout type: \"align\" aligned plots (stack_align()) \"free\" free stacking (stack_free()). ... Additional arguments passed fortify_data_frame() fortify_matrix().","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/stack_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Put plots horizontally or vertically — stack_layout","text":"StackLayout object.","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/stack_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Put plots horizontally or vertically — stack_layout","text":"","code":"set.seed(123) small_mat <- matrix(rnorm(56), nrow = 7L) stack_layout(small_mat, \"h\", \"align\") + align_dendro()   # ggstack is an alias for `stack_layout` ggstack(small_mat, \"h\", \"align\") + align_dendro()   # this is the same with: stack_align(small_mat, \"h\") + align_dendro()"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/stack_switch.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine the active context of stack layout — stack_switch","title":"Determine the active context of stack layout — stack_switch","text":"stack_active alias stack_switch(), sets = NULL default, additional arguments backward compatibility.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/stack_switch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine the active context of stack layout — stack_switch","text":"","code":"stack_switch(sizes = NULL, what = waiver())  stack_active(   sizes = NULL,   what = NULL,   ...,   guides = deprecated(),   free_spaces = deprecated(),   plot_data = deprecated(),   theme = deprecated(),   free_labs = deprecated() )"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/stack_switch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine the active context of stack layout — stack_switch","text":"sizes numeric unit object length 3 indicating relative heights (direction = \"horizontal\") widths (direction = \"vertical\"). used include nested quad_layout() layout. get activated stack layout? single number string plot elements stack layout. NULL, remove active context, useful active context quad_layout() object, align_*() added quad_layout(). removing active context, can add align_*() stack_layout(). ... dots future extensions must empty. guides Please use plot_align() function instead. free_spaces Please use plot_align() function instead. plot_data Please use plot_data() function instead. theme Please use plot_theme() function instead. free_labs Please use plot_align() function instead.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/stack_switch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine the active context of stack layout — stack_switch","text":"stack_switch object can added stack_layout().","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/stack_switch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine the active context of stack layout — stack_switch","text":"","code":"stack_align(matrix(1:9, nrow = 3L), \"h\") +     ggheatmap() +     # ggheamtap will set the active context, directing following addition     # into the heatmap plot area. To remove the heatmap active context,     # we can use `stack_active()` which will direct subsequent addition into     # the stack     stack_active() +     # here we add a dendrogram to the stack.     align_dendro() #> → heatmap built with `geom_tile()`"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/theme_ggalign.html","id":null,"dir":"Reference","previous_headings":"","what":"Theme for Layout Plots — theme_ggalign","title":"Theme for Layout Plots — theme_ggalign","text":"Default theme quad_layout()/ggheatmap() stack_layout() object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/theme_ggalign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theme for Layout Plots — theme_ggalign","text":"","code":"theme_ggalign(...)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/theme_ggalign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theme for Layout Plots — theme_ggalign","text":"... Arguments passed ggplot2::theme_classic base_size base font size, given pts. base_family base font family base_line_size base size line elements base_rect_size base size rect elements","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/theme_ggalign.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Theme for Layout Plots — theme_ggalign","text":"theme() object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/theme_ggalign.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Theme for Layout Plots — theme_ggalign","text":"can change default theme using option \"ggalign.default_theme\". option set function returns theme() object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/theme_ggalign.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Theme for Layout Plots — theme_ggalign","text":"","code":"# Setting a new default theme old <- options(ggalign.default_theme = function() theme_bw())  # Creating a heatmap with the new theme ggheatmap(matrix(rnorm(81), nrow = 9)) +     anno_top() +     align_dendro(k = 3L) #> → heatmap built with `geom_tile()`   # Restoring the old default theme options(old)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/theme_no_axes.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove axis elements — theme_no_axes","title":"Remove axis elements — theme_no_axes","text":"Remove axis elements","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/theme_no_axes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove axis elements — theme_no_axes","text":"","code":"theme_no_axes(   axes = \"xy\",   text = TRUE,   ticks = TRUE,   title = TRUE,   line = FALSE )"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/theme_no_axes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove axis elements — theme_no_axes","text":"axes axes elements removed? string containing one \"t\", \"l\", \"b\", \"r\", \"x\", \"y\". text TRUE, remove axis labels. ticks TRUE, remove axis ticks. title TRUE, remove axis title. line TRUE, remove axis line.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/theme_no_axes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove axis elements — theme_no_axes","text":"theme() object.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/theme_no_axes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove axis elements — theme_no_axes","text":"","code":"p <- ggplot() +     geom_point(aes(x = wt, y = qsec), data = mtcars) p + theme_no_axes()  p + theme_no_axes(\"b\")  p + theme_no_axes(\"l\")"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/with_quad.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify operated Context in quad_layout() — with_quad","title":"Modify operated Context in quad_layout() — with_quad","text":"with_quad() function modifies application context elements ggheatmap()/quad_layout(). controls objects like themes, scales, plot modifications apply specific annotation stacks main plot without altering currently active layout plot.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/with_quad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify operated Context in quad_layout() — with_quad","text":"","code":"with_quad(x, position = waiver(), main = NULL)"},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/with_quad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify operated Context in quad_layout() — with_quad","text":"x object can added ggplot, including plot options (see vignette(\"plot-options\") details). position string specifying one positions- \"t\", \"l\", \"b\", \"r\"- indicate annotation stack context x. NULL, change operated context quad_layout() . default behaivours, see details section. main single boolean value indicating whether x apply main plot, used position NULL. default, position waiver() active context quad_layout() annotation stack active context stack_layout() , main set TRUE; otherwise, defaults FALSE.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/with_quad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modify operated Context in quad_layout() — with_quad","text":"original object added attribute sets specified context.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/with_quad.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Modify operated Context in quad_layout() — with_quad","text":"Default Behavior adding object wrapped with_quad(): quad_layout() object: ggheatmap()/quad_layout() active annotation stack, objects added via + - operate normally without with_quad(). active annotation stack set, with_quad() ensures applied object also modifies: main plot (default). Opposite annotation stacks using -. stack_layout() object: active layout stack_layout() : - operator apply changes plots along stack_layout(), means stack layout horizontal, - operator also add element left right annotation, stack layout vertical, - operator also add element top bottom annotation. + operator anything special. active layout nested ggheatmap()/quad_layout(), +/- operator applies elements nested layout, following principles ggheatmap()/quad_layout().","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/reference/with_quad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modify operated Context in quad_layout() — with_quad","text":"","code":"set.seed(123) small_mat <- matrix(rnorm(56), nrow = 7)  # By wrapping object with `with_quad()`, the `+` operator will apply the # object not only to the active plot in the annotation stack, but also to # the main plot unless specified by `main` argument otherwise. ggheatmap(small_mat) +     # initialize the left annotation     anno_left(size = 0.2) +     align_dendro() +     # apply the object not only to the active plot in the annotation stack,     # but also to the main plot     with_quad(theme(plot.background = element_rect(fill = \"red\"))) #> → heatmap built with `geom_tile()`   # the `-` operator will apply changes not only to the active annotation # stack but also to the opposite one (i.e., bottom if top is active, and # vice versa). The same principle applies to the left and right annotation. ggheatmap(small_mat) +     anno_left(size = 0.2) +     align_dendro(aes(color = branch), k = 3L) +     # Change the active layout to the left annotation     anno_top(size = 0.2) +     align_dendro(aes(color = branch), k = 3L) +     anno_bottom(size = 0.2) +     align_dendro(aes(color = branch), k = 3L) -     # Modify the color scale of all plots in the bottom and the opposite     # annotation, in this way, the `main` argument by default would be `TRUE`     with_quad(scale_color_brewer(palette = \"Dark2\", name = \"Top and bottom\")) #> → heatmap built with `geom_tile()`   # When the `position` argument is manually set, the # default value of the `main` argument will be `FALSE`. ggheatmap(small_mat) +     anno_left(size = 0.2) +     align_dendro(aes(color = branch), k = 3L) +     anno_top(size = 0.2) +     align_dendro(aes(color = branch), k = 3L) +     anno_bottom(size = 0.2) +     align_dendro(aes(color = branch), k = 3L) -     # Modify the background of all plots in the left and top annotation     with_quad(theme(plot.background = element_rect(fill = \"red\")), \"tl\") #> → heatmap built with `geom_tile()`"},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/news/index.html","id":"new-features-development-version","dir":"Changelog","previous_headings":"","what":"New features","title":"ggalign (development version)","text":"new raster_magick() function post-processing image raster magick package added. new fortify_matrix.GISTIC() method GISTIC object maftools package (#24). + operator now respect with_quad(). new ggalign_attr_set() ggalign_attr_get() basic operations attached attribute. new geom_draw() function draw ggplot2 layer customized draw function. new geom_subrect() geom_subtile() subdivide rectangles shared borders grid. new cross_link function used reset layout ordering index, useful create tanglegram visualizations.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/news/index.html","id":"bug-fixes-development-version","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"ggalign (development version)","text":"fix breaks labels work well discrete scale (#30, #32) fix wrong results fortify_matrix.MAF() method","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/news/index.html","id":"improvements-development-version","dir":"Changelog","previous_headings":"","what":"Improvements","title":"ggalign (development version)","text":"Now, with_quad() wraps object list class with_quad. approach offers greater flexibility defining actions associated with_quad, allowing customizable behavior (#26, @Yunuuuu). Now, panel reordered initializing layout parameters, don’t need reorder panel drawing. free_gg, align new cross_link objects collapsed one class ggalign_plot","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/news/index.html","id":"ggalign-005","dir":"Changelog","previous_headings":"","what":"ggalign 0.0.5","title":"ggalign 0.0.5","text":"CRAN release: 2024-11-14","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/news/index.html","id":"breaking-changes-0-0-5","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"ggalign 0.0.5","text":"direction argument stack_layout()/ggstack() soft-deprecated now, user must provide manually. set_context, order, name arguments align_*() ggheatmap() soft-deprecated, advised use active argument. guides, free_guides, free_spaces, free_labs, plot_data arguments align_*() ggheatmap() deprecated, advised use plot_align function instead. theme argument align_*() ggheatmap() deprecated, advised use plot_theme function. argument stack_active() soft-deprecated, user advised use stack_switch() change active plot . align_panel()/ggpanel() deprecated, user advised use ggalign(data = NULL) instead.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/news/index.html","id":"new-features-0-0-5","dir":"Changelog","previous_headings":"","what":"New features","title":"ggalign 0.0.5","text":"new quad_layout() create layout allowing free alignment. new quad_alignv(), quad_alignh(), quad_free()/ggside(), quad_alignb() alias quad_layout(). stack_layout() now gains type argument control whether layout align observations. new ggoncoplot() function draw oncoprint. new ggfree() function add ggplot layout. new fortify_matrix() function convert objects matrix, add fortify_matrix() method MAF object. new fortify_data_frame() function convert objects data frame. now, special attribute ggalign can used pass additional informations across building process, new function ggalign_attr() can used extract data attribute. new plot_theme() function control default theme plot layout. new plot_data() function control data transformation plot layout. new plot_align() function control specifications plot layout. new with_quad() function control - operator context. new quad_init() function initialize annotation self-provided data. new stack_switch() quad_switch() switch active plots stack_layout() quad_layout(). new anno_top(), anno_left(), anno_bottom() anno_right() alias add annotation quad_layout(). align_dendro() gain new argument cutree customize process tree cutting. reorder_dendrogram argument align_dendro() function now can accept function reorder tree. new layer_order() function change ggplot2 layer adding order. new theme_no_axes() function remove axis elements. new geom_pie() function draw pie charts.","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/news/index.html","id":"bug-fixes-0-0-5","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"ggalign 0.0.5","text":"fix bug apply free_border alignpatches object. fix bug provide function distance argument align_dendro() fix bug provide hclust dendrogram method argument align_dendro() fix bug coord_ggalign() discrete scale","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/news/index.html","id":"improvements-0-0-5","dir":"Changelog","previous_headings":"","what":"Improvements","title":"ggalign 0.0.5","text":"merge function implemented vctrs performance large matrix (> 20000 cells), automatically use geom_raster() {data.table} now removed dependency","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/news/index.html","id":"ggalign-004","dir":"Changelog","previous_headings":"","what":"ggalign 0.0.4","title":"ggalign 0.0.4","text":"CRAN release: 2024-10-12 layout_heatmap()/ggheatmap() arguments width/height renamed .width/.height helps avoid conflicts arguments geom_tile(). nestet alignpatches theme default inherit parent alignpatches new layout_title() function, now layout_annotation() control layout theme add ggrastr::rasterize method ggheatmap() ggstack() set_context argument align_dendro() now depends plot_dendrogram default align_dendro() gain new argument reorder_dendrogram control whether reorder generated dendrogram based mean values. align_reorder() now splitted two function align_order() align_reorder() dendrogram_data() gain new argument reorder_branches control whether reorder input leaf_braches based tree. align_dendro() gain new argument merge_dendrogram control whether dendrograms multiple groups merged dendrogram height axis automatically reversed bottom left annotation stack heatmap fill color scale now default use scale_fill_gradient2(low = \"blue\", high = \"red\") continuous values. Coord used set limits instead Scale free_* arguments now accept argument corresponding free_* functions. new theme_ggalign() function default theme ggalign package export option ggalign.default_theme allow user change global default theme new free_guide() function, override layout guides argument single plot geom_draw() now utilize patch() function convert objects grob internal changes: vectors operated vctrs package stack_layout(): gain sizes argument control relative sizes stack align_()*: now order argument control plot area. align_reorder() now can accept ordering character names. export order2() function align_reorder(): fun argument renamed order argument, can now accept ordering integer index directly fun align_reorder() now can return statistics can handled order2() fix ggheatmap() order work put stack layout method hclust2() can now return objects can coerced hclust, can provide object directly method. hclust2() now can accept distance = NULL hmanno(), stack_active(), align_*() functions gain new argument theme control theme plot. new layout_annotation() layout_theme() modify layout components borders argument free_space() renamed spaces {tibble} now removed dependency align_plots() now can accept gList, function, recordedplot, trellis, pheatmap, Heatmap, HeatmapAnnotation, HeatmapList, added alignpatch method objects. add patch method gList, function, recordedplot, trellis, pheatmap, Heatmap, HeatmapAnnotation, HeatmapList fix bug wrap() function duplicated names gtable cause grobs missing new free_vp() function customize viewport aligning. StackLayout HeatmapLayout methods collapsed one method Layout class New Patch class, now can extend alignment process object customize building process ggproto. fix missing variable labs free_space method PatchAlignpatches","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/news/index.html","id":"ggalign-003","dir":"Changelog","previous_headings":"","what":"ggalign 0.0.3","title":"ggalign 0.0.3","text":"CRAN release: 2024-09-15 Add package logo new inset() function add package quotes DESCRIPTION add return value docs exported function methods","code":""},{"path":"https://yunuuuu.github.io/ggalign/dev/news/index.html","id":"ggalign-002","dir":"Changelog","previous_headings":"","what":"ggalign 0.0.2","title":"ggalign 0.0.2","text":"omit redudnant description add single quote package name","code":""},{"path":[]},{"path":"https://yunuuuu.github.io/ggalign/dev/news/index.html","id":"features-0-0-1","dir":"Changelog","previous_headings":"","what":"Features","title":"ggalign 0.0.1","text":"ggalign pacakge provides two layout arrange ggplot objects: heatmap_layout()/ggheatmap(): Arrange ggplot Heatmap layout. See vignette(\"heatmap-layout\") details. stack_layout()/ggstack(): Arrange ggplot vertically horizontally. See vignette(\"stack-layout\") details. customize layouts, offer following functions: align_group(): Group layout axis panel group variable. align_kmeans(): Group layout axis panel kmeans align_reorder(): Reorders layout observations based weights summary statistics. align_dendro(): Reorder Group layout based hierarchical clustering detailed instructions customizing layouts, see vignette: vignette(\"layout-customize\"). Additionally, plots can added layout following functions: align_gg()/ggalign(): Create ggplot object customized data. align_panel()/ggpanel(): Create ggplot object layout panel data. information adding plots, refer vignette: vignette(\"layout-plot\").","code":""}]
